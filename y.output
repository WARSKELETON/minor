   0  $accept : file $end

   1  file : program
   2       | module

   3  $$1 :

   4  program : PROGRAM decls START $$1 bodyprincipal END

   5  $$2 :

   6  program : PROGRAM START $$2 bodyprincipal END

   7  module : MODULE decls END
   8         | MODULE END

   9  decls : decl
  10        | decls ';' decl

  11  decl : func
  12       | qualifier CONST var ATTR literal
  13       | qualifier var ATTR literal
  14       | qualifier var
  15       | qualifier CONST var
  16       | CONST var
  17       | CONST var ATTR literal
  18       | var
  19       | var ATTR literal
  20       | error

  21  $$3 :

  22  func : FUNCTION qualifier functype ID $$3 params funcend

  23  $$4 :

  24  func : FUNCTION functype ID $$4 params funcend

  25  $$5 :

  26  func : FUNCTION qualifier functype ID $$5 funcend

  27  $$6 :

  28  func : FUNCTION functype ID $$6 funcend

  29  funcend : DONE
  30          | DO body

  31  functype : type
  32           | VOID

  33  qualifier : PUBLIC
  34            | FORWARD

  35  params : param
  36         | params ';' param

  37  param : STRING ID
  38        | NUMBER ID
  39        | ARRAY ID '[' INTEGER ']'

  40  var : STRING ID
  41      | NUMBER ID
  42      | ARRAY ID '[' INTEGER ']'
  43      | ARRAY ID

  44  type : NUMBER
  45       | ARRAY
  46       | STRING

  47  bodyprincipal : bodyvars bodyinstrs
  48                | bodyinstrs

  49  body : bodyvars blockfunc
  50       | blockfunc

  51  bodyinstrs :
  52             | instrs

  53  bodyvars : var ';'
  54           | bodyvars var ';'

  55  instr : IF expr THEN block FI
  56        | IF expr THEN block elifs ELSE block FI
  57        | IF expr THEN block elifs FI
  58        | IF expr THEN block ELSE block FI

  59  $$7 :

  60  instr : FOR expr UNTIL expr STEP expr DO $$7 block DONE
  61        | expr ';'
  62        | error ';'
  63        | expr '!'
  64        | lvalue '#' expr ';'

  65  instrterm : REPEAT
  66            | STOP
  67            | RETURN expr
  68            | RETURN

  69  elif : ELIF expr THEN block

  70  elifs : elif
  71        | elifs elif

  72  block :
  73        | instrterm
  74        | instrs
  75        | instrs instrterm

  76  blockfunc :
  77            | instrterm
  78            | instrs
  79            | instrs instrterm

  80  instrs : instr
  81         | instrs instr

  82  lvalue : ID
  83         | ID '[' expr ']'
  84         | string '[' expr ']'
  85         | ID '(' args ')' '[' expr ']'
  86         | ID '(' ')' '[' expr ']'

  87  expr : lvalue
  88       | '(' expr ')'
  89       | ID '(' args ')'
  90       | ID '(' ')'
  91       | string
  92       | integer
  93       | '-' expr
  94       | '&' lvalue
  95       | expr '^' expr
  96       | expr '+' expr
  97       | expr '-' expr
  98       | expr '*' expr
  99       | expr '/' expr
 100       | expr '%' expr
 101       | expr '<' expr
 102       | expr '>' expr
 103       | expr GE expr
 104       | expr LE expr
 105       | expr NE expr
 106       | expr '=' expr
 107       | lvalue ATTR expr
 108       | expr '&' expr
 109       | expr '|' expr
 110       | '~' expr
 111       | '?'

 112  literal : string
 113          | integerlist

 114  integer : INTEGER
 115          | CHAR

 116  string : integer integer
 117         | STR
 118         | string STR
 119         | string integer

 120  integerlist : INTEGER
 121              | integerlist ',' INTEGER

 122  args : expr
 123       | args ',' expr

state 0
	$accept : . file $end  (0)

	PROGRAM  shift 1
	MODULE  shift 2
	.  error

	file  goto 3
	program  goto 4
	module  goto 5


state 1
	program : PROGRAM . decls START $$1 bodyprincipal END  (4)
	program : PROGRAM . START $$2 bodyprincipal END  (6)

	error  shift 6
	START  shift 7
	FUNCTION  shift 8
	PUBLIC  shift 9
	FORWARD  shift 10
	NUMBER  shift 11
	ARRAY  shift 12
	STRING  shift 13
	CONST  shift 14
	.  error

	decls  goto 15
	decl  goto 16
	func  goto 17
	qualifier  goto 18
	var  goto 19


state 2
	module : MODULE . decls END  (7)
	module : MODULE . END  (8)

	error  shift 6
	END  shift 20
	FUNCTION  shift 8
	PUBLIC  shift 9
	FORWARD  shift 10
	NUMBER  shift 11
	ARRAY  shift 12
	STRING  shift 13
	CONST  shift 14
	.  error

	decls  goto 21
	decl  goto 16
	func  goto 17
	qualifier  goto 18
	var  goto 19


state 3
	$accept : file . $end  (0)

	$end  accept


state 4
	file : program .  (1)

	.  reduce 1


state 5
	file : module .  (2)

	.  reduce 2


state 6
	decl : error .  (20)

	.  reduce 20


state 7
	program : PROGRAM START . $$2 bodyprincipal END  (6)
	$$2 : .  (5)

	.  reduce 5

	$$2  goto 22


state 8
	func : FUNCTION . qualifier functype ID $$3 params funcend  (22)
	func : FUNCTION . functype ID $$4 params funcend  (24)
	func : FUNCTION . qualifier functype ID $$5 funcend  (26)
	func : FUNCTION . functype ID $$6 funcend  (28)

	PUBLIC  shift 9
	FORWARD  shift 10
	NUMBER  shift 23
	ARRAY  shift 24
	VOID  shift 25
	STRING  shift 26
	.  error

	functype  goto 27
	qualifier  goto 28
	type  goto 29


state 9
	qualifier : PUBLIC .  (33)

	.  reduce 33


state 10
	qualifier : FORWARD .  (34)

	.  reduce 34


state 11
	var : NUMBER . ID  (41)

	ID  shift 30
	.  error


state 12
	var : ARRAY . ID '[' INTEGER ']'  (42)
	var : ARRAY . ID  (43)

	ID  shift 31
	.  error


state 13
	var : STRING . ID  (40)

	ID  shift 32
	.  error


state 14
	decl : CONST . var  (16)
	decl : CONST . var ATTR literal  (17)

	NUMBER  shift 11
	ARRAY  shift 12
	STRING  shift 13
	.  error

	var  goto 33


state 15
	program : PROGRAM decls . START $$1 bodyprincipal END  (4)
	decls : decls . ';' decl  (10)

	START  shift 34
	';'  shift 35
	.  error


state 16
	decls : decl .  (9)

	.  reduce 9


state 17
	decl : func .  (11)

	.  reduce 11


state 18
	decl : qualifier . CONST var ATTR literal  (12)
	decl : qualifier . var ATTR literal  (13)
	decl : qualifier . var  (14)
	decl : qualifier . CONST var  (15)

	NUMBER  shift 11
	ARRAY  shift 12
	STRING  shift 13
	CONST  shift 36
	.  error

	var  goto 37


state 19
	decl : var .  (18)
	decl : var . ATTR literal  (19)

	ATTR  shift 38
	START  reduce 18
	END  reduce 18
	';'  reduce 18


state 20
	module : MODULE END .  (8)

	.  reduce 8


state 21
	module : MODULE decls . END  (7)
	decls : decls . ';' decl  (10)

	END  shift 39
	';'  shift 35
	.  error


state 22
	program : PROGRAM START $$2 . bodyprincipal END  (6)
	bodyinstrs : .  (51)

	error  shift 40
	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	NUMBER  shift 11
	ARRAY  shift 12
	STRING  shift 13
	IF  shift 45
	FOR  shift 46
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	END  reduce 51

	bodyprincipal  goto 52
	bodyinstrs  goto 53
	bodyvars  goto 54
	var  goto 55
	instr  goto 56
	instrs  goto 57
	lvalue  goto 58
	expr  goto 59
	integer  goto 60
	string  goto 61


state 23
	type : NUMBER .  (44)

	.  reduce 44


state 24
	type : ARRAY .  (45)

	.  reduce 45


state 25
	functype : VOID .  (32)

	.  reduce 32


state 26
	type : STRING .  (46)

	.  reduce 46


state 27
	func : FUNCTION functype . ID $$4 params funcend  (24)
	func : FUNCTION functype . ID $$6 funcend  (28)

	ID  shift 62
	.  error


state 28
	func : FUNCTION qualifier . functype ID $$3 params funcend  (22)
	func : FUNCTION qualifier . functype ID $$5 funcend  (26)

	NUMBER  shift 23
	ARRAY  shift 24
	VOID  shift 25
	STRING  shift 26
	.  error

	functype  goto 63
	type  goto 29


state 29
	functype : type .  (31)

	.  reduce 31


state 30
	var : NUMBER ID .  (41)

	.  reduce 41


state 31
	var : ARRAY ID . '[' INTEGER ']'  (42)
	var : ARRAY ID .  (43)

	'['  shift 64
	START  reduce 43
	END  reduce 43
	ATTR  reduce 43
	';'  reduce 43


state 32
	var : STRING ID .  (40)

	.  reduce 40


state 33
	decl : CONST var .  (16)
	decl : CONST var . ATTR literal  (17)

	ATTR  shift 65
	START  reduce 16
	END  reduce 16
	';'  reduce 16


state 34
	program : PROGRAM decls START . $$1 bodyprincipal END  (4)
	$$1 : .  (3)

	.  reduce 3

	$$1  goto 66


state 35
	decls : decls ';' . decl  (10)

	error  shift 6
	FUNCTION  shift 8
	PUBLIC  shift 9
	FORWARD  shift 10
	NUMBER  shift 11
	ARRAY  shift 12
	STRING  shift 13
	CONST  shift 14
	.  error

	decl  goto 67
	func  goto 17
	qualifier  goto 18
	var  goto 19


state 36
	decl : qualifier CONST . var ATTR literal  (12)
	decl : qualifier CONST . var  (15)

	NUMBER  shift 11
	ARRAY  shift 12
	STRING  shift 13
	.  error

	var  goto 68


state 37
	decl : qualifier var . ATTR literal  (13)
	decl : qualifier var .  (14)

	ATTR  shift 69
	START  reduce 14
	END  reduce 14
	';'  reduce 14


state 38
	decl : var ATTR . literal  (19)

	INTEGER  shift 70
	CHAR  shift 42
	STR  shift 44
	.  error

	literal  goto 71
	integer  goto 72
	integerlist  goto 73
	string  goto 74


state 39
	module : MODULE decls END .  (7)

	.  reduce 7


state 40
	instr : error . ';'  (62)

	';'  shift 75
	.  error


state 41
	integer : INTEGER .  (114)

	.  reduce 114


state 42
	integer : CHAR .  (115)

	.  reduce 115


state 43
	lvalue : ID .  (82)
	lvalue : ID . '[' expr ']'  (83)
	lvalue : ID . '(' args ')' '[' expr ']'  (85)
	lvalue : ID . '(' ')' '[' expr ']'  (86)
	expr : ID . '(' args ')'  (89)
	expr : ID . '(' ')'  (90)

	'('  shift 76
	'['  shift 77
	START  reduce 82
	END  reduce 82
	DONE  reduce 82
	DO  reduce 82
	THEN  reduce 82
	ELSE  reduce 82
	ELIF  reduce 82
	FI  reduce 82
	UNTIL  reduce 82
	STEP  reduce 82
	ATTR  reduce 82
	'|'  reduce 82
	'&'  reduce 82
	NE  reduce 82
	'='  reduce 82
	'<'  reduce 82
	'>'  reduce 82
	LE  reduce 82
	GE  reduce 82
	'+'  reduce 82
	'-'  reduce 82
	'*'  reduce 82
	'/'  reduce 82
	'%'  reduce 82
	'^'  reduce 82
	';'  reduce 82
	']'  reduce 82
	'!'  reduce 82
	'#'  reduce 82
	')'  reduce 82
	','  reduce 82


state 44
	string : STR .  (117)

	.  reduce 117


state 45
	instr : IF . expr THEN block FI  (55)
	instr : IF . expr THEN block elifs ELSE block FI  (56)
	instr : IF . expr THEN block elifs FI  (57)
	instr : IF . expr THEN block ELSE block FI  (58)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 79
	integer  goto 60
	string  goto 61


state 46
	instr : FOR . expr UNTIL expr STEP expr DO $$7 block DONE  (60)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 80
	integer  goto 60
	string  goto 61


state 47
	expr : '&' . lvalue  (94)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 81
	STR  shift 44
	.  error

	lvalue  goto 82
	integer  goto 72
	string  goto 83


state 48
	expr : '~' . expr  (110)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 84
	integer  goto 60
	string  goto 61


state 49
	expr : '-' . expr  (93)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 85
	integer  goto 60
	string  goto 61


state 50
	expr : '?' .  (111)

	.  reduce 111


state 51
	expr : '(' . expr ')'  (88)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 86
	integer  goto 60
	string  goto 61


state 52
	program : PROGRAM START $$2 bodyprincipal . END  (6)

	END  shift 87
	.  error


state 53
	bodyprincipal : bodyinstrs .  (48)

	.  reduce 48


state 54
	bodyprincipal : bodyvars . bodyinstrs  (47)
	bodyvars : bodyvars . var ';'  (54)
	bodyinstrs : .  (51)

	error  shift 40
	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	NUMBER  shift 11
	ARRAY  shift 12
	STRING  shift 13
	IF  shift 45
	FOR  shift 46
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	END  reduce 51

	bodyinstrs  goto 88
	var  goto 89
	instr  goto 56
	instrs  goto 57
	lvalue  goto 58
	expr  goto 59
	integer  goto 60
	string  goto 61


state 55
	bodyvars : var . ';'  (53)

	';'  shift 90
	.  error


state 56
	instrs : instr .  (80)

	.  reduce 80


state 57
	bodyinstrs : instrs .  (52)
	instrs : instrs . instr  (81)

	error  shift 40
	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	IF  shift 45
	FOR  shift 46
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	END  reduce 52

	instr  goto 91
	lvalue  goto 58
	expr  goto 59
	integer  goto 60
	string  goto 61


state 58
	instr : lvalue . '#' expr ';'  (64)
	expr : lvalue .  (87)
	expr : lvalue . ATTR expr  (107)

	ATTR  shift 92
	'#'  shift 93
	'|'  reduce 87
	'&'  reduce 87
	NE  reduce 87
	'='  reduce 87
	'<'  reduce 87
	'>'  reduce 87
	LE  reduce 87
	GE  reduce 87
	'+'  reduce 87
	'-'  reduce 87
	'*'  reduce 87
	'/'  reduce 87
	'%'  reduce 87
	'^'  reduce 87
	';'  reduce 87
	'!'  reduce 87


state 59
	instr : expr . ';'  (61)
	instr : expr . '!'  (63)
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	';'  shift 108
	'!'  shift 109
	.  error


state 60
	expr : integer .  (92)
	string : integer . integer  (116)

	INTEGER  shift 41
	CHAR  shift 42
	START  reduce 92
	END  reduce 92
	DONE  reduce 92
	DO  reduce 92
	THEN  reduce 92
	ELSE  reduce 92
	ELIF  reduce 92
	FI  reduce 92
	UNTIL  reduce 92
	STEP  reduce 92
	'|'  reduce 92
	'&'  reduce 92
	NE  reduce 92
	'='  reduce 92
	'<'  reduce 92
	'>'  reduce 92
	LE  reduce 92
	GE  reduce 92
	'+'  reduce 92
	'-'  reduce 92
	'*'  reduce 92
	'/'  reduce 92
	'%'  reduce 92
	'^'  reduce 92
	';'  reduce 92
	']'  reduce 92
	'!'  reduce 92
	')'  reduce 92
	','  reduce 92

	integer  goto 110


state 61
	lvalue : string . '[' expr ']'  (84)
	expr : string .  (91)
	string : string . STR  (118)
	string : string . integer  (119)

	INTEGER  shift 41
	CHAR  shift 42
	STR  shift 111
	'['  shift 112
	START  reduce 91
	END  reduce 91
	DONE  reduce 91
	DO  reduce 91
	THEN  reduce 91
	ELSE  reduce 91
	ELIF  reduce 91
	FI  reduce 91
	UNTIL  reduce 91
	STEP  reduce 91
	'|'  reduce 91
	'&'  reduce 91
	NE  reduce 91
	'='  reduce 91
	'<'  reduce 91
	'>'  reduce 91
	LE  reduce 91
	GE  reduce 91
	'+'  reduce 91
	'-'  reduce 91
	'*'  reduce 91
	'/'  reduce 91
	'%'  reduce 91
	'^'  reduce 91
	';'  reduce 91
	']'  reduce 91
	'!'  reduce 91
	')'  reduce 91
	','  reduce 91

	integer  goto 113


state 62
	func : FUNCTION functype ID . $$4 params funcend  (24)
	func : FUNCTION functype ID . $$6 funcend  (28)
	$$4 : .  (23)
	$$6 : .  (27)

	NUMBER  reduce 23
	ARRAY  reduce 23
	STRING  reduce 23
	DONE  reduce 27
	DO  reduce 27

	$$4  goto 114
	$$6  goto 115


state 63
	func : FUNCTION qualifier functype . ID $$3 params funcend  (22)
	func : FUNCTION qualifier functype . ID $$5 funcend  (26)

	ID  shift 116
	.  error


state 64
	var : ARRAY ID '[' . INTEGER ']'  (42)

	INTEGER  shift 117
	.  error


state 65
	decl : CONST var ATTR . literal  (17)

	INTEGER  shift 70
	CHAR  shift 42
	STR  shift 44
	.  error

	literal  goto 118
	integer  goto 72
	integerlist  goto 73
	string  goto 74


state 66
	program : PROGRAM decls START $$1 . bodyprincipal END  (4)
	bodyinstrs : .  (51)

	error  shift 40
	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	NUMBER  shift 11
	ARRAY  shift 12
	STRING  shift 13
	IF  shift 45
	FOR  shift 46
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	END  reduce 51

	bodyprincipal  goto 119
	bodyinstrs  goto 53
	bodyvars  goto 54
	var  goto 55
	instr  goto 56
	instrs  goto 57
	lvalue  goto 58
	expr  goto 59
	integer  goto 60
	string  goto 61


state 67
	decls : decls ';' decl .  (10)

	.  reduce 10


state 68
	decl : qualifier CONST var . ATTR literal  (12)
	decl : qualifier CONST var .  (15)

	ATTR  shift 120
	START  reduce 15
	END  reduce 15
	';'  reduce 15


state 69
	decl : qualifier var ATTR . literal  (13)

	INTEGER  shift 70
	CHAR  shift 42
	STR  shift 44
	.  error

	literal  goto 121
	integer  goto 72
	integerlist  goto 73
	string  goto 74


state 70
	integer : INTEGER .  (114)
	integerlist : INTEGER .  (120)

	INTEGER  reduce 114
	CHAR  reduce 114
	START  reduce 120
	END  reduce 120
	';'  reduce 120
	','  reduce 120


state 71
	decl : var ATTR literal .  (19)

	.  reduce 19


state 72
	string : integer . integer  (116)

	INTEGER  shift 41
	CHAR  shift 42
	.  error

	integer  goto 110


state 73
	literal : integerlist .  (113)
	integerlist : integerlist . ',' INTEGER  (121)

	','  shift 122
	START  reduce 113
	END  reduce 113
	';'  reduce 113


state 74
	literal : string .  (112)
	string : string . STR  (118)
	string : string . integer  (119)

	INTEGER  shift 41
	CHAR  shift 42
	STR  shift 111
	START  reduce 112
	END  reduce 112
	';'  reduce 112

	integer  goto 113


state 75
	instr : error ';' .  (62)

	.  reduce 62


state 76
	lvalue : ID '(' . args ')' '[' expr ']'  (85)
	lvalue : ID '(' . ')' '[' expr ']'  (86)
	expr : ID '(' . args ')'  (89)
	expr : ID '(' . ')'  (90)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	')'  shift 123
	.  error

	lvalue  goto 78
	expr  goto 124
	integer  goto 60
	string  goto 61
	args  goto 125


state 77
	lvalue : ID '[' . expr ']'  (83)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 126
	integer  goto 60
	string  goto 61


state 78
	expr : lvalue .  (87)
	expr : lvalue . ATTR expr  (107)

	ATTR  shift 92
	START  reduce 87
	END  reduce 87
	DONE  reduce 87
	DO  reduce 87
	THEN  reduce 87
	ELSE  reduce 87
	ELIF  reduce 87
	FI  reduce 87
	UNTIL  reduce 87
	STEP  reduce 87
	'|'  reduce 87
	'&'  reduce 87
	NE  reduce 87
	'='  reduce 87
	'<'  reduce 87
	'>'  reduce 87
	LE  reduce 87
	GE  reduce 87
	'+'  reduce 87
	'-'  reduce 87
	'*'  reduce 87
	'/'  reduce 87
	'%'  reduce 87
	'^'  reduce 87
	';'  reduce 87
	']'  reduce 87
	'!'  reduce 87
	')'  reduce 87
	','  reduce 87


state 79
	instr : IF expr . THEN block FI  (55)
	instr : IF expr . THEN block elifs ELSE block FI  (56)
	instr : IF expr . THEN block elifs FI  (57)
	instr : IF expr . THEN block ELSE block FI  (58)
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	THEN  shift 127
	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	.  error


state 80
	instr : FOR expr . UNTIL expr STEP expr DO $$7 block DONE  (60)
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	UNTIL  shift 128
	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	.  error


state 81
	lvalue : ID .  (82)
	lvalue : ID . '[' expr ']'  (83)
	lvalue : ID . '(' args ')' '[' expr ']'  (85)
	lvalue : ID . '(' ')' '[' expr ']'  (86)

	'('  shift 129
	'['  shift 77
	START  reduce 82
	END  reduce 82
	DONE  reduce 82
	DO  reduce 82
	THEN  reduce 82
	ELSE  reduce 82
	ELIF  reduce 82
	FI  reduce 82
	UNTIL  reduce 82
	STEP  reduce 82
	'|'  reduce 82
	'&'  reduce 82
	NE  reduce 82
	'='  reduce 82
	'<'  reduce 82
	'>'  reduce 82
	LE  reduce 82
	GE  reduce 82
	'+'  reduce 82
	'-'  reduce 82
	'*'  reduce 82
	'/'  reduce 82
	'%'  reduce 82
	'^'  reduce 82
	';'  reduce 82
	']'  reduce 82
	'!'  reduce 82
	')'  reduce 82
	','  reduce 82


state 82
	expr : '&' lvalue .  (94)

	.  reduce 94


state 83
	lvalue : string . '[' expr ']'  (84)
	string : string . STR  (118)
	string : string . integer  (119)

	INTEGER  shift 41
	CHAR  shift 42
	STR  shift 111
	'['  shift 112
	.  error

	integer  goto 113


state 84
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)
	expr : '~' expr .  (110)

	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	START  reduce 110
	END  reduce 110
	DONE  reduce 110
	DO  reduce 110
	THEN  reduce 110
	ELSE  reduce 110
	ELIF  reduce 110
	FI  reduce 110
	UNTIL  reduce 110
	STEP  reduce 110
	'|'  reduce 110
	'&'  reduce 110
	';'  reduce 110
	']'  reduce 110
	'!'  reduce 110
	')'  reduce 110
	','  reduce 110


state 85
	expr : '-' expr .  (93)
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	.  reduce 93


state 86
	expr : '(' expr . ')'  (88)
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	')'  shift 130
	.  error


state 87
	program : PROGRAM START $$2 bodyprincipal END .  (6)

	.  reduce 6


state 88
	bodyprincipal : bodyvars bodyinstrs .  (47)

	.  reduce 47


state 89
	bodyvars : bodyvars var . ';'  (54)

	';'  shift 131
	.  error


state 90
	bodyvars : var ';' .  (53)

	.  reduce 53


state 91
	instrs : instrs instr .  (81)

	.  reduce 81


state 92
	expr : lvalue ATTR . expr  (107)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 132
	integer  goto 60
	string  goto 61


state 93
	instr : lvalue '#' . expr ';'  (64)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 133
	integer  goto 60
	string  goto 61


state 94
	expr : expr '|' . expr  (109)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 134
	integer  goto 60
	string  goto 61


state 95
	expr : expr '&' . expr  (108)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 135
	integer  goto 60
	string  goto 61


state 96
	expr : expr NE . expr  (105)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 136
	integer  goto 60
	string  goto 61


state 97
	expr : expr '=' . expr  (106)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 137
	integer  goto 60
	string  goto 61


state 98
	expr : expr '<' . expr  (101)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 138
	integer  goto 60
	string  goto 61


state 99
	expr : expr '>' . expr  (102)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 139
	integer  goto 60
	string  goto 61


state 100
	expr : expr LE . expr  (104)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 140
	integer  goto 60
	string  goto 61


state 101
	expr : expr GE . expr  (103)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 141
	integer  goto 60
	string  goto 61


state 102
	expr : expr '+' . expr  (96)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 142
	integer  goto 60
	string  goto 61


state 103
	expr : expr '-' . expr  (97)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 143
	integer  goto 60
	string  goto 61


state 104
	expr : expr '*' . expr  (98)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 144
	integer  goto 60
	string  goto 61


state 105
	expr : expr '/' . expr  (99)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 145
	integer  goto 60
	string  goto 61


state 106
	expr : expr '%' . expr  (100)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 146
	integer  goto 60
	string  goto 61


state 107
	expr : expr '^' . expr  (95)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 147
	integer  goto 60
	string  goto 61


state 108
	instr : expr ';' .  (61)

	.  reduce 61


state 109
	instr : expr '!' .  (63)

	.  reduce 63


state 110
	string : integer integer .  (116)

	.  reduce 116


state 111
	string : string STR .  (118)

	.  reduce 118


state 112
	lvalue : string '[' . expr ']'  (84)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 148
	integer  goto 60
	string  goto 61


state 113
	string : string integer .  (119)

	.  reduce 119


state 114
	func : FUNCTION functype ID $$4 . params funcend  (24)

	NUMBER  shift 149
	ARRAY  shift 150
	STRING  shift 151
	.  error

	params  goto 152
	param  goto 153


state 115
	func : FUNCTION functype ID $$6 . funcend  (28)

	DONE  shift 154
	DO  shift 155
	.  error

	funcend  goto 156


state 116
	func : FUNCTION qualifier functype ID . $$3 params funcend  (22)
	func : FUNCTION qualifier functype ID . $$5 funcend  (26)
	$$3 : .  (21)
	$$5 : .  (25)

	NUMBER  reduce 21
	ARRAY  reduce 21
	STRING  reduce 21
	DONE  reduce 25
	DO  reduce 25

	$$3  goto 157
	$$5  goto 158


state 117
	var : ARRAY ID '[' INTEGER . ']'  (42)

	']'  shift 159
	.  error


state 118
	decl : CONST var ATTR literal .  (17)

	.  reduce 17


state 119
	program : PROGRAM decls START $$1 bodyprincipal . END  (4)

	END  shift 160
	.  error


state 120
	decl : qualifier CONST var ATTR . literal  (12)

	INTEGER  shift 70
	CHAR  shift 42
	STR  shift 44
	.  error

	literal  goto 161
	integer  goto 72
	integerlist  goto 73
	string  goto 74


state 121
	decl : qualifier var ATTR literal .  (13)

	.  reduce 13


state 122
	integerlist : integerlist ',' . INTEGER  (121)

	INTEGER  shift 162
	.  error


state 123
	lvalue : ID '(' ')' . '[' expr ']'  (86)
	expr : ID '(' ')' .  (90)

	'['  shift 163
	START  reduce 90
	END  reduce 90
	DONE  reduce 90
	DO  reduce 90
	THEN  reduce 90
	ELSE  reduce 90
	ELIF  reduce 90
	FI  reduce 90
	UNTIL  reduce 90
	STEP  reduce 90
	'|'  reduce 90
	'&'  reduce 90
	NE  reduce 90
	'='  reduce 90
	'<'  reduce 90
	'>'  reduce 90
	LE  reduce 90
	GE  reduce 90
	'+'  reduce 90
	'-'  reduce 90
	'*'  reduce 90
	'/'  reduce 90
	'%'  reduce 90
	'^'  reduce 90
	';'  reduce 90
	']'  reduce 90
	'!'  reduce 90
	')'  reduce 90
	','  reduce 90


state 124
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)
	args : expr .  (122)

	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	')'  reduce 122
	','  reduce 122


state 125
	lvalue : ID '(' args . ')' '[' expr ']'  (85)
	expr : ID '(' args . ')'  (89)
	args : args . ',' expr  (123)

	')'  shift 164
	','  shift 165
	.  error


state 126
	lvalue : ID '[' expr . ']'  (83)
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	']'  shift 166
	.  error


state 127
	instr : IF expr THEN . block FI  (55)
	instr : IF expr THEN . block elifs ELSE block FI  (56)
	instr : IF expr THEN . block elifs FI  (57)
	instr : IF expr THEN . block ELSE block FI  (58)
	block : .  (72)

	error  shift 40
	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	IF  shift 45
	FOR  shift 46
	REPEAT  shift 167
	STOP  shift 168
	RETURN  shift 169
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	ELSE  reduce 72
	ELIF  reduce 72
	FI  reduce 72

	instr  goto 56
	instrterm  goto 170
	block  goto 171
	instrs  goto 172
	lvalue  goto 58
	expr  goto 59
	integer  goto 60
	string  goto 61


state 128
	instr : FOR expr UNTIL . expr STEP expr DO $$7 block DONE  (60)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 173
	integer  goto 60
	string  goto 61


state 129
	lvalue : ID '(' . args ')' '[' expr ']'  (85)
	lvalue : ID '(' . ')' '[' expr ']'  (86)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	')'  shift 174
	.  error

	lvalue  goto 78
	expr  goto 124
	integer  goto 60
	string  goto 61
	args  goto 175


state 130
	expr : '(' expr ')' .  (88)

	.  reduce 88


state 131
	bodyvars : bodyvars var ';' .  (54)

	.  reduce 54


state 132
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : lvalue ATTR expr .  (107)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	START  reduce 107
	END  reduce 107
	DONE  reduce 107
	DO  reduce 107
	THEN  reduce 107
	ELSE  reduce 107
	ELIF  reduce 107
	FI  reduce 107
	UNTIL  reduce 107
	STEP  reduce 107
	';'  reduce 107
	']'  reduce 107
	'!'  reduce 107
	')'  reduce 107
	','  reduce 107


state 133
	instr : lvalue '#' expr . ';'  (64)
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	';'  shift 176
	.  error


state 134
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)
	expr : expr '|' expr .  (109)

	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	START  reduce 109
	END  reduce 109
	DONE  reduce 109
	DO  reduce 109
	THEN  reduce 109
	ELSE  reduce 109
	ELIF  reduce 109
	FI  reduce 109
	UNTIL  reduce 109
	STEP  reduce 109
	'|'  reduce 109
	';'  reduce 109
	']'  reduce 109
	'!'  reduce 109
	')'  reduce 109
	','  reduce 109


state 135
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr '&' expr .  (108)
	expr : expr . '|' expr  (109)

	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	START  reduce 108
	END  reduce 108
	DONE  reduce 108
	DO  reduce 108
	THEN  reduce 108
	ELSE  reduce 108
	ELIF  reduce 108
	FI  reduce 108
	UNTIL  reduce 108
	STEP  reduce 108
	'|'  reduce 108
	'&'  reduce 108
	';'  reduce 108
	']'  reduce 108
	'!'  reduce 108
	')'  reduce 108
	','  reduce 108


state 136
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr NE expr .  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	START  reduce 105
	END  reduce 105
	DONE  reduce 105
	DO  reduce 105
	THEN  reduce 105
	ELSE  reduce 105
	ELIF  reduce 105
	FI  reduce 105
	UNTIL  reduce 105
	STEP  reduce 105
	'|'  reduce 105
	'&'  reduce 105
	NE  reduce 105
	'='  reduce 105
	';'  reduce 105
	']'  reduce 105
	'!'  reduce 105
	')'  reduce 105
	','  reduce 105


state 137
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr '=' expr .  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	START  reduce 106
	END  reduce 106
	DONE  reduce 106
	DO  reduce 106
	THEN  reduce 106
	ELSE  reduce 106
	ELIF  reduce 106
	FI  reduce 106
	UNTIL  reduce 106
	STEP  reduce 106
	'|'  reduce 106
	'&'  reduce 106
	NE  reduce 106
	'='  reduce 106
	';'  reduce 106
	']'  reduce 106
	'!'  reduce 106
	')'  reduce 106
	','  reduce 106


state 138
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr '<' expr .  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	START  reduce 101
	END  reduce 101
	DONE  reduce 101
	DO  reduce 101
	THEN  reduce 101
	ELSE  reduce 101
	ELIF  reduce 101
	FI  reduce 101
	UNTIL  reduce 101
	STEP  reduce 101
	'|'  reduce 101
	'&'  reduce 101
	NE  reduce 101
	'='  reduce 101
	'<'  reduce 101
	'>'  reduce 101
	LE  reduce 101
	GE  reduce 101
	';'  reduce 101
	']'  reduce 101
	'!'  reduce 101
	')'  reduce 101
	','  reduce 101


state 139
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr '>' expr .  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	START  reduce 102
	END  reduce 102
	DONE  reduce 102
	DO  reduce 102
	THEN  reduce 102
	ELSE  reduce 102
	ELIF  reduce 102
	FI  reduce 102
	UNTIL  reduce 102
	STEP  reduce 102
	'|'  reduce 102
	'&'  reduce 102
	NE  reduce 102
	'='  reduce 102
	'<'  reduce 102
	'>'  reduce 102
	LE  reduce 102
	GE  reduce 102
	';'  reduce 102
	']'  reduce 102
	'!'  reduce 102
	')'  reduce 102
	','  reduce 102


state 140
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr LE expr .  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	START  reduce 104
	END  reduce 104
	DONE  reduce 104
	DO  reduce 104
	THEN  reduce 104
	ELSE  reduce 104
	ELIF  reduce 104
	FI  reduce 104
	UNTIL  reduce 104
	STEP  reduce 104
	'|'  reduce 104
	'&'  reduce 104
	NE  reduce 104
	'='  reduce 104
	'<'  reduce 104
	'>'  reduce 104
	LE  reduce 104
	GE  reduce 104
	';'  reduce 104
	']'  reduce 104
	'!'  reduce 104
	')'  reduce 104
	','  reduce 104


state 141
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr GE expr .  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	START  reduce 103
	END  reduce 103
	DONE  reduce 103
	DO  reduce 103
	THEN  reduce 103
	ELSE  reduce 103
	ELIF  reduce 103
	FI  reduce 103
	UNTIL  reduce 103
	STEP  reduce 103
	'|'  reduce 103
	'&'  reduce 103
	NE  reduce 103
	'='  reduce 103
	'<'  reduce 103
	'>'  reduce 103
	LE  reduce 103
	GE  reduce 103
	';'  reduce 103
	']'  reduce 103
	'!'  reduce 103
	')'  reduce 103
	','  reduce 103


state 142
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr '+' expr .  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	START  reduce 96
	END  reduce 96
	DONE  reduce 96
	DO  reduce 96
	THEN  reduce 96
	ELSE  reduce 96
	ELIF  reduce 96
	FI  reduce 96
	UNTIL  reduce 96
	STEP  reduce 96
	'|'  reduce 96
	'&'  reduce 96
	NE  reduce 96
	'='  reduce 96
	'<'  reduce 96
	'>'  reduce 96
	LE  reduce 96
	GE  reduce 96
	'+'  reduce 96
	'-'  reduce 96
	';'  reduce 96
	']'  reduce 96
	'!'  reduce 96
	')'  reduce 96
	','  reduce 96


state 143
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr '-' expr .  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	START  reduce 97
	END  reduce 97
	DONE  reduce 97
	DO  reduce 97
	THEN  reduce 97
	ELSE  reduce 97
	ELIF  reduce 97
	FI  reduce 97
	UNTIL  reduce 97
	STEP  reduce 97
	'|'  reduce 97
	'&'  reduce 97
	NE  reduce 97
	'='  reduce 97
	'<'  reduce 97
	'>'  reduce 97
	LE  reduce 97
	GE  reduce 97
	'+'  reduce 97
	'-'  reduce 97
	';'  reduce 97
	']'  reduce 97
	'!'  reduce 97
	')'  reduce 97
	','  reduce 97


state 144
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr '*' expr .  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'^'  shift 107
	START  reduce 98
	END  reduce 98
	DONE  reduce 98
	DO  reduce 98
	THEN  reduce 98
	ELSE  reduce 98
	ELIF  reduce 98
	FI  reduce 98
	UNTIL  reduce 98
	STEP  reduce 98
	'|'  reduce 98
	'&'  reduce 98
	NE  reduce 98
	'='  reduce 98
	'<'  reduce 98
	'>'  reduce 98
	LE  reduce 98
	GE  reduce 98
	'+'  reduce 98
	'-'  reduce 98
	'*'  reduce 98
	'/'  reduce 98
	'%'  reduce 98
	';'  reduce 98
	']'  reduce 98
	'!'  reduce 98
	')'  reduce 98
	','  reduce 98


state 145
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr '/' expr .  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'^'  shift 107
	START  reduce 99
	END  reduce 99
	DONE  reduce 99
	DO  reduce 99
	THEN  reduce 99
	ELSE  reduce 99
	ELIF  reduce 99
	FI  reduce 99
	UNTIL  reduce 99
	STEP  reduce 99
	'|'  reduce 99
	'&'  reduce 99
	NE  reduce 99
	'='  reduce 99
	'<'  reduce 99
	'>'  reduce 99
	LE  reduce 99
	GE  reduce 99
	'+'  reduce 99
	'-'  reduce 99
	'*'  reduce 99
	'/'  reduce 99
	'%'  reduce 99
	';'  reduce 99
	']'  reduce 99
	'!'  reduce 99
	')'  reduce 99
	','  reduce 99


state 146
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr '%' expr .  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'^'  shift 107
	START  reduce 100
	END  reduce 100
	DONE  reduce 100
	DO  reduce 100
	THEN  reduce 100
	ELSE  reduce 100
	ELIF  reduce 100
	FI  reduce 100
	UNTIL  reduce 100
	STEP  reduce 100
	'|'  reduce 100
	'&'  reduce 100
	NE  reduce 100
	'='  reduce 100
	'<'  reduce 100
	'>'  reduce 100
	LE  reduce 100
	GE  reduce 100
	'+'  reduce 100
	'-'  reduce 100
	'*'  reduce 100
	'/'  reduce 100
	'%'  reduce 100
	';'  reduce 100
	']'  reduce 100
	'!'  reduce 100
	')'  reduce 100
	','  reduce 100


state 147
	expr : expr . '^' expr  (95)
	expr : expr '^' expr .  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'^'  shift 107
	START  reduce 95
	END  reduce 95
	DONE  reduce 95
	DO  reduce 95
	THEN  reduce 95
	ELSE  reduce 95
	ELIF  reduce 95
	FI  reduce 95
	UNTIL  reduce 95
	STEP  reduce 95
	'|'  reduce 95
	'&'  reduce 95
	NE  reduce 95
	'='  reduce 95
	'<'  reduce 95
	'>'  reduce 95
	LE  reduce 95
	GE  reduce 95
	'+'  reduce 95
	'-'  reduce 95
	'*'  reduce 95
	'/'  reduce 95
	'%'  reduce 95
	';'  reduce 95
	']'  reduce 95
	'!'  reduce 95
	')'  reduce 95
	','  reduce 95


state 148
	lvalue : string '[' expr . ']'  (84)
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	']'  shift 177
	.  error


state 149
	param : NUMBER . ID  (38)

	ID  shift 178
	.  error


state 150
	param : ARRAY . ID '[' INTEGER ']'  (39)

	ID  shift 179
	.  error


state 151
	param : STRING . ID  (37)

	ID  shift 180
	.  error


state 152
	func : FUNCTION functype ID $$4 params . funcend  (24)
	params : params . ';' param  (36)

	DONE  shift 154
	DO  shift 155
	';'  shift 181
	.  error

	funcend  goto 182


state 153
	params : param .  (35)

	.  reduce 35


state 154
	funcend : DONE .  (29)

	.  reduce 29


state 155
	funcend : DO . body  (30)
	blockfunc : .  (76)

	error  shift 40
	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	NUMBER  shift 11
	ARRAY  shift 12
	STRING  shift 13
	IF  shift 45
	FOR  shift 46
	REPEAT  shift 167
	STOP  shift 168
	RETURN  shift 169
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	START  reduce 76
	END  reduce 76
	';'  reduce 76

	body  goto 183
	bodyvars  goto 184
	var  goto 55
	instr  goto 56
	instrterm  goto 185
	blockfunc  goto 186
	instrs  goto 187
	lvalue  goto 58
	expr  goto 59
	integer  goto 60
	string  goto 61


state 156
	func : FUNCTION functype ID $$6 funcend .  (28)

	.  reduce 28


state 157
	func : FUNCTION qualifier functype ID $$3 . params funcend  (22)

	NUMBER  shift 149
	ARRAY  shift 150
	STRING  shift 151
	.  error

	params  goto 188
	param  goto 153


state 158
	func : FUNCTION qualifier functype ID $$5 . funcend  (26)

	DONE  shift 154
	DO  shift 155
	.  error

	funcend  goto 189


state 159
	var : ARRAY ID '[' INTEGER ']' .  (42)

	.  reduce 42


state 160
	program : PROGRAM decls START $$1 bodyprincipal END .  (4)

	.  reduce 4


state 161
	decl : qualifier CONST var ATTR literal .  (12)

	.  reduce 12


state 162
	integerlist : integerlist ',' INTEGER .  (121)

	.  reduce 121


state 163
	lvalue : ID '(' ')' '[' . expr ']'  (86)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 190
	integer  goto 60
	string  goto 61


state 164
	lvalue : ID '(' args ')' . '[' expr ']'  (85)
	expr : ID '(' args ')' .  (89)

	'['  shift 191
	START  reduce 89
	END  reduce 89
	DONE  reduce 89
	DO  reduce 89
	THEN  reduce 89
	ELSE  reduce 89
	ELIF  reduce 89
	FI  reduce 89
	UNTIL  reduce 89
	STEP  reduce 89
	'|'  reduce 89
	'&'  reduce 89
	NE  reduce 89
	'='  reduce 89
	'<'  reduce 89
	'>'  reduce 89
	LE  reduce 89
	GE  reduce 89
	'+'  reduce 89
	'-'  reduce 89
	'*'  reduce 89
	'/'  reduce 89
	'%'  reduce 89
	'^'  reduce 89
	';'  reduce 89
	']'  reduce 89
	'!'  reduce 89
	')'  reduce 89
	','  reduce 89


state 165
	args : args ',' . expr  (123)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 192
	integer  goto 60
	string  goto 61


state 166
	lvalue : ID '[' expr ']' .  (83)

	.  reduce 83


state 167
	instrterm : REPEAT .  (65)

	.  reduce 65


state 168
	instrterm : STOP .  (66)

	.  reduce 66


state 169
	instrterm : RETURN . expr  (67)
	instrterm : RETURN .  (68)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	START  reduce 68
	END  reduce 68
	DONE  reduce 68
	ELSE  reduce 68
	ELIF  reduce 68
	FI  reduce 68
	';'  reduce 68

	lvalue  goto 78
	expr  goto 193
	integer  goto 60
	string  goto 61


state 170
	block : instrterm .  (73)

	.  reduce 73


state 171
	instr : IF expr THEN block . FI  (55)
	instr : IF expr THEN block . elifs ELSE block FI  (56)
	instr : IF expr THEN block . elifs FI  (57)
	instr : IF expr THEN block . ELSE block FI  (58)

	ELSE  shift 194
	ELIF  shift 195
	FI  shift 196
	.  error

	elif  goto 197
	elifs  goto 198


state 172
	block : instrs .  (74)
	block : instrs . instrterm  (75)
	instrs : instrs . instr  (81)

	error  shift 40
	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	IF  shift 45
	FOR  shift 46
	REPEAT  shift 167
	STOP  shift 168
	RETURN  shift 169
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	DONE  reduce 74
	ELSE  reduce 74
	ELIF  reduce 74
	FI  reduce 74

	instr  goto 91
	instrterm  goto 199
	lvalue  goto 58
	expr  goto 59
	integer  goto 60
	string  goto 61


state 173
	instr : FOR expr UNTIL expr . STEP expr DO $$7 block DONE  (60)
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	STEP  shift 200
	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	.  error


state 174
	lvalue : ID '(' ')' . '[' expr ']'  (86)

	'['  shift 163
	.  error


state 175
	lvalue : ID '(' args . ')' '[' expr ']'  (85)
	args : args . ',' expr  (123)

	')'  shift 201
	','  shift 165
	.  error


state 176
	instr : lvalue '#' expr ';' .  (64)

	.  reduce 64


state 177
	lvalue : string '[' expr ']' .  (84)

	.  reduce 84


state 178
	param : NUMBER ID .  (38)

	.  reduce 38


state 179
	param : ARRAY ID . '[' INTEGER ']'  (39)

	'['  shift 202
	.  error


state 180
	param : STRING ID .  (37)

	.  reduce 37


state 181
	params : params ';' . param  (36)

	NUMBER  shift 149
	ARRAY  shift 150
	STRING  shift 151
	.  error

	param  goto 203


state 182
	func : FUNCTION functype ID $$4 params funcend .  (24)

	.  reduce 24


state 183
	funcend : DO body .  (30)

	.  reduce 30


state 184
	body : bodyvars . blockfunc  (49)
	bodyvars : bodyvars . var ';'  (54)
	blockfunc : .  (76)

	error  shift 40
	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	NUMBER  shift 11
	ARRAY  shift 12
	STRING  shift 13
	IF  shift 45
	FOR  shift 46
	REPEAT  shift 167
	STOP  shift 168
	RETURN  shift 169
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	START  reduce 76
	END  reduce 76
	';'  reduce 76

	var  goto 89
	instr  goto 56
	instrterm  goto 185
	blockfunc  goto 204
	instrs  goto 187
	lvalue  goto 58
	expr  goto 59
	integer  goto 60
	string  goto 61


state 185
	blockfunc : instrterm .  (77)

	.  reduce 77


state 186
	body : blockfunc .  (50)

	.  reduce 50


state 187
	blockfunc : instrs .  (78)
	blockfunc : instrs . instrterm  (79)
	instrs : instrs . instr  (81)

	error  shift 40
	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	IF  shift 45
	FOR  shift 46
	REPEAT  shift 167
	STOP  shift 168
	RETURN  shift 169
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	START  reduce 78
	END  reduce 78
	';'  reduce 78

	instr  goto 91
	instrterm  goto 205
	lvalue  goto 58
	expr  goto 59
	integer  goto 60
	string  goto 61


state 188
	func : FUNCTION qualifier functype ID $$3 params . funcend  (22)
	params : params . ';' param  (36)

	DONE  shift 154
	DO  shift 155
	';'  shift 181
	.  error

	funcend  goto 206


state 189
	func : FUNCTION qualifier functype ID $$5 funcend .  (26)

	.  reduce 26


state 190
	lvalue : ID '(' ')' '[' expr . ']'  (86)
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	']'  shift 207
	.  error


state 191
	lvalue : ID '(' args ')' '[' . expr ']'  (85)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 208
	integer  goto 60
	string  goto 61


state 192
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)
	args : args ',' expr .  (123)

	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	')'  reduce 123
	','  reduce 123


state 193
	instrterm : RETURN expr .  (67)
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	START  reduce 67
	END  reduce 67
	DONE  reduce 67
	ELSE  reduce 67
	ELIF  reduce 67
	FI  reduce 67
	';'  reduce 67


state 194
	instr : IF expr THEN block ELSE . block FI  (58)
	block : .  (72)

	error  shift 40
	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	IF  shift 45
	FOR  shift 46
	REPEAT  shift 167
	STOP  shift 168
	RETURN  shift 169
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	FI  reduce 72

	instr  goto 56
	instrterm  goto 170
	block  goto 209
	instrs  goto 172
	lvalue  goto 58
	expr  goto 59
	integer  goto 60
	string  goto 61


state 195
	elif : ELIF . expr THEN block  (69)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 210
	integer  goto 60
	string  goto 61


state 196
	instr : IF expr THEN block FI .  (55)

	.  reduce 55


state 197
	elifs : elif .  (70)

	.  reduce 70


state 198
	instr : IF expr THEN block elifs . ELSE block FI  (56)
	instr : IF expr THEN block elifs . FI  (57)
	elifs : elifs . elif  (71)

	ELSE  shift 211
	ELIF  shift 195
	FI  shift 212
	.  error

	elif  goto 213


state 199
	block : instrs instrterm .  (75)

	.  reduce 75


state 200
	instr : FOR expr UNTIL expr STEP . expr DO $$7 block DONE  (60)

	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	.  error

	lvalue  goto 78
	expr  goto 214
	integer  goto 60
	string  goto 61


state 201
	lvalue : ID '(' args ')' . '[' expr ']'  (85)

	'['  shift 191
	.  error


state 202
	param : ARRAY ID '[' . INTEGER ']'  (39)

	INTEGER  shift 215
	.  error


state 203
	params : params ';' param .  (36)

	.  reduce 36


state 204
	body : bodyvars blockfunc .  (49)

	.  reduce 49


state 205
	blockfunc : instrs instrterm .  (79)

	.  reduce 79


state 206
	func : FUNCTION qualifier functype ID $$3 params funcend .  (22)

	.  reduce 22


state 207
	lvalue : ID '(' ')' '[' expr ']' .  (86)

	.  reduce 86


state 208
	lvalue : ID '(' args ')' '[' expr . ']'  (85)
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	']'  shift 216
	.  error


state 209
	instr : IF expr THEN block ELSE block . FI  (58)

	FI  shift 217
	.  error


state 210
	elif : ELIF expr . THEN block  (69)
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	THEN  shift 218
	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	.  error


state 211
	instr : IF expr THEN block elifs ELSE . block FI  (56)
	block : .  (72)

	error  shift 40
	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	IF  shift 45
	FOR  shift 46
	REPEAT  shift 167
	STOP  shift 168
	RETURN  shift 169
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	FI  reduce 72

	instr  goto 56
	instrterm  goto 170
	block  goto 219
	instrs  goto 172
	lvalue  goto 58
	expr  goto 59
	integer  goto 60
	string  goto 61


state 212
	instr : IF expr THEN block elifs FI .  (57)

	.  reduce 57


state 213
	elifs : elifs elif .  (71)

	.  reduce 71


state 214
	instr : FOR expr UNTIL expr STEP expr . DO $$7 block DONE  (60)
	expr : expr . '^' expr  (95)
	expr : expr . '+' expr  (96)
	expr : expr . '-' expr  (97)
	expr : expr . '*' expr  (98)
	expr : expr . '/' expr  (99)
	expr : expr . '%' expr  (100)
	expr : expr . '<' expr  (101)
	expr : expr . '>' expr  (102)
	expr : expr . GE expr  (103)
	expr : expr . LE expr  (104)
	expr : expr . NE expr  (105)
	expr : expr . '=' expr  (106)
	expr : expr . '&' expr  (108)
	expr : expr . '|' expr  (109)

	DO  shift 220
	'|'  shift 94
	'&'  shift 95
	NE  shift 96
	'='  shift 97
	'<'  shift 98
	'>'  shift 99
	LE  shift 100
	GE  shift 101
	'+'  shift 102
	'-'  shift 103
	'*'  shift 104
	'/'  shift 105
	'%'  shift 106
	'^'  shift 107
	.  error


state 215
	param : ARRAY ID '[' INTEGER . ']'  (39)

	']'  shift 221
	.  error


state 216
	lvalue : ID '(' args ')' '[' expr ']' .  (85)

	.  reduce 85


state 217
	instr : IF expr THEN block ELSE block FI .  (58)

	.  reduce 58


state 218
	elif : ELIF expr THEN . block  (69)
	block : .  (72)

	error  shift 40
	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	IF  shift 45
	FOR  shift 46
	REPEAT  shift 167
	STOP  shift 168
	RETURN  shift 169
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	ELSE  reduce 72
	ELIF  reduce 72
	FI  reduce 72

	instr  goto 56
	instrterm  goto 170
	block  goto 222
	instrs  goto 172
	lvalue  goto 58
	expr  goto 59
	integer  goto 60
	string  goto 61


state 219
	instr : IF expr THEN block elifs ELSE block . FI  (56)

	FI  shift 223
	.  error


state 220
	instr : FOR expr UNTIL expr STEP expr DO . $$7 block DONE  (60)
	$$7 : .  (59)

	.  reduce 59

	$$7  goto 224


state 221
	param : ARRAY ID '[' INTEGER ']' .  (39)

	.  reduce 39


state 222
	elif : ELIF expr THEN block .  (69)

	.  reduce 69


state 223
	instr : IF expr THEN block elifs ELSE block FI .  (56)

	.  reduce 56


state 224
	instr : FOR expr UNTIL expr STEP expr DO $$7 . block DONE  (60)
	block : .  (72)

	error  shift 40
	INTEGER  shift 41
	CHAR  shift 42
	ID  shift 43
	STR  shift 44
	IF  shift 45
	FOR  shift 46
	REPEAT  shift 167
	STOP  shift 168
	RETURN  shift 169
	'&'  shift 47
	'~'  shift 48
	'-'  shift 49
	'?'  shift 50
	'('  shift 51
	DONE  reduce 72

	instr  goto 56
	instrterm  goto 170
	block  goto 225
	instrs  goto 172
	lvalue  goto 58
	expr  goto 59
	integer  goto 60
	string  goto 61


state 225
	instr : FOR expr UNTIL expr STEP expr DO $$7 block . DONE  (60)

	DONE  shift 226
	.  error


state 226
	instr : FOR expr UNTIL expr STEP expr DO $$7 block DONE .  (60)

	.  reduce 60


73 terminals, 39 nonterminals
124 grammar rules, 227 states

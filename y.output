   0  $accept : file $end

   1  file : program
   2       | module

   3  program : PROGRAM decls START bodyprincipal END
   4          | PROGRAM START bodyprincipal END

   5  module : MODULE decls END
   6         | MODULE END

   7  decls : decl
   8        | decls ';' decl

   9  decl : func
  10       | qualifier CONST var ATTR literal
  11       | qualifier var ATTR literal
  12       | qualifier var
  13       | qualifier CONST var
  14       | CONST var
  15       | CONST var ATTR literal
  16       | var
  17       | var ATTR literal

  18  func : FUNCTION qualifier functype ID vars funcend
  19       | FUNCTION functype ID vars funcend
  20       | FUNCTION qualifier functype ID funcend
  21       | FUNCTION functype ID funcend

  22  funcend : DONE
  23          | DO body

  24  functype : type
  25           | VOID

  26  qualifier : PUBLIC
  27            | FORWARD

  28  vars : var
  29       | vars ';' var

  30  var : STRING ID
  31      | NUMBER ID
  32      | ARRAY ID '[' integer ']'

  33  type : NUMBER
  34       | ARRAY
  35       | STRING

  36  bodyprincipal : bodyvars bodyinstrs
  37                | bodyinstrs

  38  body : bodyvars block
  39       | block

  40  bodyinstrs :
  41             | instrs

  42  bodyvars : var ';'
  43           | bodyvars var ';'

  44  instr : IF expr THEN block FI
  45        | IF expr THEN block elifs ELSE block FI
  46        | IF expr THEN block elifs FI
  47        | IF expr THEN block ELSE block FI

  48  $$1 :

  49  instr : FOR expr UNTIL expr STEP expr DO $$1 block DONE
  50        | expr ';'
  51        | expr '!'
  52        | lvalue '#' expr ';'

  53  instrterm : REPEAT
  54            | STOP
  55            | RETURN expr
  56            | RETURN

  57  elif : ELIF expr THEN block

  58  elifs : elif
  59        | elifs elif

  60  block :
  61        | instrterm
  62        | instrs
  63        | instrs instrterm

  64  instrs : instr
  65         | instrs instr

  66  lvalue : ID
  67         | lvalue '[' expr ']'

  68  expr : lvalue
  69       | '(' expr ')'
  70       | expr '(' args ')'
  71       | expr '(' ')'
  72       | string
  73       | integer
  74       | '-' expr
  75       | '&' expr
  76       | expr '^' expr
  77       | expr '+' expr
  78       | expr '-' expr
  79       | expr '*' expr
  80       | expr '/' expr
  81       | expr '%' expr
  82       | expr '<' expr
  83       | expr '>' expr
  84       | expr GE expr
  85       | expr LE expr
  86       | expr NE expr
  87       | expr '=' expr
  88       | lvalue ATTR expr
  89       | expr '&' expr
  90       | expr '|' expr
  91       | '~' expr
  92       | '?'

  93  literal : string
  94          | integerlist

  95  integer : INTEGER

  96  string : stringintegerlist
  97         | STR

  98  stringintegerlist : integer integer
  99                    | stringintegerlist integer

 100  integerlist : integer
 101              | integerlist ',' integer

 102  args : expr
 103       | args ',' expr

state 0
	$accept : . file $end  (0)

	PROGRAM  shift 1
	MODULE  shift 2
	.  error

	file  goto 3
	program  goto 4
	module  goto 5


state 1
	program : PROGRAM . decls START bodyprincipal END  (3)
	program : PROGRAM . START bodyprincipal END  (4)

	START  shift 6
	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decls  goto 14
	decl  goto 15
	func  goto 16
	qualifier  goto 17
	var  goto 18


state 2
	module : MODULE . decls END  (5)
	module : MODULE . END  (6)

	END  shift 19
	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decls  goto 20
	decl  goto 15
	func  goto 16
	qualifier  goto 17
	var  goto 18


state 3
	$accept : file . $end  (0)

	$end  accept


state 4
	file : program .  (1)

	.  reduce 1


state 5
	file : module .  (2)

	.  reduce 2


state 6
	program : PROGRAM START . bodyprincipal END  (4)
	bodyinstrs : .  (40)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	END  reduce 40

	bodyprincipal  goto 31
	bodyinstrs  goto 32
	bodyvars  goto 33
	var  goto 34
	instr  goto 35
	instrs  goto 36
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 7
	func : FUNCTION . qualifier functype ID vars funcend  (18)
	func : FUNCTION . functype ID vars funcend  (19)
	func : FUNCTION . qualifier functype ID funcend  (20)
	func : FUNCTION . functype ID funcend  (21)

	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 42
	ARRAY  shift 43
	VOID  shift 44
	STRING  shift 45
	.  error

	functype  goto 46
	qualifier  goto 47
	type  goto 48


state 8
	qualifier : PUBLIC .  (26)

	.  reduce 26


state 9
	qualifier : FORWARD .  (27)

	.  reduce 27


state 10
	var : NUMBER . ID  (31)

	ID  shift 49
	.  error


state 11
	var : ARRAY . ID '[' integer ']'  (32)

	ID  shift 50
	.  error


state 12
	var : STRING . ID  (30)

	ID  shift 51
	.  error


state 13
	decl : CONST . var  (14)
	decl : CONST . var ATTR literal  (15)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	.  error

	var  goto 52


state 14
	program : PROGRAM decls . START bodyprincipal END  (3)
	decls : decls . ';' decl  (8)

	START  shift 53
	';'  shift 54
	.  error


state 15
	decls : decl .  (7)

	.  reduce 7


state 16
	decl : func .  (9)

	.  reduce 9


state 17
	decl : qualifier . CONST var ATTR literal  (10)
	decl : qualifier . var ATTR literal  (11)
	decl : qualifier . var  (12)
	decl : qualifier . CONST var  (13)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 55
	.  error

	var  goto 56


state 18
	decl : var .  (16)
	decl : var . ATTR literal  (17)

	ATTR  shift 57
	START  reduce 16
	END  reduce 16
	';'  reduce 16


state 19
	module : MODULE END .  (6)

	.  reduce 6


state 20
	module : MODULE decls . END  (5)
	decls : decls . ';' decl  (8)

	END  shift 58
	';'  shift 54
	.  error


state 21
	integer : INTEGER .  (95)

	.  reduce 95


state 22
	lvalue : ID .  (66)

	.  reduce 66


state 23
	string : STR .  (97)

	.  reduce 97


state 24
	instr : IF . expr THEN block FI  (44)
	instr : IF . expr THEN block elifs ELSE block FI  (45)
	instr : IF . expr THEN block elifs FI  (46)
	instr : IF . expr THEN block ELSE block FI  (47)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 60
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 25
	instr : FOR . expr UNTIL expr STEP expr DO $$1 block DONE  (49)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 61
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 26
	expr : '&' . expr  (75)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 62
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 27
	expr : '~' . expr  (91)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 63
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 28
	expr : '-' . expr  (74)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 64
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 29
	expr : '?' .  (92)

	.  reduce 92


state 30
	expr : '(' . expr ')'  (69)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 65
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 31
	program : PROGRAM START bodyprincipal . END  (4)

	END  shift 66
	.  error


state 32
	bodyprincipal : bodyinstrs .  (37)

	.  reduce 37


state 33
	bodyprincipal : bodyvars . bodyinstrs  (36)
	bodyvars : bodyvars . var ';'  (43)
	bodyinstrs : .  (40)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	END  reduce 40

	bodyinstrs  goto 67
	var  goto 68
	instr  goto 35
	instrs  goto 36
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 34
	bodyvars : var . ';'  (42)

	';'  shift 69
	.  error


state 35
	instrs : instr .  (64)

	.  reduce 64


state 36
	bodyinstrs : instrs .  (41)
	instrs : instrs . instr  (65)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	END  reduce 41

	instr  goto 70
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 37
	instr : lvalue . '#' expr ';'  (52)
	lvalue : lvalue . '[' expr ']'  (67)
	expr : lvalue .  (68)
	expr : lvalue . ATTR expr  (88)

	ATTR  shift 71
	'['  shift 72
	'#'  shift 73
	'|'  reduce 68
	'&'  reduce 68
	NE  reduce 68
	'='  reduce 68
	'<'  reduce 68
	'>'  reduce 68
	LE  reduce 68
	GE  reduce 68
	'+'  reduce 68
	'-'  reduce 68
	'*'  reduce 68
	'/'  reduce 68
	'%'  reduce 68
	'^'  reduce 68
	'('  reduce 68
	';'  reduce 68
	'!'  reduce 68


state 38
	instr : expr . ';'  (50)
	instr : expr . '!'  (51)
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	';'  shift 89
	'!'  shift 90
	.  error


state 39
	expr : integer .  (73)
	stringintegerlist : integer . integer  (98)

	INTEGER  shift 21
	START  reduce 73
	END  reduce 73
	DONE  reduce 73
	DO  reduce 73
	THEN  reduce 73
	ELSE  reduce 73
	ELIF  reduce 73
	FI  reduce 73
	UNTIL  reduce 73
	STEP  reduce 73
	'|'  reduce 73
	'&'  reduce 73
	NE  reduce 73
	'='  reduce 73
	'<'  reduce 73
	'>'  reduce 73
	LE  reduce 73
	GE  reduce 73
	'+'  reduce 73
	'-'  reduce 73
	'*'  reduce 73
	'/'  reduce 73
	'%'  reduce 73
	'^'  reduce 73
	'('  reduce 73
	';'  reduce 73
	']'  reduce 73
	'!'  reduce 73
	')'  reduce 73
	','  reduce 73

	integer  goto 91


state 40
	expr : string .  (72)

	.  reduce 72


state 41
	string : stringintegerlist .  (96)
	stringintegerlist : stringintegerlist . integer  (99)

	INTEGER  shift 21
	START  reduce 96
	END  reduce 96
	DONE  reduce 96
	DO  reduce 96
	THEN  reduce 96
	ELSE  reduce 96
	ELIF  reduce 96
	FI  reduce 96
	UNTIL  reduce 96
	STEP  reduce 96
	'|'  reduce 96
	'&'  reduce 96
	NE  reduce 96
	'='  reduce 96
	'<'  reduce 96
	'>'  reduce 96
	LE  reduce 96
	GE  reduce 96
	'+'  reduce 96
	'-'  reduce 96
	'*'  reduce 96
	'/'  reduce 96
	'%'  reduce 96
	'^'  reduce 96
	'('  reduce 96
	';'  reduce 96
	']'  reduce 96
	'!'  reduce 96
	')'  reduce 96
	','  reduce 96

	integer  goto 92


state 42
	type : NUMBER .  (33)

	.  reduce 33


state 43
	type : ARRAY .  (34)

	.  reduce 34


state 44
	functype : VOID .  (25)

	.  reduce 25


state 45
	type : STRING .  (35)

	.  reduce 35


state 46
	func : FUNCTION functype . ID vars funcend  (19)
	func : FUNCTION functype . ID funcend  (21)

	ID  shift 93
	.  error


state 47
	func : FUNCTION qualifier . functype ID vars funcend  (18)
	func : FUNCTION qualifier . functype ID funcend  (20)

	NUMBER  shift 42
	ARRAY  shift 43
	VOID  shift 44
	STRING  shift 45
	.  error

	functype  goto 94
	type  goto 48


state 48
	functype : type .  (24)

	.  reduce 24


state 49
	var : NUMBER ID .  (31)

	.  reduce 31


state 50
	var : ARRAY ID . '[' integer ']'  (32)

	'['  shift 95
	.  error


state 51
	var : STRING ID .  (30)

	.  reduce 30


state 52
	decl : CONST var .  (14)
	decl : CONST var . ATTR literal  (15)

	ATTR  shift 96
	START  reduce 14
	END  reduce 14
	';'  reduce 14


state 53
	program : PROGRAM decls START . bodyprincipal END  (3)
	bodyinstrs : .  (40)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	END  reduce 40

	bodyprincipal  goto 97
	bodyinstrs  goto 32
	bodyvars  goto 33
	var  goto 34
	instr  goto 35
	instrs  goto 36
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 54
	decls : decls ';' . decl  (8)

	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decl  goto 98
	func  goto 16
	qualifier  goto 17
	var  goto 18


state 55
	decl : qualifier CONST . var ATTR literal  (10)
	decl : qualifier CONST . var  (13)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	.  error

	var  goto 99


state 56
	decl : qualifier var . ATTR literal  (11)
	decl : qualifier var .  (12)

	ATTR  shift 100
	START  reduce 12
	END  reduce 12
	';'  reduce 12


state 57
	decl : var ATTR . literal  (17)

	INTEGER  shift 21
	STR  shift 23
	.  error

	literal  goto 101
	integer  goto 102
	integerlist  goto 103
	string  goto 104
	stringintegerlist  goto 41


state 58
	module : MODULE decls END .  (5)

	.  reduce 5


state 59
	lvalue : lvalue . '[' expr ']'  (67)
	expr : lvalue .  (68)
	expr : lvalue . ATTR expr  (88)

	ATTR  shift 71
	'['  shift 72
	START  reduce 68
	END  reduce 68
	DONE  reduce 68
	DO  reduce 68
	THEN  reduce 68
	ELSE  reduce 68
	ELIF  reduce 68
	FI  reduce 68
	UNTIL  reduce 68
	STEP  reduce 68
	'|'  reduce 68
	'&'  reduce 68
	NE  reduce 68
	'='  reduce 68
	'<'  reduce 68
	'>'  reduce 68
	LE  reduce 68
	GE  reduce 68
	'+'  reduce 68
	'-'  reduce 68
	'*'  reduce 68
	'/'  reduce 68
	'%'  reduce 68
	'^'  reduce 68
	'('  reduce 68
	';'  reduce 68
	']'  reduce 68
	'!'  reduce 68
	')'  reduce 68
	','  reduce 68


state 60
	instr : IF expr . THEN block FI  (44)
	instr : IF expr . THEN block elifs ELSE block FI  (45)
	instr : IF expr . THEN block elifs FI  (46)
	instr : IF expr . THEN block ELSE block FI  (47)
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	THEN  shift 105
	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	.  error


state 61
	instr : FOR expr . UNTIL expr STEP expr DO $$1 block DONE  (49)
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	UNTIL  shift 106
	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	.  error


state 62
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : '&' expr .  (75)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'('  shift 88
	START  reduce 75
	END  reduce 75
	DONE  reduce 75
	DO  reduce 75
	THEN  reduce 75
	ELSE  reduce 75
	ELIF  reduce 75
	FI  reduce 75
	UNTIL  reduce 75
	STEP  reduce 75
	'|'  reduce 75
	'&'  reduce 75
	NE  reduce 75
	'='  reduce 75
	'<'  reduce 75
	'>'  reduce 75
	LE  reduce 75
	GE  reduce 75
	'+'  reduce 75
	'-'  reduce 75
	'*'  reduce 75
	'/'  reduce 75
	'%'  reduce 75
	'^'  reduce 75
	';'  reduce 75
	']'  reduce 75
	'!'  reduce 75
	')'  reduce 75
	','  reduce 75


state 63
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)
	expr : '~' expr .  (91)

	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 91
	END  reduce 91
	DONE  reduce 91
	DO  reduce 91
	THEN  reduce 91
	ELSE  reduce 91
	ELIF  reduce 91
	FI  reduce 91
	UNTIL  reduce 91
	STEP  reduce 91
	'|'  reduce 91
	'&'  reduce 91
	';'  reduce 91
	']'  reduce 91
	'!'  reduce 91
	')'  reduce 91
	','  reduce 91


state 64
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : '-' expr .  (74)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'('  shift 88
	START  reduce 74
	END  reduce 74
	DONE  reduce 74
	DO  reduce 74
	THEN  reduce 74
	ELSE  reduce 74
	ELIF  reduce 74
	FI  reduce 74
	UNTIL  reduce 74
	STEP  reduce 74
	'|'  reduce 74
	'&'  reduce 74
	NE  reduce 74
	'='  reduce 74
	'<'  reduce 74
	'>'  reduce 74
	LE  reduce 74
	GE  reduce 74
	'+'  reduce 74
	'-'  reduce 74
	'*'  reduce 74
	'/'  reduce 74
	'%'  reduce 74
	'^'  reduce 74
	';'  reduce 74
	']'  reduce 74
	'!'  reduce 74
	')'  reduce 74
	','  reduce 74


state 65
	expr : '(' expr . ')'  (69)
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	')'  shift 107
	.  error


state 66
	program : PROGRAM START bodyprincipal END .  (4)

	.  reduce 4


state 67
	bodyprincipal : bodyvars bodyinstrs .  (36)

	.  reduce 36


state 68
	bodyvars : bodyvars var . ';'  (43)

	';'  shift 108
	.  error


state 69
	bodyvars : var ';' .  (42)

	.  reduce 42


state 70
	instrs : instrs instr .  (65)

	.  reduce 65


state 71
	expr : lvalue ATTR . expr  (88)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 109
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 72
	lvalue : lvalue '[' . expr ']'  (67)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 110
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 73
	instr : lvalue '#' . expr ';'  (52)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 111
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 74
	expr : expr '|' . expr  (90)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 112
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 75
	expr : expr '&' . expr  (89)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 113
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 76
	expr : expr NE . expr  (86)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 114
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 77
	expr : expr '=' . expr  (87)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 115
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 78
	expr : expr '<' . expr  (82)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 116
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 79
	expr : expr '>' . expr  (83)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 117
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 80
	expr : expr LE . expr  (85)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 118
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 81
	expr : expr GE . expr  (84)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 119
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 82
	expr : expr '+' . expr  (77)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 120
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 83
	expr : expr '-' . expr  (78)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 121
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 84
	expr : expr '*' . expr  (79)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 122
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 85
	expr : expr '/' . expr  (80)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 123
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 86
	expr : expr '%' . expr  (81)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 124
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 87
	expr : expr '^' . expr  (76)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 125
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 88
	expr : expr '(' . args ')'  (70)
	expr : expr '(' . ')'  (71)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	')'  shift 126
	.  error

	lvalue  goto 59
	expr  goto 127
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41
	args  goto 128


state 89
	instr : expr ';' .  (50)

	.  reduce 50


state 90
	instr : expr '!' .  (51)

	.  reduce 51


state 91
	stringintegerlist : integer integer .  (98)

	.  reduce 98


state 92
	stringintegerlist : stringintegerlist integer .  (99)

	.  reduce 99


state 93
	func : FUNCTION functype ID . vars funcend  (19)
	func : FUNCTION functype ID . funcend  (21)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	DONE  shift 129
	DO  shift 130
	.  error

	funcend  goto 131
	vars  goto 132
	var  goto 133


state 94
	func : FUNCTION qualifier functype . ID vars funcend  (18)
	func : FUNCTION qualifier functype . ID funcend  (20)

	ID  shift 134
	.  error


state 95
	var : ARRAY ID '[' . integer ']'  (32)

	INTEGER  shift 21
	.  error

	integer  goto 135


state 96
	decl : CONST var ATTR . literal  (15)

	INTEGER  shift 21
	STR  shift 23
	.  error

	literal  goto 136
	integer  goto 102
	integerlist  goto 103
	string  goto 104
	stringintegerlist  goto 41


state 97
	program : PROGRAM decls START bodyprincipal . END  (3)

	END  shift 137
	.  error


state 98
	decls : decls ';' decl .  (8)

	.  reduce 8


state 99
	decl : qualifier CONST var . ATTR literal  (10)
	decl : qualifier CONST var .  (13)

	ATTR  shift 138
	START  reduce 13
	END  reduce 13
	';'  reduce 13


state 100
	decl : qualifier var ATTR . literal  (11)

	INTEGER  shift 21
	STR  shift 23
	.  error

	literal  goto 139
	integer  goto 102
	integerlist  goto 103
	string  goto 104
	stringintegerlist  goto 41


state 101
	decl : var ATTR literal .  (17)

	.  reduce 17


state 102
	stringintegerlist : integer . integer  (98)
	integerlist : integer .  (100)

	INTEGER  shift 21
	START  reduce 100
	END  reduce 100
	';'  reduce 100
	','  reduce 100

	integer  goto 91


state 103
	literal : integerlist .  (94)
	integerlist : integerlist . ',' integer  (101)

	','  shift 140
	START  reduce 94
	END  reduce 94
	';'  reduce 94


state 104
	literal : string .  (93)

	.  reduce 93


state 105
	instr : IF expr THEN . block FI  (44)
	instr : IF expr THEN . block elifs ELSE block FI  (45)
	instr : IF expr THEN . block elifs FI  (46)
	instr : IF expr THEN . block ELSE block FI  (47)
	block : .  (60)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 141
	STOP  shift 142
	RETURN  shift 143
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	ELSE  reduce 60
	ELIF  reduce 60
	FI  reduce 60

	instr  goto 35
	instrterm  goto 144
	block  goto 145
	instrs  goto 146
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 106
	instr : FOR expr UNTIL . expr STEP expr DO $$1 block DONE  (49)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 147
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 107
	expr : '(' expr ')' .  (69)

	.  reduce 69


state 108
	bodyvars : bodyvars var ';' .  (43)

	.  reduce 43


state 109
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : lvalue ATTR expr .  (88)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 88
	END  reduce 88
	DONE  reduce 88
	DO  reduce 88
	THEN  reduce 88
	ELSE  reduce 88
	ELIF  reduce 88
	FI  reduce 88
	UNTIL  reduce 88
	STEP  reduce 88
	';'  reduce 88
	']'  reduce 88
	'!'  reduce 88
	')'  reduce 88
	','  reduce 88


state 110
	lvalue : lvalue '[' expr . ']'  (67)
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	']'  shift 148
	.  error


state 111
	instr : lvalue '#' expr . ';'  (52)
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	';'  shift 149
	.  error


state 112
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)
	expr : expr '|' expr .  (90)

	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 90
	END  reduce 90
	DONE  reduce 90
	DO  reduce 90
	THEN  reduce 90
	ELSE  reduce 90
	ELIF  reduce 90
	FI  reduce 90
	UNTIL  reduce 90
	STEP  reduce 90
	'|'  reduce 90
	';'  reduce 90
	']'  reduce 90
	'!'  reduce 90
	')'  reduce 90
	','  reduce 90


state 113
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr '&' expr .  (89)
	expr : expr . '|' expr  (90)

	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 89
	END  reduce 89
	DONE  reduce 89
	DO  reduce 89
	THEN  reduce 89
	ELSE  reduce 89
	ELIF  reduce 89
	FI  reduce 89
	UNTIL  reduce 89
	STEP  reduce 89
	'|'  reduce 89
	'&'  reduce 89
	';'  reduce 89
	']'  reduce 89
	'!'  reduce 89
	')'  reduce 89
	','  reduce 89


state 114
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr NE expr .  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 86
	END  reduce 86
	DONE  reduce 86
	DO  reduce 86
	THEN  reduce 86
	ELSE  reduce 86
	ELIF  reduce 86
	FI  reduce 86
	UNTIL  reduce 86
	STEP  reduce 86
	'|'  reduce 86
	'&'  reduce 86
	NE  reduce 86
	'='  reduce 86
	';'  reduce 86
	']'  reduce 86
	'!'  reduce 86
	')'  reduce 86
	','  reduce 86


state 115
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr '=' expr .  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 87
	END  reduce 87
	DONE  reduce 87
	DO  reduce 87
	THEN  reduce 87
	ELSE  reduce 87
	ELIF  reduce 87
	FI  reduce 87
	UNTIL  reduce 87
	STEP  reduce 87
	'|'  reduce 87
	'&'  reduce 87
	NE  reduce 87
	'='  reduce 87
	';'  reduce 87
	']'  reduce 87
	'!'  reduce 87
	')'  reduce 87
	','  reduce 87


state 116
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr '<' expr .  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 82
	END  reduce 82
	DONE  reduce 82
	DO  reduce 82
	THEN  reduce 82
	ELSE  reduce 82
	ELIF  reduce 82
	FI  reduce 82
	UNTIL  reduce 82
	STEP  reduce 82
	'|'  reduce 82
	'&'  reduce 82
	NE  reduce 82
	'='  reduce 82
	'<'  reduce 82
	'>'  reduce 82
	LE  reduce 82
	GE  reduce 82
	';'  reduce 82
	']'  reduce 82
	'!'  reduce 82
	')'  reduce 82
	','  reduce 82


state 117
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr '>' expr .  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 83
	END  reduce 83
	DONE  reduce 83
	DO  reduce 83
	THEN  reduce 83
	ELSE  reduce 83
	ELIF  reduce 83
	FI  reduce 83
	UNTIL  reduce 83
	STEP  reduce 83
	'|'  reduce 83
	'&'  reduce 83
	NE  reduce 83
	'='  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	LE  reduce 83
	GE  reduce 83
	';'  reduce 83
	']'  reduce 83
	'!'  reduce 83
	')'  reduce 83
	','  reduce 83


state 118
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr LE expr .  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 85
	END  reduce 85
	DONE  reduce 85
	DO  reduce 85
	THEN  reduce 85
	ELSE  reduce 85
	ELIF  reduce 85
	FI  reduce 85
	UNTIL  reduce 85
	STEP  reduce 85
	'|'  reduce 85
	'&'  reduce 85
	NE  reduce 85
	'='  reduce 85
	'<'  reduce 85
	'>'  reduce 85
	LE  reduce 85
	GE  reduce 85
	';'  reduce 85
	']'  reduce 85
	'!'  reduce 85
	')'  reduce 85
	','  reduce 85


state 119
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr GE expr .  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 84
	END  reduce 84
	DONE  reduce 84
	DO  reduce 84
	THEN  reduce 84
	ELSE  reduce 84
	ELIF  reduce 84
	FI  reduce 84
	UNTIL  reduce 84
	STEP  reduce 84
	'|'  reduce 84
	'&'  reduce 84
	NE  reduce 84
	'='  reduce 84
	'<'  reduce 84
	'>'  reduce 84
	LE  reduce 84
	GE  reduce 84
	';'  reduce 84
	']'  reduce 84
	'!'  reduce 84
	')'  reduce 84
	','  reduce 84


state 120
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr '+' expr .  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 77
	END  reduce 77
	DONE  reduce 77
	DO  reduce 77
	THEN  reduce 77
	ELSE  reduce 77
	ELIF  reduce 77
	FI  reduce 77
	UNTIL  reduce 77
	STEP  reduce 77
	'|'  reduce 77
	'&'  reduce 77
	NE  reduce 77
	'='  reduce 77
	'<'  reduce 77
	'>'  reduce 77
	LE  reduce 77
	GE  reduce 77
	'+'  reduce 77
	'-'  reduce 77
	';'  reduce 77
	']'  reduce 77
	'!'  reduce 77
	')'  reduce 77
	','  reduce 77


state 121
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr '-' expr .  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 78
	END  reduce 78
	DONE  reduce 78
	DO  reduce 78
	THEN  reduce 78
	ELSE  reduce 78
	ELIF  reduce 78
	FI  reduce 78
	UNTIL  reduce 78
	STEP  reduce 78
	'|'  reduce 78
	'&'  reduce 78
	NE  reduce 78
	'='  reduce 78
	'<'  reduce 78
	'>'  reduce 78
	LE  reduce 78
	GE  reduce 78
	'+'  reduce 78
	'-'  reduce 78
	';'  reduce 78
	']'  reduce 78
	'!'  reduce 78
	')'  reduce 78
	','  reduce 78


state 122
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr '*' expr .  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'^'  shift 87
	'('  shift 88
	START  reduce 79
	END  reduce 79
	DONE  reduce 79
	DO  reduce 79
	THEN  reduce 79
	ELSE  reduce 79
	ELIF  reduce 79
	FI  reduce 79
	UNTIL  reduce 79
	STEP  reduce 79
	'|'  reduce 79
	'&'  reduce 79
	NE  reduce 79
	'='  reduce 79
	'<'  reduce 79
	'>'  reduce 79
	LE  reduce 79
	GE  reduce 79
	'+'  reduce 79
	'-'  reduce 79
	'*'  reduce 79
	'/'  reduce 79
	'%'  reduce 79
	';'  reduce 79
	']'  reduce 79
	'!'  reduce 79
	')'  reduce 79
	','  reduce 79


state 123
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr '/' expr .  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'^'  shift 87
	'('  shift 88
	START  reduce 80
	END  reduce 80
	DONE  reduce 80
	DO  reduce 80
	THEN  reduce 80
	ELSE  reduce 80
	ELIF  reduce 80
	FI  reduce 80
	UNTIL  reduce 80
	STEP  reduce 80
	'|'  reduce 80
	'&'  reduce 80
	NE  reduce 80
	'='  reduce 80
	'<'  reduce 80
	'>'  reduce 80
	LE  reduce 80
	GE  reduce 80
	'+'  reduce 80
	'-'  reduce 80
	'*'  reduce 80
	'/'  reduce 80
	'%'  reduce 80
	';'  reduce 80
	']'  reduce 80
	'!'  reduce 80
	')'  reduce 80
	','  reduce 80


state 124
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr '%' expr .  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'^'  shift 87
	'('  shift 88
	START  reduce 81
	END  reduce 81
	DONE  reduce 81
	DO  reduce 81
	THEN  reduce 81
	ELSE  reduce 81
	ELIF  reduce 81
	FI  reduce 81
	UNTIL  reduce 81
	STEP  reduce 81
	'|'  reduce 81
	'&'  reduce 81
	NE  reduce 81
	'='  reduce 81
	'<'  reduce 81
	'>'  reduce 81
	LE  reduce 81
	GE  reduce 81
	'+'  reduce 81
	'-'  reduce 81
	'*'  reduce 81
	'/'  reduce 81
	'%'  reduce 81
	';'  reduce 81
	']'  reduce 81
	'!'  reduce 81
	')'  reduce 81
	','  reduce 81


state 125
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr '^' expr .  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'^'  shift 87
	'('  shift 88
	START  reduce 76
	END  reduce 76
	DONE  reduce 76
	DO  reduce 76
	THEN  reduce 76
	ELSE  reduce 76
	ELIF  reduce 76
	FI  reduce 76
	UNTIL  reduce 76
	STEP  reduce 76
	'|'  reduce 76
	'&'  reduce 76
	NE  reduce 76
	'='  reduce 76
	'<'  reduce 76
	'>'  reduce 76
	LE  reduce 76
	GE  reduce 76
	'+'  reduce 76
	'-'  reduce 76
	'*'  reduce 76
	'/'  reduce 76
	'%'  reduce 76
	';'  reduce 76
	']'  reduce 76
	'!'  reduce 76
	')'  reduce 76
	','  reduce 76


state 126
	expr : expr '(' ')' .  (71)

	.  reduce 71


state 127
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)
	args : expr .  (102)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	')'  reduce 102
	','  reduce 102


state 128
	expr : expr '(' args . ')'  (70)
	args : args . ',' expr  (103)

	')'  shift 150
	','  shift 151
	.  error


state 129
	funcend : DONE .  (22)

	.  reduce 22


state 130
	funcend : DO . body  (23)
	block : .  (60)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 141
	STOP  shift 142
	RETURN  shift 143
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	START  reduce 60
	END  reduce 60
	';'  reduce 60

	body  goto 152
	bodyvars  goto 153
	var  goto 34
	instr  goto 35
	instrterm  goto 144
	block  goto 154
	instrs  goto 146
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 131
	func : FUNCTION functype ID funcend .  (21)

	.  reduce 21


state 132
	func : FUNCTION functype ID vars . funcend  (19)
	vars : vars . ';' var  (29)

	DONE  shift 129
	DO  shift 130
	';'  shift 155
	.  error

	funcend  goto 156


state 133
	vars : var .  (28)

	.  reduce 28


state 134
	func : FUNCTION qualifier functype ID . vars funcend  (18)
	func : FUNCTION qualifier functype ID . funcend  (20)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	DONE  shift 129
	DO  shift 130
	.  error

	funcend  goto 157
	vars  goto 158
	var  goto 133


state 135
	var : ARRAY ID '[' integer . ']'  (32)

	']'  shift 159
	.  error


state 136
	decl : CONST var ATTR literal .  (15)

	.  reduce 15


state 137
	program : PROGRAM decls START bodyprincipal END .  (3)

	.  reduce 3


state 138
	decl : qualifier CONST var ATTR . literal  (10)

	INTEGER  shift 21
	STR  shift 23
	.  error

	literal  goto 160
	integer  goto 102
	integerlist  goto 103
	string  goto 104
	stringintegerlist  goto 41


state 139
	decl : qualifier var ATTR literal .  (11)

	.  reduce 11


state 140
	integerlist : integerlist ',' . integer  (101)

	INTEGER  shift 21
	.  error

	integer  goto 161


state 141
	instrterm : REPEAT .  (53)

	.  reduce 53


state 142
	instrterm : STOP .  (54)

	.  reduce 54


state 143
	instrterm : RETURN . expr  (55)
	instrterm : RETURN .  (56)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	START  reduce 56
	END  reduce 56
	DONE  reduce 56
	ELSE  reduce 56
	ELIF  reduce 56
	FI  reduce 56
	';'  reduce 56

	lvalue  goto 59
	expr  goto 162
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 144
	block : instrterm .  (61)

	.  reduce 61


state 145
	instr : IF expr THEN block . FI  (44)
	instr : IF expr THEN block . elifs ELSE block FI  (45)
	instr : IF expr THEN block . elifs FI  (46)
	instr : IF expr THEN block . ELSE block FI  (47)

	ELSE  shift 163
	ELIF  shift 164
	FI  shift 165
	.  error

	elif  goto 166
	elifs  goto 167


state 146
	block : instrs .  (62)
	block : instrs . instrterm  (63)
	instrs : instrs . instr  (65)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 141
	STOP  shift 142
	RETURN  shift 143
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	START  reduce 62
	END  reduce 62
	DONE  reduce 62
	ELSE  reduce 62
	ELIF  reduce 62
	FI  reduce 62
	';'  reduce 62

	instr  goto 70
	instrterm  goto 168
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 147
	instr : FOR expr UNTIL expr . STEP expr DO $$1 block DONE  (49)
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	STEP  shift 169
	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	.  error


state 148
	lvalue : lvalue '[' expr ']' .  (67)

	.  reduce 67


state 149
	instr : lvalue '#' expr ';' .  (52)

	.  reduce 52


state 150
	expr : expr '(' args ')' .  (70)

	.  reduce 70


state 151
	args : args ',' . expr  (103)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 170
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 152
	funcend : DO body .  (23)

	.  reduce 23


state 153
	body : bodyvars . block  (38)
	bodyvars : bodyvars . var ';'  (43)
	block : .  (60)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 141
	STOP  shift 142
	RETURN  shift 143
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	START  reduce 60
	END  reduce 60
	';'  reduce 60

	var  goto 68
	instr  goto 35
	instrterm  goto 144
	block  goto 171
	instrs  goto 146
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 154
	body : block .  (39)

	.  reduce 39


state 155
	vars : vars ';' . var  (29)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	.  error

	var  goto 172


state 156
	func : FUNCTION functype ID vars funcend .  (19)

	.  reduce 19


state 157
	func : FUNCTION qualifier functype ID funcend .  (20)

	.  reduce 20


state 158
	func : FUNCTION qualifier functype ID vars . funcend  (18)
	vars : vars . ';' var  (29)

	DONE  shift 129
	DO  shift 130
	';'  shift 155
	.  error

	funcend  goto 173


state 159
	var : ARRAY ID '[' integer ']' .  (32)

	.  reduce 32


state 160
	decl : qualifier CONST var ATTR literal .  (10)

	.  reduce 10


state 161
	integerlist : integerlist ',' integer .  (101)

	.  reduce 101


state 162
	instrterm : RETURN expr .  (55)
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 55
	END  reduce 55
	DONE  reduce 55
	ELSE  reduce 55
	ELIF  reduce 55
	FI  reduce 55
	';'  reduce 55


state 163
	instr : IF expr THEN block ELSE . block FI  (47)
	block : .  (60)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 141
	STOP  shift 142
	RETURN  shift 143
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	FI  reduce 60

	instr  goto 35
	instrterm  goto 144
	block  goto 174
	instrs  goto 146
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 164
	elif : ELIF . expr THEN block  (57)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 175
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 165
	instr : IF expr THEN block FI .  (44)

	.  reduce 44


state 166
	elifs : elif .  (58)

	.  reduce 58


state 167
	instr : IF expr THEN block elifs . ELSE block FI  (45)
	instr : IF expr THEN block elifs . FI  (46)
	elifs : elifs . elif  (59)

	ELSE  shift 176
	ELIF  shift 164
	FI  shift 177
	.  error

	elif  goto 178


state 168
	block : instrs instrterm .  (63)

	.  reduce 63


state 169
	instr : FOR expr UNTIL expr STEP . expr DO $$1 block DONE  (49)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 179
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 170
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)
	args : args ',' expr .  (103)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	')'  reduce 103
	','  reduce 103


state 171
	body : bodyvars block .  (38)

	.  reduce 38


state 172
	vars : vars ';' var .  (29)

	.  reduce 29


state 173
	func : FUNCTION qualifier functype ID vars funcend .  (18)

	.  reduce 18


state 174
	instr : IF expr THEN block ELSE block . FI  (47)

	FI  shift 180
	.  error


state 175
	elif : ELIF expr . THEN block  (57)
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	THEN  shift 181
	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	.  error


state 176
	instr : IF expr THEN block elifs ELSE . block FI  (45)
	block : .  (60)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 141
	STOP  shift 142
	RETURN  shift 143
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	FI  reduce 60

	instr  goto 35
	instrterm  goto 144
	block  goto 182
	instrs  goto 146
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 177
	instr : IF expr THEN block elifs FI .  (46)

	.  reduce 46


state 178
	elifs : elifs elif .  (59)

	.  reduce 59


state 179
	instr : FOR expr UNTIL expr STEP expr . DO $$1 block DONE  (49)
	expr : expr . '(' args ')'  (70)
	expr : expr . '(' ')'  (71)
	expr : expr . '^' expr  (76)
	expr : expr . '+' expr  (77)
	expr : expr . '-' expr  (78)
	expr : expr . '*' expr  (79)
	expr : expr . '/' expr  (80)
	expr : expr . '%' expr  (81)
	expr : expr . '<' expr  (82)
	expr : expr . '>' expr  (83)
	expr : expr . GE expr  (84)
	expr : expr . LE expr  (85)
	expr : expr . NE expr  (86)
	expr : expr . '=' expr  (87)
	expr : expr . '&' expr  (89)
	expr : expr . '|' expr  (90)

	DO  shift 183
	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	.  error


state 180
	instr : IF expr THEN block ELSE block FI .  (47)

	.  reduce 47


state 181
	elif : ELIF expr THEN . block  (57)
	block : .  (60)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 141
	STOP  shift 142
	RETURN  shift 143
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	ELSE  reduce 60
	ELIF  reduce 60
	FI  reduce 60

	instr  goto 35
	instrterm  goto 144
	block  goto 184
	instrs  goto 146
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 182
	instr : IF expr THEN block elifs ELSE block . FI  (45)

	FI  shift 185
	.  error


state 183
	instr : FOR expr UNTIL expr STEP expr DO . $$1 block DONE  (49)
	$$1 : .  (48)

	.  reduce 48

	$$1  goto 186


state 184
	elif : ELIF expr THEN block .  (57)

	.  reduce 57


state 185
	instr : IF expr THEN block elifs ELSE block FI .  (45)

	.  reduce 45


state 186
	instr : FOR expr UNTIL expr STEP expr DO $$1 . block DONE  (49)
	block : .  (60)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 141
	STOP  shift 142
	RETURN  shift 143
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	DONE  reduce 60

	instr  goto 35
	instrterm  goto 144
	block  goto 187
	instrs  goto 146
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 187
	instr : FOR expr UNTIL expr STEP expr DO $$1 block . DONE  (49)

	DONE  shift 188
	.  error


state 188
	instr : FOR expr UNTIL expr STEP expr DO $$1 block DONE .  (49)

	.  reduce 49


73 terminals, 32 nonterminals
104 grammar rules, 189 states

   0  $accept : file $end

   1  file : program
   2       | module

   3  program : PROGRAM decls START bodyprincipal END
   4          | PROGRAM START bodyprincipal END

   5  module : MODULE decls END
   6         | MODULE END

   7  decls : decl
   8        | decls ';' decl

   9  decl : func
  10       | qualifier CONST var ATTR literal
  11       | qualifier var ATTR literal
  12       | qualifier var
  13       | qualifier CONST var
  14       | CONST var
  15       | CONST var ATTR literal
  16       | var
  17       | var ATTR literal

  18  func : FUNCTION qualifier functype ID vars funcend
  19       | FUNCTION functype ID vars funcend
  20       | FUNCTION qualifier functype ID funcend
  21       | FUNCTION functype ID funcend

  22  funcend : DONE
  23          | DO body

  24  functype : type
  25           | VOID

  26  qualifier : PUBLIC
  27            | FORWARD

  28  vars : var
  29       | vars ';' var

  30  var : type ID
  31      | type ID '[' integer ']'

  32  type : NUMBER
  33       | ARRAY
  34       | STRING

  35  bodyprincipal : bodyvars bodyinstrs
  36                | bodyinstrs

  37  body : bodyvars block
  38       | block

  39  bodyinstrs :
  40             | instrs

  41  bodyvars : var ';'
  42           | bodyvars var ';'

  43  instr : IF expr THEN block FI
  44        | IF expr THEN block elifs ELSE block FI
  45        | IF expr THEN block elifs FI
  46        | IF expr THEN block ELSE block FI

  47  $$1 :

  48  instr : FOR expr UNTIL expr STEP expr DO $$1 block DONE
  49        | expr ';'
  50        | expr '!'
  51        | lvalue '#' expr ';'

  52  instrterm : REPEAT
  53            | STOP
  54            | RETURN expr
  55            | RETURN

  56  elif : ELIF expr THEN block

  57  elifs : elif
  58        | elifs elif

  59  block :
  60        | instrterm
  61        | instrs
  62        | instrs instrterm

  63  instrs : instr
  64         | instrs instr

  65  lvalue : ID
  66         | lvalue '[' expr ']'

  67  expr : lvalue
  68       | '(' expr ')'
  69       | expr '(' args ')'
  70       | expr '(' ')'
  71       | string
  72       | integer
  73       | '-' expr
  74       | '&' expr
  75       | expr '^' expr
  76       | expr '+' expr
  77       | expr '-' expr
  78       | expr '*' expr
  79       | expr '/' expr
  80       | expr '%' expr
  81       | expr '<' expr
  82       | expr '>' expr
  83       | expr GE expr
  84       | expr LE expr
  85       | expr NE expr
  86       | expr '=' expr
  87       | lvalue ATTR expr
  88       | expr '&' expr
  89       | expr '|' expr
  90       | '~' expr
  91       | '?'

  92  literal : string
  93          | integerlist

  94  integer : INTEGER

  95  string : stringintegerlist
  96         | STR

  97  stringintegerlist : integer integer
  98                    | stringintegerlist integer

  99  integerlist : integer
 100              | integerlist ',' integer

 101  args : expr
 102       | args ',' expr

state 0
	$accept : . file $end  (0)

	PROGRAM  shift 1
	MODULE  shift 2
	.  error

	file  goto 3
	program  goto 4
	module  goto 5


state 1
	program : PROGRAM . decls START bodyprincipal END  (3)
	program : PROGRAM . START bodyprincipal END  (4)

	START  shift 6
	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decls  goto 14
	decl  goto 15
	func  goto 16
	qualifier  goto 17
	var  goto 18
	type  goto 19


state 2
	module : MODULE . decls END  (5)
	module : MODULE . END  (6)

	END  shift 20
	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decls  goto 21
	decl  goto 15
	func  goto 16
	qualifier  goto 17
	var  goto 18
	type  goto 19


state 3
	$accept : file . $end  (0)

	$end  accept


state 4
	file : program .  (1)

	.  reduce 1


state 5
	file : module .  (2)

	.  reduce 2


state 6
	program : PROGRAM START . bodyprincipal END  (4)
	bodyinstrs : .  (39)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 25
	FOR  shift 26
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	END  reduce 39

	bodyprincipal  goto 32
	bodyinstrs  goto 33
	bodyvars  goto 34
	var  goto 35
	type  goto 19
	instr  goto 36
	instrs  goto 37
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 7
	func : FUNCTION . qualifier functype ID vars funcend  (18)
	func : FUNCTION . functype ID vars funcend  (19)
	func : FUNCTION . qualifier functype ID funcend  (20)
	func : FUNCTION . functype ID funcend  (21)

	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	VOID  shift 43
	STRING  shift 12
	.  error

	functype  goto 44
	qualifier  goto 45
	type  goto 46


state 8
	qualifier : PUBLIC .  (26)

	.  reduce 26


state 9
	qualifier : FORWARD .  (27)

	.  reduce 27


state 10
	type : NUMBER .  (32)

	.  reduce 32


state 11
	type : ARRAY .  (33)

	.  reduce 33


state 12
	type : STRING .  (34)

	.  reduce 34


state 13
	decl : CONST . var  (14)
	decl : CONST . var ATTR literal  (15)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	.  error

	var  goto 47
	type  goto 19


state 14
	program : PROGRAM decls . START bodyprincipal END  (3)
	decls : decls . ';' decl  (8)

	START  shift 48
	';'  shift 49
	.  error


state 15
	decls : decl .  (7)

	.  reduce 7


state 16
	decl : func .  (9)

	.  reduce 9


state 17
	decl : qualifier . CONST var ATTR literal  (10)
	decl : qualifier . var ATTR literal  (11)
	decl : qualifier . var  (12)
	decl : qualifier . CONST var  (13)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 50
	.  error

	var  goto 51
	type  goto 19


state 18
	decl : var .  (16)
	decl : var . ATTR literal  (17)

	ATTR  shift 52
	START  reduce 16
	END  reduce 16
	';'  reduce 16


state 19
	var : type . ID  (30)
	var : type . ID '[' integer ']'  (31)

	ID  shift 53
	.  error


state 20
	module : MODULE END .  (6)

	.  reduce 6


state 21
	module : MODULE decls . END  (5)
	decls : decls . ';' decl  (8)

	END  shift 54
	';'  shift 49
	.  error


state 22
	integer : INTEGER .  (94)

	.  reduce 94


state 23
	lvalue : ID .  (65)

	.  reduce 65


state 24
	string : STR .  (96)

	.  reduce 96


state 25
	instr : IF . expr THEN block FI  (43)
	instr : IF . expr THEN block elifs ELSE block FI  (44)
	instr : IF . expr THEN block elifs FI  (45)
	instr : IF . expr THEN block ELSE block FI  (46)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 56
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 26
	instr : FOR . expr UNTIL expr STEP expr DO $$1 block DONE  (48)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 57
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 27
	expr : '&' . expr  (74)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 58
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 28
	expr : '~' . expr  (90)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 59
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 29
	expr : '-' . expr  (73)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 60
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 30
	expr : '?' .  (91)

	.  reduce 91


state 31
	expr : '(' . expr ')'  (68)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 61
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 32
	program : PROGRAM START bodyprincipal . END  (4)

	END  shift 62
	.  error


state 33
	bodyprincipal : bodyinstrs .  (36)

	.  reduce 36


state 34
	bodyprincipal : bodyvars . bodyinstrs  (35)
	bodyvars : bodyvars . var ';'  (42)
	bodyinstrs : .  (39)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 25
	FOR  shift 26
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	END  reduce 39

	bodyinstrs  goto 63
	var  goto 64
	type  goto 19
	instr  goto 36
	instrs  goto 37
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 35
	bodyvars : var . ';'  (41)

	';'  shift 65
	.  error


state 36
	instrs : instr .  (63)

	.  reduce 63


state 37
	bodyinstrs : instrs .  (40)
	instrs : instrs . instr  (64)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	END  reduce 40

	instr  goto 66
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 38
	instr : lvalue . '#' expr ';'  (51)
	lvalue : lvalue . '[' expr ']'  (66)
	expr : lvalue .  (67)
	expr : lvalue . ATTR expr  (87)

	ATTR  shift 67
	'['  shift 68
	'#'  shift 69
	'|'  reduce 67
	'&'  reduce 67
	NE  reduce 67
	'='  reduce 67
	'<'  reduce 67
	'>'  reduce 67
	LE  reduce 67
	GE  reduce 67
	'+'  reduce 67
	'-'  reduce 67
	'*'  reduce 67
	'/'  reduce 67
	'%'  reduce 67
	'^'  reduce 67
	'('  reduce 67
	';'  reduce 67
	'!'  reduce 67


state 39
	instr : expr . ';'  (49)
	instr : expr . '!'  (50)
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'|'  shift 70
	'&'  shift 71
	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	';'  shift 85
	'!'  shift 86
	.  error


state 40
	expr : integer .  (72)
	stringintegerlist : integer . integer  (97)

	INTEGER  shift 22
	START  reduce 72
	END  reduce 72
	DONE  reduce 72
	DO  reduce 72
	THEN  reduce 72
	ELSE  reduce 72
	ELIF  reduce 72
	FI  reduce 72
	UNTIL  reduce 72
	STEP  reduce 72
	'|'  reduce 72
	'&'  reduce 72
	NE  reduce 72
	'='  reduce 72
	'<'  reduce 72
	'>'  reduce 72
	LE  reduce 72
	GE  reduce 72
	'+'  reduce 72
	'-'  reduce 72
	'*'  reduce 72
	'/'  reduce 72
	'%'  reduce 72
	'^'  reduce 72
	'('  reduce 72
	';'  reduce 72
	']'  reduce 72
	'!'  reduce 72
	')'  reduce 72
	','  reduce 72

	integer  goto 87


state 41
	expr : string .  (71)

	.  reduce 71


state 42
	string : stringintegerlist .  (95)
	stringintegerlist : stringintegerlist . integer  (98)

	INTEGER  shift 22
	START  reduce 95
	END  reduce 95
	DONE  reduce 95
	DO  reduce 95
	THEN  reduce 95
	ELSE  reduce 95
	ELIF  reduce 95
	FI  reduce 95
	UNTIL  reduce 95
	STEP  reduce 95
	'|'  reduce 95
	'&'  reduce 95
	NE  reduce 95
	'='  reduce 95
	'<'  reduce 95
	'>'  reduce 95
	LE  reduce 95
	GE  reduce 95
	'+'  reduce 95
	'-'  reduce 95
	'*'  reduce 95
	'/'  reduce 95
	'%'  reduce 95
	'^'  reduce 95
	'('  reduce 95
	';'  reduce 95
	']'  reduce 95
	'!'  reduce 95
	')'  reduce 95
	','  reduce 95

	integer  goto 88


state 43
	functype : VOID .  (25)

	.  reduce 25


state 44
	func : FUNCTION functype . ID vars funcend  (19)
	func : FUNCTION functype . ID funcend  (21)

	ID  shift 89
	.  error


state 45
	func : FUNCTION qualifier . functype ID vars funcend  (18)
	func : FUNCTION qualifier . functype ID funcend  (20)

	NUMBER  shift 10
	ARRAY  shift 11
	VOID  shift 43
	STRING  shift 12
	.  error

	functype  goto 90
	type  goto 46


state 46
	functype : type .  (24)

	.  reduce 24


state 47
	decl : CONST var .  (14)
	decl : CONST var . ATTR literal  (15)

	ATTR  shift 91
	START  reduce 14
	END  reduce 14
	';'  reduce 14


state 48
	program : PROGRAM decls START . bodyprincipal END  (3)
	bodyinstrs : .  (39)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 25
	FOR  shift 26
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	END  reduce 39

	bodyprincipal  goto 92
	bodyinstrs  goto 33
	bodyvars  goto 34
	var  goto 35
	type  goto 19
	instr  goto 36
	instrs  goto 37
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 49
	decls : decls ';' . decl  (8)

	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decl  goto 93
	func  goto 16
	qualifier  goto 17
	var  goto 18
	type  goto 19


state 50
	decl : qualifier CONST . var ATTR literal  (10)
	decl : qualifier CONST . var  (13)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	.  error

	var  goto 94
	type  goto 19


state 51
	decl : qualifier var . ATTR literal  (11)
	decl : qualifier var .  (12)

	ATTR  shift 95
	START  reduce 12
	END  reduce 12
	';'  reduce 12


state 52
	decl : var ATTR . literal  (17)

	INTEGER  shift 22
	STR  shift 24
	.  error

	literal  goto 96
	integer  goto 97
	integerlist  goto 98
	string  goto 99
	stringintegerlist  goto 42


state 53
	var : type ID .  (30)
	var : type ID . '[' integer ']'  (31)

	'['  shift 100
	START  reduce 30
	END  reduce 30
	DONE  reduce 30
	DO  reduce 30
	ATTR  reduce 30
	';'  reduce 30


state 54
	module : MODULE decls END .  (5)

	.  reduce 5


state 55
	lvalue : lvalue . '[' expr ']'  (66)
	expr : lvalue .  (67)
	expr : lvalue . ATTR expr  (87)

	ATTR  shift 67
	'['  shift 68
	START  reduce 67
	END  reduce 67
	DONE  reduce 67
	DO  reduce 67
	THEN  reduce 67
	ELSE  reduce 67
	ELIF  reduce 67
	FI  reduce 67
	UNTIL  reduce 67
	STEP  reduce 67
	'|'  reduce 67
	'&'  reduce 67
	NE  reduce 67
	'='  reduce 67
	'<'  reduce 67
	'>'  reduce 67
	LE  reduce 67
	GE  reduce 67
	'+'  reduce 67
	'-'  reduce 67
	'*'  reduce 67
	'/'  reduce 67
	'%'  reduce 67
	'^'  reduce 67
	'('  reduce 67
	';'  reduce 67
	']'  reduce 67
	'!'  reduce 67
	')'  reduce 67
	','  reduce 67


state 56
	instr : IF expr . THEN block FI  (43)
	instr : IF expr . THEN block elifs ELSE block FI  (44)
	instr : IF expr . THEN block elifs FI  (45)
	instr : IF expr . THEN block ELSE block FI  (46)
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	THEN  shift 101
	'|'  shift 70
	'&'  shift 71
	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	.  error


state 57
	instr : FOR expr . UNTIL expr STEP expr DO $$1 block DONE  (48)
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	UNTIL  shift 102
	'|'  shift 70
	'&'  shift 71
	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	.  error


state 58
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : '&' expr .  (74)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'('  shift 84
	START  reduce 74
	END  reduce 74
	DONE  reduce 74
	DO  reduce 74
	THEN  reduce 74
	ELSE  reduce 74
	ELIF  reduce 74
	FI  reduce 74
	UNTIL  reduce 74
	STEP  reduce 74
	'|'  reduce 74
	'&'  reduce 74
	NE  reduce 74
	'='  reduce 74
	'<'  reduce 74
	'>'  reduce 74
	LE  reduce 74
	GE  reduce 74
	'+'  reduce 74
	'-'  reduce 74
	'*'  reduce 74
	'/'  reduce 74
	'%'  reduce 74
	'^'  reduce 74
	';'  reduce 74
	']'  reduce 74
	'!'  reduce 74
	')'  reduce 74
	','  reduce 74


state 59
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)
	expr : '~' expr .  (90)

	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	START  reduce 90
	END  reduce 90
	DONE  reduce 90
	DO  reduce 90
	THEN  reduce 90
	ELSE  reduce 90
	ELIF  reduce 90
	FI  reduce 90
	UNTIL  reduce 90
	STEP  reduce 90
	'|'  reduce 90
	'&'  reduce 90
	';'  reduce 90
	']'  reduce 90
	'!'  reduce 90
	')'  reduce 90
	','  reduce 90


state 60
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : '-' expr .  (73)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'('  shift 84
	START  reduce 73
	END  reduce 73
	DONE  reduce 73
	DO  reduce 73
	THEN  reduce 73
	ELSE  reduce 73
	ELIF  reduce 73
	FI  reduce 73
	UNTIL  reduce 73
	STEP  reduce 73
	'|'  reduce 73
	'&'  reduce 73
	NE  reduce 73
	'='  reduce 73
	'<'  reduce 73
	'>'  reduce 73
	LE  reduce 73
	GE  reduce 73
	'+'  reduce 73
	'-'  reduce 73
	'*'  reduce 73
	'/'  reduce 73
	'%'  reduce 73
	'^'  reduce 73
	';'  reduce 73
	']'  reduce 73
	'!'  reduce 73
	')'  reduce 73
	','  reduce 73


state 61
	expr : '(' expr . ')'  (68)
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'|'  shift 70
	'&'  shift 71
	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	')'  shift 103
	.  error


state 62
	program : PROGRAM START bodyprincipal END .  (4)

	.  reduce 4


state 63
	bodyprincipal : bodyvars bodyinstrs .  (35)

	.  reduce 35


state 64
	bodyvars : bodyvars var . ';'  (42)

	';'  shift 104
	.  error


state 65
	bodyvars : var ';' .  (41)

	.  reduce 41


state 66
	instrs : instrs instr .  (64)

	.  reduce 64


state 67
	expr : lvalue ATTR . expr  (87)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 105
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 68
	lvalue : lvalue '[' . expr ']'  (66)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 106
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 69
	instr : lvalue '#' . expr ';'  (51)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 107
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 70
	expr : expr '|' . expr  (89)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 108
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 71
	expr : expr '&' . expr  (88)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 109
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 72
	expr : expr NE . expr  (85)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 110
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 73
	expr : expr '=' . expr  (86)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 111
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 74
	expr : expr '<' . expr  (81)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 112
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 75
	expr : expr '>' . expr  (82)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 113
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 76
	expr : expr LE . expr  (84)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 114
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 77
	expr : expr GE . expr  (83)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 115
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 78
	expr : expr '+' . expr  (76)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 116
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 79
	expr : expr '-' . expr  (77)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 117
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 80
	expr : expr '*' . expr  (78)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 118
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 81
	expr : expr '/' . expr  (79)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 119
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 82
	expr : expr '%' . expr  (80)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 120
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 83
	expr : expr '^' . expr  (75)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 121
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 84
	expr : expr '(' . args ')'  (69)
	expr : expr '(' . ')'  (70)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	')'  shift 122
	.  error

	lvalue  goto 55
	expr  goto 123
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42
	args  goto 124


state 85
	instr : expr ';' .  (49)

	.  reduce 49


state 86
	instr : expr '!' .  (50)

	.  reduce 50


state 87
	stringintegerlist : integer integer .  (97)

	.  reduce 97


state 88
	stringintegerlist : stringintegerlist integer .  (98)

	.  reduce 98


state 89
	func : FUNCTION functype ID . vars funcend  (19)
	func : FUNCTION functype ID . funcend  (21)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	DONE  shift 125
	DO  shift 126
	.  error

	funcend  goto 127
	vars  goto 128
	var  goto 129
	type  goto 19


state 90
	func : FUNCTION qualifier functype . ID vars funcend  (18)
	func : FUNCTION qualifier functype . ID funcend  (20)

	ID  shift 130
	.  error


state 91
	decl : CONST var ATTR . literal  (15)

	INTEGER  shift 22
	STR  shift 24
	.  error

	literal  goto 131
	integer  goto 97
	integerlist  goto 98
	string  goto 99
	stringintegerlist  goto 42


state 92
	program : PROGRAM decls START bodyprincipal . END  (3)

	END  shift 132
	.  error


state 93
	decls : decls ';' decl .  (8)

	.  reduce 8


state 94
	decl : qualifier CONST var . ATTR literal  (10)
	decl : qualifier CONST var .  (13)

	ATTR  shift 133
	START  reduce 13
	END  reduce 13
	';'  reduce 13


state 95
	decl : qualifier var ATTR . literal  (11)

	INTEGER  shift 22
	STR  shift 24
	.  error

	literal  goto 134
	integer  goto 97
	integerlist  goto 98
	string  goto 99
	stringintegerlist  goto 42


state 96
	decl : var ATTR literal .  (17)

	.  reduce 17


state 97
	stringintegerlist : integer . integer  (97)
	integerlist : integer .  (99)

	INTEGER  shift 22
	START  reduce 99
	END  reduce 99
	';'  reduce 99
	','  reduce 99

	integer  goto 87


state 98
	literal : integerlist .  (93)
	integerlist : integerlist . ',' integer  (100)

	','  shift 135
	START  reduce 93
	END  reduce 93
	';'  reduce 93


state 99
	literal : string .  (92)

	.  reduce 92


state 100
	var : type ID '[' . integer ']'  (31)

	INTEGER  shift 22
	.  error

	integer  goto 136


state 101
	instr : IF expr THEN . block FI  (43)
	instr : IF expr THEN . block elifs ELSE block FI  (44)
	instr : IF expr THEN . block elifs FI  (45)
	instr : IF expr THEN . block ELSE block FI  (46)
	block : .  (59)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 137
	STOP  shift 138
	RETURN  shift 139
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	ELSE  reduce 59
	ELIF  reduce 59
	FI  reduce 59

	instr  goto 36
	instrterm  goto 140
	block  goto 141
	instrs  goto 142
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 102
	instr : FOR expr UNTIL . expr STEP expr DO $$1 block DONE  (48)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 143
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 103
	expr : '(' expr ')' .  (68)

	.  reduce 68


state 104
	bodyvars : bodyvars var ';' .  (42)

	.  reduce 42


state 105
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : lvalue ATTR expr .  (87)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'|'  shift 70
	'&'  shift 71
	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	START  reduce 87
	END  reduce 87
	DONE  reduce 87
	DO  reduce 87
	THEN  reduce 87
	ELSE  reduce 87
	ELIF  reduce 87
	FI  reduce 87
	UNTIL  reduce 87
	STEP  reduce 87
	';'  reduce 87
	']'  reduce 87
	'!'  reduce 87
	')'  reduce 87
	','  reduce 87


state 106
	lvalue : lvalue '[' expr . ']'  (66)
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'|'  shift 70
	'&'  shift 71
	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	']'  shift 144
	.  error


state 107
	instr : lvalue '#' expr . ';'  (51)
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'|'  shift 70
	'&'  shift 71
	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	';'  shift 145
	.  error


state 108
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)
	expr : expr '|' expr .  (89)

	'&'  shift 71
	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	START  reduce 89
	END  reduce 89
	DONE  reduce 89
	DO  reduce 89
	THEN  reduce 89
	ELSE  reduce 89
	ELIF  reduce 89
	FI  reduce 89
	UNTIL  reduce 89
	STEP  reduce 89
	'|'  reduce 89
	';'  reduce 89
	']'  reduce 89
	'!'  reduce 89
	')'  reduce 89
	','  reduce 89


state 109
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr '&' expr .  (88)
	expr : expr . '|' expr  (89)

	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	START  reduce 88
	END  reduce 88
	DONE  reduce 88
	DO  reduce 88
	THEN  reduce 88
	ELSE  reduce 88
	ELIF  reduce 88
	FI  reduce 88
	UNTIL  reduce 88
	STEP  reduce 88
	'|'  reduce 88
	'&'  reduce 88
	';'  reduce 88
	']'  reduce 88
	'!'  reduce 88
	')'  reduce 88
	','  reduce 88


state 110
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr NE expr .  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	START  reduce 85
	END  reduce 85
	DONE  reduce 85
	DO  reduce 85
	THEN  reduce 85
	ELSE  reduce 85
	ELIF  reduce 85
	FI  reduce 85
	UNTIL  reduce 85
	STEP  reduce 85
	'|'  reduce 85
	'&'  reduce 85
	NE  reduce 85
	'='  reduce 85
	';'  reduce 85
	']'  reduce 85
	'!'  reduce 85
	')'  reduce 85
	','  reduce 85


state 111
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr '=' expr .  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	START  reduce 86
	END  reduce 86
	DONE  reduce 86
	DO  reduce 86
	THEN  reduce 86
	ELSE  reduce 86
	ELIF  reduce 86
	FI  reduce 86
	UNTIL  reduce 86
	STEP  reduce 86
	'|'  reduce 86
	'&'  reduce 86
	NE  reduce 86
	'='  reduce 86
	';'  reduce 86
	']'  reduce 86
	'!'  reduce 86
	')'  reduce 86
	','  reduce 86


state 112
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr '<' expr .  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	START  reduce 81
	END  reduce 81
	DONE  reduce 81
	DO  reduce 81
	THEN  reduce 81
	ELSE  reduce 81
	ELIF  reduce 81
	FI  reduce 81
	UNTIL  reduce 81
	STEP  reduce 81
	'|'  reduce 81
	'&'  reduce 81
	NE  reduce 81
	'='  reduce 81
	'<'  reduce 81
	'>'  reduce 81
	LE  reduce 81
	GE  reduce 81
	';'  reduce 81
	']'  reduce 81
	'!'  reduce 81
	')'  reduce 81
	','  reduce 81


state 113
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr '>' expr .  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	START  reduce 82
	END  reduce 82
	DONE  reduce 82
	DO  reduce 82
	THEN  reduce 82
	ELSE  reduce 82
	ELIF  reduce 82
	FI  reduce 82
	UNTIL  reduce 82
	STEP  reduce 82
	'|'  reduce 82
	'&'  reduce 82
	NE  reduce 82
	'='  reduce 82
	'<'  reduce 82
	'>'  reduce 82
	LE  reduce 82
	GE  reduce 82
	';'  reduce 82
	']'  reduce 82
	'!'  reduce 82
	')'  reduce 82
	','  reduce 82


state 114
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr LE expr .  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	START  reduce 84
	END  reduce 84
	DONE  reduce 84
	DO  reduce 84
	THEN  reduce 84
	ELSE  reduce 84
	ELIF  reduce 84
	FI  reduce 84
	UNTIL  reduce 84
	STEP  reduce 84
	'|'  reduce 84
	'&'  reduce 84
	NE  reduce 84
	'='  reduce 84
	'<'  reduce 84
	'>'  reduce 84
	LE  reduce 84
	GE  reduce 84
	';'  reduce 84
	']'  reduce 84
	'!'  reduce 84
	')'  reduce 84
	','  reduce 84


state 115
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr GE expr .  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	START  reduce 83
	END  reduce 83
	DONE  reduce 83
	DO  reduce 83
	THEN  reduce 83
	ELSE  reduce 83
	ELIF  reduce 83
	FI  reduce 83
	UNTIL  reduce 83
	STEP  reduce 83
	'|'  reduce 83
	'&'  reduce 83
	NE  reduce 83
	'='  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	LE  reduce 83
	GE  reduce 83
	';'  reduce 83
	']'  reduce 83
	'!'  reduce 83
	')'  reduce 83
	','  reduce 83


state 116
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr '+' expr .  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	START  reduce 76
	END  reduce 76
	DONE  reduce 76
	DO  reduce 76
	THEN  reduce 76
	ELSE  reduce 76
	ELIF  reduce 76
	FI  reduce 76
	UNTIL  reduce 76
	STEP  reduce 76
	'|'  reduce 76
	'&'  reduce 76
	NE  reduce 76
	'='  reduce 76
	'<'  reduce 76
	'>'  reduce 76
	LE  reduce 76
	GE  reduce 76
	'+'  reduce 76
	'-'  reduce 76
	';'  reduce 76
	']'  reduce 76
	'!'  reduce 76
	')'  reduce 76
	','  reduce 76


state 117
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr '-' expr .  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	START  reduce 77
	END  reduce 77
	DONE  reduce 77
	DO  reduce 77
	THEN  reduce 77
	ELSE  reduce 77
	ELIF  reduce 77
	FI  reduce 77
	UNTIL  reduce 77
	STEP  reduce 77
	'|'  reduce 77
	'&'  reduce 77
	NE  reduce 77
	'='  reduce 77
	'<'  reduce 77
	'>'  reduce 77
	LE  reduce 77
	GE  reduce 77
	'+'  reduce 77
	'-'  reduce 77
	';'  reduce 77
	']'  reduce 77
	'!'  reduce 77
	')'  reduce 77
	','  reduce 77


state 118
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr '*' expr .  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'^'  shift 83
	'('  shift 84
	START  reduce 78
	END  reduce 78
	DONE  reduce 78
	DO  reduce 78
	THEN  reduce 78
	ELSE  reduce 78
	ELIF  reduce 78
	FI  reduce 78
	UNTIL  reduce 78
	STEP  reduce 78
	'|'  reduce 78
	'&'  reduce 78
	NE  reduce 78
	'='  reduce 78
	'<'  reduce 78
	'>'  reduce 78
	LE  reduce 78
	GE  reduce 78
	'+'  reduce 78
	'-'  reduce 78
	'*'  reduce 78
	'/'  reduce 78
	'%'  reduce 78
	';'  reduce 78
	']'  reduce 78
	'!'  reduce 78
	')'  reduce 78
	','  reduce 78


state 119
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr '/' expr .  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'^'  shift 83
	'('  shift 84
	START  reduce 79
	END  reduce 79
	DONE  reduce 79
	DO  reduce 79
	THEN  reduce 79
	ELSE  reduce 79
	ELIF  reduce 79
	FI  reduce 79
	UNTIL  reduce 79
	STEP  reduce 79
	'|'  reduce 79
	'&'  reduce 79
	NE  reduce 79
	'='  reduce 79
	'<'  reduce 79
	'>'  reduce 79
	LE  reduce 79
	GE  reduce 79
	'+'  reduce 79
	'-'  reduce 79
	'*'  reduce 79
	'/'  reduce 79
	'%'  reduce 79
	';'  reduce 79
	']'  reduce 79
	'!'  reduce 79
	')'  reduce 79
	','  reduce 79


state 120
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr '%' expr .  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'^'  shift 83
	'('  shift 84
	START  reduce 80
	END  reduce 80
	DONE  reduce 80
	DO  reduce 80
	THEN  reduce 80
	ELSE  reduce 80
	ELIF  reduce 80
	FI  reduce 80
	UNTIL  reduce 80
	STEP  reduce 80
	'|'  reduce 80
	'&'  reduce 80
	NE  reduce 80
	'='  reduce 80
	'<'  reduce 80
	'>'  reduce 80
	LE  reduce 80
	GE  reduce 80
	'+'  reduce 80
	'-'  reduce 80
	'*'  reduce 80
	'/'  reduce 80
	'%'  reduce 80
	';'  reduce 80
	']'  reduce 80
	'!'  reduce 80
	')'  reduce 80
	','  reduce 80


state 121
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr '^' expr .  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'^'  shift 83
	'('  shift 84
	START  reduce 75
	END  reduce 75
	DONE  reduce 75
	DO  reduce 75
	THEN  reduce 75
	ELSE  reduce 75
	ELIF  reduce 75
	FI  reduce 75
	UNTIL  reduce 75
	STEP  reduce 75
	'|'  reduce 75
	'&'  reduce 75
	NE  reduce 75
	'='  reduce 75
	'<'  reduce 75
	'>'  reduce 75
	LE  reduce 75
	GE  reduce 75
	'+'  reduce 75
	'-'  reduce 75
	'*'  reduce 75
	'/'  reduce 75
	'%'  reduce 75
	';'  reduce 75
	']'  reduce 75
	'!'  reduce 75
	')'  reduce 75
	','  reduce 75


state 122
	expr : expr '(' ')' .  (70)

	.  reduce 70


state 123
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)
	args : expr .  (101)

	'|'  shift 70
	'&'  shift 71
	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	')'  reduce 101
	','  reduce 101


state 124
	expr : expr '(' args . ')'  (69)
	args : args . ',' expr  (102)

	')'  shift 146
	','  shift 147
	.  error


state 125
	funcend : DONE .  (22)

	.  reduce 22


state 126
	funcend : DO . body  (23)
	block : .  (59)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 137
	STOP  shift 138
	RETURN  shift 139
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	START  reduce 59
	END  reduce 59
	';'  reduce 59

	body  goto 148
	bodyvars  goto 149
	var  goto 35
	type  goto 19
	instr  goto 36
	instrterm  goto 140
	block  goto 150
	instrs  goto 142
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 127
	func : FUNCTION functype ID funcend .  (21)

	.  reduce 21


state 128
	func : FUNCTION functype ID vars . funcend  (19)
	vars : vars . ';' var  (29)

	DONE  shift 125
	DO  shift 126
	';'  shift 151
	.  error

	funcend  goto 152


state 129
	vars : var .  (28)

	.  reduce 28


state 130
	func : FUNCTION qualifier functype ID . vars funcend  (18)
	func : FUNCTION qualifier functype ID . funcend  (20)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	DONE  shift 125
	DO  shift 126
	.  error

	funcend  goto 153
	vars  goto 154
	var  goto 129
	type  goto 19


state 131
	decl : CONST var ATTR literal .  (15)

	.  reduce 15


state 132
	program : PROGRAM decls START bodyprincipal END .  (3)

	.  reduce 3


state 133
	decl : qualifier CONST var ATTR . literal  (10)

	INTEGER  shift 22
	STR  shift 24
	.  error

	literal  goto 155
	integer  goto 97
	integerlist  goto 98
	string  goto 99
	stringintegerlist  goto 42


state 134
	decl : qualifier var ATTR literal .  (11)

	.  reduce 11


state 135
	integerlist : integerlist ',' . integer  (100)

	INTEGER  shift 22
	.  error

	integer  goto 156


state 136
	var : type ID '[' integer . ']'  (31)

	']'  shift 157
	.  error


state 137
	instrterm : REPEAT .  (52)

	.  reduce 52


state 138
	instrterm : STOP .  (53)

	.  reduce 53


state 139
	instrterm : RETURN . expr  (54)
	instrterm : RETURN .  (55)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	START  reduce 55
	END  reduce 55
	DONE  reduce 55
	ELSE  reduce 55
	ELIF  reduce 55
	FI  reduce 55
	';'  reduce 55

	lvalue  goto 55
	expr  goto 158
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 140
	block : instrterm .  (60)

	.  reduce 60


state 141
	instr : IF expr THEN block . FI  (43)
	instr : IF expr THEN block . elifs ELSE block FI  (44)
	instr : IF expr THEN block . elifs FI  (45)
	instr : IF expr THEN block . ELSE block FI  (46)

	ELSE  shift 159
	ELIF  shift 160
	FI  shift 161
	.  error

	elif  goto 162
	elifs  goto 163


state 142
	block : instrs .  (61)
	block : instrs . instrterm  (62)
	instrs : instrs . instr  (64)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 137
	STOP  shift 138
	RETURN  shift 139
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	START  reduce 61
	END  reduce 61
	DONE  reduce 61
	ELSE  reduce 61
	ELIF  reduce 61
	FI  reduce 61
	';'  reduce 61

	instr  goto 66
	instrterm  goto 164
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 143
	instr : FOR expr UNTIL expr . STEP expr DO $$1 block DONE  (48)
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	STEP  shift 165
	'|'  shift 70
	'&'  shift 71
	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	.  error


state 144
	lvalue : lvalue '[' expr ']' .  (66)

	.  reduce 66


state 145
	instr : lvalue '#' expr ';' .  (51)

	.  reduce 51


state 146
	expr : expr '(' args ')' .  (69)

	.  reduce 69


state 147
	args : args ',' . expr  (102)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 166
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 148
	funcend : DO body .  (23)

	.  reduce 23


state 149
	body : bodyvars . block  (37)
	bodyvars : bodyvars . var ';'  (42)
	block : .  (59)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 137
	STOP  shift 138
	RETURN  shift 139
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	START  reduce 59
	END  reduce 59
	';'  reduce 59

	var  goto 64
	type  goto 19
	instr  goto 36
	instrterm  goto 140
	block  goto 167
	instrs  goto 142
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 150
	body : block .  (38)

	.  reduce 38


state 151
	vars : vars ';' . var  (29)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	.  error

	var  goto 168
	type  goto 19


state 152
	func : FUNCTION functype ID vars funcend .  (19)

	.  reduce 19


state 153
	func : FUNCTION qualifier functype ID funcend .  (20)

	.  reduce 20


state 154
	func : FUNCTION qualifier functype ID vars . funcend  (18)
	vars : vars . ';' var  (29)

	DONE  shift 125
	DO  shift 126
	';'  shift 151
	.  error

	funcend  goto 169


state 155
	decl : qualifier CONST var ATTR literal .  (10)

	.  reduce 10


state 156
	integerlist : integerlist ',' integer .  (100)

	.  reduce 100


state 157
	var : type ID '[' integer ']' .  (31)

	.  reduce 31


state 158
	instrterm : RETURN expr .  (54)
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	'|'  shift 70
	'&'  shift 71
	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	START  reduce 54
	END  reduce 54
	DONE  reduce 54
	ELSE  reduce 54
	ELIF  reduce 54
	FI  reduce 54
	';'  reduce 54


state 159
	instr : IF expr THEN block ELSE . block FI  (46)
	block : .  (59)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 137
	STOP  shift 138
	RETURN  shift 139
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	FI  reduce 59

	instr  goto 36
	instrterm  goto 140
	block  goto 170
	instrs  goto 142
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 160
	elif : ELIF . expr THEN block  (56)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 171
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 161
	instr : IF expr THEN block FI .  (43)

	.  reduce 43


state 162
	elifs : elif .  (57)

	.  reduce 57


state 163
	instr : IF expr THEN block elifs . ELSE block FI  (44)
	instr : IF expr THEN block elifs . FI  (45)
	elifs : elifs . elif  (58)

	ELSE  shift 172
	ELIF  shift 160
	FI  shift 173
	.  error

	elif  goto 174


state 164
	block : instrs instrterm .  (62)

	.  reduce 62


state 165
	instr : FOR expr UNTIL expr STEP . expr DO $$1 block DONE  (48)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 55
	expr  goto 175
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 166
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)
	args : args ',' expr .  (102)

	'|'  shift 70
	'&'  shift 71
	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	')'  reduce 102
	','  reduce 102


state 167
	body : bodyvars block .  (37)

	.  reduce 37


state 168
	vars : vars ';' var .  (29)

	.  reduce 29


state 169
	func : FUNCTION qualifier functype ID vars funcend .  (18)

	.  reduce 18


state 170
	instr : IF expr THEN block ELSE block . FI  (46)

	FI  shift 176
	.  error


state 171
	elif : ELIF expr . THEN block  (56)
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	THEN  shift 177
	'|'  shift 70
	'&'  shift 71
	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	.  error


state 172
	instr : IF expr THEN block elifs ELSE . block FI  (44)
	block : .  (59)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 137
	STOP  shift 138
	RETURN  shift 139
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	FI  reduce 59

	instr  goto 36
	instrterm  goto 140
	block  goto 178
	instrs  goto 142
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 173
	instr : IF expr THEN block elifs FI .  (45)

	.  reduce 45


state 174
	elifs : elifs elif .  (58)

	.  reduce 58


state 175
	instr : FOR expr UNTIL expr STEP expr . DO $$1 block DONE  (48)
	expr : expr . '(' args ')'  (69)
	expr : expr . '(' ')'  (70)
	expr : expr . '^' expr  (75)
	expr : expr . '+' expr  (76)
	expr : expr . '-' expr  (77)
	expr : expr . '*' expr  (78)
	expr : expr . '/' expr  (79)
	expr : expr . '%' expr  (80)
	expr : expr . '<' expr  (81)
	expr : expr . '>' expr  (82)
	expr : expr . GE expr  (83)
	expr : expr . LE expr  (84)
	expr : expr . NE expr  (85)
	expr : expr . '=' expr  (86)
	expr : expr . '&' expr  (88)
	expr : expr . '|' expr  (89)

	DO  shift 179
	'|'  shift 70
	'&'  shift 71
	NE  shift 72
	'='  shift 73
	'<'  shift 74
	'>'  shift 75
	LE  shift 76
	GE  shift 77
	'+'  shift 78
	'-'  shift 79
	'*'  shift 80
	'/'  shift 81
	'%'  shift 82
	'^'  shift 83
	'('  shift 84
	.  error


state 176
	instr : IF expr THEN block ELSE block FI .  (46)

	.  reduce 46


state 177
	elif : ELIF expr THEN . block  (56)
	block : .  (59)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 137
	STOP  shift 138
	RETURN  shift 139
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	ELSE  reduce 59
	ELIF  reduce 59
	FI  reduce 59

	instr  goto 36
	instrterm  goto 140
	block  goto 180
	instrs  goto 142
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 178
	instr : IF expr THEN block elifs ELSE block . FI  (44)

	FI  shift 181
	.  error


state 179
	instr : FOR expr UNTIL expr STEP expr DO . $$1 block DONE  (48)
	$$1 : .  (47)

	.  reduce 47

	$$1  goto 182


state 180
	elif : ELIF expr THEN block .  (56)

	.  reduce 56


state 181
	instr : IF expr THEN block elifs ELSE block FI .  (44)

	.  reduce 44


state 182
	instr : FOR expr UNTIL expr STEP expr DO $$1 . block DONE  (48)
	block : .  (59)

	INTEGER  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 137
	STOP  shift 138
	RETURN  shift 139
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	DONE  reduce 59

	instr  goto 36
	instrterm  goto 140
	block  goto 183
	instrs  goto 142
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41
	stringintegerlist  goto 42


state 183
	instr : FOR expr UNTIL expr STEP expr DO $$1 block . DONE  (48)

	DONE  shift 184
	.  error


state 184
	instr : FOR expr UNTIL expr STEP expr DO $$1 block DONE .  (48)

	.  reduce 48


73 terminals, 32 nonterminals
103 grammar rules, 185 states

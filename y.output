   0  $accept : file $end

   1  file : program
   2       | module

   3  program : PROGRAM decls START bodyprincipal END

   4  module : MODULE decls END

   5  decls :
   6        | delclist

   7  delclist : decl
   8           | delclist ';' decl

   9  decl : func
  10       | qualifier CONST var declattr
  11       | qualifier var declattr

  12  declattr :
  13           | ATTR literal
  14           | '[' INTEGER ']'
  15           | '[' INTEGER ']' ATTR literal

  16  func : FUNCTION qualifier functype ID vars funcend

  17  funcend : DONE
  18          | DO body

  19  functype : type
  20           | VOID

  21  qualifier :
  22            | PUBLIC
  23            | FORWARD

  24  vars :
  25       | varlist

  26  varlist : var
  27          | varlist ';' var

  28  var : type ID

  29  type : NUMBER
  30       | ARRAY
  31       | STRING

  32  bodyprincipal : bodyvars bodyinstrs
  33                | bodyinstrs

  34  body : bodyvars block
  35       | block

  36  bodyinstrs :
  37             | instrs

  38  bodyvars : var ';'
  39           | bodyvars var ';'

  40  instr : IF expr THEN block FI
  41        | IF expr THEN block elifs ELSE block FI
  42        | IF expr THEN block elifs FI
  43        | IF expr THEN block ELSE block FI

  44  $$1 :

  45  instr : FOR expr UNTIL expr STEP expr DO $$1 block DONE
  46        | expr ';'
  47        | expr '!'
  48        | lvalue '#' expr ';'

  49  instrterm : REPEAT
  50            | STOP
  51            | RETURN expr
  52            | RETURN

  53  elif : ELIF expr THEN block

  54  elifs : elif
  55        | elifs elif

  56  block :
  57        | instrterm
  58        | instrs
  59        | instrs instrterm

  60  instrs : instr
  61         | instrs instr

  62  lvalue : ID
  63         | lvalue '[' expr ']'

  64  expr : lvalue
  65       | '(' expr ')'
  66       | expr '(' args ')'
  67       | expr '(' ')'
  68       | string
  69       | integer
  70       | '-' expr
  71       | '&' expr
  72       | expr '^' expr
  73       | expr '+' expr
  74       | expr '-' expr
  75       | expr '*' expr
  76       | expr '/' expr
  77       | expr '%' expr
  78       | expr '<' expr
  79       | expr '>' expr
  80       | expr GE expr
  81       | expr LE expr
  82       | expr NE expr
  83       | expr '=' expr
  84       | lvalue ATTR expr
  85       | expr '&' expr
  86       | expr '|' expr
  87       | '~' expr
  88       | '?'

  89  literal : string
  90          | integerlist

  91  integer : INTEGER

  92  string : stringintegerlist
  93         | STR

  94  stringintegerlist : integer integer
  95                    | stringintegerlist integer

  96  integerlist : integer
  97              | integerlist ',' integer

  98  args : expr
  99       | args ',' expr

state 0
	$accept : . file $end  (0)

	PROGRAM  shift 1
	MODULE  shift 2
	.  error

	file  goto 3
	program  goto 4
	module  goto 5


state 1
	program : PROGRAM . decls START bodyprincipal END  (3)
	decls : .  (5)
	qualifier : .  (21)

	FUNCTION  shift 6
	PUBLIC  shift 7
	FORWARD  shift 8
	START  reduce 5
	NUMBER  reduce 21
	ARRAY  reduce 21
	STRING  reduce 21
	CONST  reduce 21

	decls  goto 9
	delclist  goto 10
	decl  goto 11
	func  goto 12
	qualifier  goto 13


state 2
	module : MODULE . decls END  (4)
	decls : .  (5)
	qualifier : .  (21)

	FUNCTION  shift 6
	PUBLIC  shift 7
	FORWARD  shift 8
	END  reduce 5
	NUMBER  reduce 21
	ARRAY  reduce 21
	STRING  reduce 21
	CONST  reduce 21

	decls  goto 14
	delclist  goto 10
	decl  goto 11
	func  goto 12
	qualifier  goto 13


state 3
	$accept : file . $end  (0)

	$end  accept


state 4
	file : program .  (1)

	.  reduce 1


state 5
	file : module .  (2)

	.  reduce 2


state 6
	func : FUNCTION . qualifier functype ID vars funcend  (16)
	qualifier : .  (21)

	PUBLIC  shift 7
	FORWARD  shift 8
	NUMBER  reduce 21
	ARRAY  reduce 21
	VOID  reduce 21
	STRING  reduce 21

	qualifier  goto 15


state 7
	qualifier : PUBLIC .  (22)

	.  reduce 22


state 8
	qualifier : FORWARD .  (23)

	.  reduce 23


state 9
	program : PROGRAM decls . START bodyprincipal END  (3)

	START  shift 16
	.  error


state 10
	decls : delclist .  (6)
	delclist : delclist . ';' decl  (8)

	';'  shift 17
	START  reduce 6
	END  reduce 6


state 11
	delclist : decl .  (7)

	.  reduce 7


state 12
	decl : func .  (9)

	.  reduce 9


state 13
	decl : qualifier . CONST var declattr  (10)
	decl : qualifier . var declattr  (11)

	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	CONST  shift 21
	.  error

	var  goto 22
	type  goto 23


state 14
	module : MODULE decls . END  (4)

	END  shift 24
	.  error


state 15
	func : FUNCTION qualifier . functype ID vars funcend  (16)

	NUMBER  shift 18
	ARRAY  shift 19
	VOID  shift 25
	STRING  shift 20
	.  error

	functype  goto 26
	type  goto 27


state 16
	program : PROGRAM decls START . bodyprincipal END  (3)
	bodyinstrs : .  (36)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	IF  shift 31
	FOR  shift 32
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	END  reduce 36

	bodyprincipal  goto 38
	bodyinstrs  goto 39
	bodyvars  goto 40
	var  goto 41
	type  goto 23
	instr  goto 42
	instrs  goto 43
	lvalue  goto 44
	expr  goto 45
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 17
	delclist : delclist ';' . decl  (8)
	qualifier : .  (21)

	FUNCTION  shift 6
	PUBLIC  shift 7
	FORWARD  shift 8
	NUMBER  reduce 21
	ARRAY  reduce 21
	STRING  reduce 21
	CONST  reduce 21

	decl  goto 49
	func  goto 12
	qualifier  goto 13


state 18
	type : NUMBER .  (29)

	.  reduce 29


state 19
	type : ARRAY .  (30)

	.  reduce 30


state 20
	type : STRING .  (31)

	.  reduce 31


state 21
	decl : qualifier CONST . var declattr  (10)

	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	.  error

	var  goto 50
	type  goto 23


state 22
	decl : qualifier var . declattr  (11)
	declattr : .  (12)

	ATTR  shift 51
	'['  shift 52
	START  reduce 12
	END  reduce 12
	';'  reduce 12

	declattr  goto 53


state 23
	var : type . ID  (28)

	ID  shift 54
	.  error


state 24
	module : MODULE decls END .  (4)

	.  reduce 4


state 25
	functype : VOID .  (20)

	.  reduce 20


state 26
	func : FUNCTION qualifier functype . ID vars funcend  (16)

	ID  shift 55
	.  error


state 27
	functype : type .  (19)

	.  reduce 19


state 28
	integer : INTEGER .  (91)

	.  reduce 91


state 29
	lvalue : ID .  (62)

	.  reduce 62


state 30
	string : STR .  (93)

	.  reduce 93


state 31
	instr : IF . expr THEN block FI  (40)
	instr : IF . expr THEN block elifs ELSE block FI  (41)
	instr : IF . expr THEN block elifs FI  (42)
	instr : IF . expr THEN block ELSE block FI  (43)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 57
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 32
	instr : FOR . expr UNTIL expr STEP expr DO $$1 block DONE  (45)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 58
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 33
	expr : '&' . expr  (71)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 59
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 34
	expr : '~' . expr  (87)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 60
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 35
	expr : '-' . expr  (70)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 61
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 36
	expr : '?' .  (88)

	.  reduce 88


state 37
	expr : '(' . expr ')'  (65)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 62
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 38
	program : PROGRAM decls START bodyprincipal . END  (3)

	END  shift 63
	.  error


state 39
	bodyprincipal : bodyinstrs .  (33)

	.  reduce 33


state 40
	bodyprincipal : bodyvars . bodyinstrs  (32)
	bodyvars : bodyvars . var ';'  (39)
	bodyinstrs : .  (36)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	IF  shift 31
	FOR  shift 32
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	END  reduce 36

	bodyinstrs  goto 64
	var  goto 65
	type  goto 23
	instr  goto 42
	instrs  goto 43
	lvalue  goto 44
	expr  goto 45
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 41
	bodyvars : var . ';'  (38)

	';'  shift 66
	.  error


state 42
	instrs : instr .  (60)

	.  reduce 60


state 43
	bodyinstrs : instrs .  (37)
	instrs : instrs . instr  (61)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	IF  shift 31
	FOR  shift 32
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	END  reduce 37

	instr  goto 67
	lvalue  goto 44
	expr  goto 45
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 44
	instr : lvalue . '#' expr ';'  (48)
	lvalue : lvalue . '[' expr ']'  (63)
	expr : lvalue .  (64)
	expr : lvalue . ATTR expr  (84)

	ATTR  shift 68
	'['  shift 69
	'#'  shift 70
	'|'  reduce 64
	'&'  reduce 64
	NE  reduce 64
	'='  reduce 64
	'<'  reduce 64
	'>'  reduce 64
	LE  reduce 64
	GE  reduce 64
	'+'  reduce 64
	'-'  reduce 64
	'*'  reduce 64
	'/'  reduce 64
	'%'  reduce 64
	'^'  reduce 64
	'('  reduce 64
	';'  reduce 64
	'!'  reduce 64


state 45
	instr : expr . ';'  (46)
	instr : expr . '!'  (47)
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'|'  shift 71
	'&'  shift 72
	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	';'  shift 86
	'!'  shift 87
	.  error


state 46
	expr : integer .  (69)
	stringintegerlist : integer . integer  (94)

	INTEGER  shift 28
	START  reduce 69
	END  reduce 69
	DONE  reduce 69
	DO  reduce 69
	THEN  reduce 69
	ELSE  reduce 69
	ELIF  reduce 69
	FI  reduce 69
	UNTIL  reduce 69
	STEP  reduce 69
	'|'  reduce 69
	'&'  reduce 69
	NE  reduce 69
	'='  reduce 69
	'<'  reduce 69
	'>'  reduce 69
	LE  reduce 69
	GE  reduce 69
	'+'  reduce 69
	'-'  reduce 69
	'*'  reduce 69
	'/'  reduce 69
	'%'  reduce 69
	'^'  reduce 69
	'('  reduce 69
	';'  reduce 69
	']'  reduce 69
	'!'  reduce 69
	')'  reduce 69
	','  reduce 69

	integer  goto 88


state 47
	expr : string .  (68)

	.  reduce 68


state 48
	string : stringintegerlist .  (92)
	stringintegerlist : stringintegerlist . integer  (95)

	INTEGER  shift 28
	START  reduce 92
	END  reduce 92
	DONE  reduce 92
	DO  reduce 92
	THEN  reduce 92
	ELSE  reduce 92
	ELIF  reduce 92
	FI  reduce 92
	UNTIL  reduce 92
	STEP  reduce 92
	'|'  reduce 92
	'&'  reduce 92
	NE  reduce 92
	'='  reduce 92
	'<'  reduce 92
	'>'  reduce 92
	LE  reduce 92
	GE  reduce 92
	'+'  reduce 92
	'-'  reduce 92
	'*'  reduce 92
	'/'  reduce 92
	'%'  reduce 92
	'^'  reduce 92
	'('  reduce 92
	';'  reduce 92
	']'  reduce 92
	'!'  reduce 92
	')'  reduce 92
	','  reduce 92

	integer  goto 89


state 49
	delclist : delclist ';' decl .  (8)

	.  reduce 8


state 50
	decl : qualifier CONST var . declattr  (10)
	declattr : .  (12)

	ATTR  shift 51
	'['  shift 52
	START  reduce 12
	END  reduce 12
	';'  reduce 12

	declattr  goto 90


state 51
	declattr : ATTR . literal  (13)

	INTEGER  shift 28
	STR  shift 30
	.  error

	literal  goto 91
	integer  goto 92
	integerlist  goto 93
	string  goto 94
	stringintegerlist  goto 48


state 52
	declattr : '[' . INTEGER ']'  (14)
	declattr : '[' . INTEGER ']' ATTR literal  (15)

	INTEGER  shift 95
	.  error


state 53
	decl : qualifier var declattr .  (11)

	.  reduce 11


state 54
	var : type ID .  (28)

	.  reduce 28


state 55
	func : FUNCTION qualifier functype ID . vars funcend  (16)
	vars : .  (24)

	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	DONE  reduce 24
	DO  reduce 24

	vars  goto 96
	varlist  goto 97
	var  goto 98
	type  goto 23


state 56
	lvalue : lvalue . '[' expr ']'  (63)
	expr : lvalue .  (64)
	expr : lvalue . ATTR expr  (84)

	ATTR  shift 68
	'['  shift 69
	START  reduce 64
	END  reduce 64
	DONE  reduce 64
	DO  reduce 64
	THEN  reduce 64
	ELSE  reduce 64
	ELIF  reduce 64
	FI  reduce 64
	UNTIL  reduce 64
	STEP  reduce 64
	'|'  reduce 64
	'&'  reduce 64
	NE  reduce 64
	'='  reduce 64
	'<'  reduce 64
	'>'  reduce 64
	LE  reduce 64
	GE  reduce 64
	'+'  reduce 64
	'-'  reduce 64
	'*'  reduce 64
	'/'  reduce 64
	'%'  reduce 64
	'^'  reduce 64
	'('  reduce 64
	';'  reduce 64
	']'  reduce 64
	'!'  reduce 64
	')'  reduce 64
	','  reduce 64


state 57
	instr : IF expr . THEN block FI  (40)
	instr : IF expr . THEN block elifs ELSE block FI  (41)
	instr : IF expr . THEN block elifs FI  (42)
	instr : IF expr . THEN block ELSE block FI  (43)
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	THEN  shift 99
	'|'  shift 71
	'&'  shift 72
	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	.  error


state 58
	instr : FOR expr . UNTIL expr STEP expr DO $$1 block DONE  (45)
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	UNTIL  shift 100
	'|'  shift 71
	'&'  shift 72
	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	.  error


state 59
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : '&' expr .  (71)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'('  shift 85
	START  reduce 71
	END  reduce 71
	DONE  reduce 71
	DO  reduce 71
	THEN  reduce 71
	ELSE  reduce 71
	ELIF  reduce 71
	FI  reduce 71
	UNTIL  reduce 71
	STEP  reduce 71
	'|'  reduce 71
	'&'  reduce 71
	NE  reduce 71
	'='  reduce 71
	'<'  reduce 71
	'>'  reduce 71
	LE  reduce 71
	GE  reduce 71
	'+'  reduce 71
	'-'  reduce 71
	'*'  reduce 71
	'/'  reduce 71
	'%'  reduce 71
	'^'  reduce 71
	';'  reduce 71
	']'  reduce 71
	'!'  reduce 71
	')'  reduce 71
	','  reduce 71


state 60
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)
	expr : '~' expr .  (87)

	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	START  reduce 87
	END  reduce 87
	DONE  reduce 87
	DO  reduce 87
	THEN  reduce 87
	ELSE  reduce 87
	ELIF  reduce 87
	FI  reduce 87
	UNTIL  reduce 87
	STEP  reduce 87
	'|'  reduce 87
	'&'  reduce 87
	';'  reduce 87
	']'  reduce 87
	'!'  reduce 87
	')'  reduce 87
	','  reduce 87


state 61
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : '-' expr .  (70)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'('  shift 85
	START  reduce 70
	END  reduce 70
	DONE  reduce 70
	DO  reduce 70
	THEN  reduce 70
	ELSE  reduce 70
	ELIF  reduce 70
	FI  reduce 70
	UNTIL  reduce 70
	STEP  reduce 70
	'|'  reduce 70
	'&'  reduce 70
	NE  reduce 70
	'='  reduce 70
	'<'  reduce 70
	'>'  reduce 70
	LE  reduce 70
	GE  reduce 70
	'+'  reduce 70
	'-'  reduce 70
	'*'  reduce 70
	'/'  reduce 70
	'%'  reduce 70
	'^'  reduce 70
	';'  reduce 70
	']'  reduce 70
	'!'  reduce 70
	')'  reduce 70
	','  reduce 70


state 62
	expr : '(' expr . ')'  (65)
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'|'  shift 71
	'&'  shift 72
	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	')'  shift 101
	.  error


state 63
	program : PROGRAM decls START bodyprincipal END .  (3)

	.  reduce 3


state 64
	bodyprincipal : bodyvars bodyinstrs .  (32)

	.  reduce 32


state 65
	bodyvars : bodyvars var . ';'  (39)

	';'  shift 102
	.  error


state 66
	bodyvars : var ';' .  (38)

	.  reduce 38


state 67
	instrs : instrs instr .  (61)

	.  reduce 61


state 68
	expr : lvalue ATTR . expr  (84)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 103
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 69
	lvalue : lvalue '[' . expr ']'  (63)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 104
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 70
	instr : lvalue '#' . expr ';'  (48)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 105
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 71
	expr : expr '|' . expr  (86)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 106
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 72
	expr : expr '&' . expr  (85)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 107
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 73
	expr : expr NE . expr  (82)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 108
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 74
	expr : expr '=' . expr  (83)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 109
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 75
	expr : expr '<' . expr  (78)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 110
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 76
	expr : expr '>' . expr  (79)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 111
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 77
	expr : expr LE . expr  (81)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 112
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 78
	expr : expr GE . expr  (80)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 113
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 79
	expr : expr '+' . expr  (73)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 114
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 80
	expr : expr '-' . expr  (74)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 115
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 81
	expr : expr '*' . expr  (75)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 116
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 82
	expr : expr '/' . expr  (76)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 117
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 83
	expr : expr '%' . expr  (77)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 118
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 84
	expr : expr '^' . expr  (72)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 119
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 85
	expr : expr '(' . args ')'  (66)
	expr : expr '(' . ')'  (67)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	')'  shift 120
	.  error

	lvalue  goto 56
	expr  goto 121
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48
	args  goto 122


state 86
	instr : expr ';' .  (46)

	.  reduce 46


state 87
	instr : expr '!' .  (47)

	.  reduce 47


state 88
	stringintegerlist : integer integer .  (94)

	.  reduce 94


state 89
	stringintegerlist : stringintegerlist integer .  (95)

	.  reduce 95


state 90
	decl : qualifier CONST var declattr .  (10)

	.  reduce 10


state 91
	declattr : ATTR literal .  (13)

	.  reduce 13


state 92
	stringintegerlist : integer . integer  (94)
	integerlist : integer .  (96)

	INTEGER  shift 28
	START  reduce 96
	END  reduce 96
	';'  reduce 96
	','  reduce 96

	integer  goto 88


state 93
	literal : integerlist .  (90)
	integerlist : integerlist . ',' integer  (97)

	','  shift 123
	START  reduce 90
	END  reduce 90
	';'  reduce 90


state 94
	literal : string .  (89)

	.  reduce 89


state 95
	declattr : '[' INTEGER . ']'  (14)
	declattr : '[' INTEGER . ']' ATTR literal  (15)

	']'  shift 124
	.  error


state 96
	func : FUNCTION qualifier functype ID vars . funcend  (16)

	DONE  shift 125
	DO  shift 126
	.  error

	funcend  goto 127


state 97
	vars : varlist .  (25)
	varlist : varlist . ';' var  (27)

	';'  shift 128
	DONE  reduce 25
	DO  reduce 25


state 98
	varlist : var .  (26)

	.  reduce 26


state 99
	instr : IF expr THEN . block FI  (40)
	instr : IF expr THEN . block elifs ELSE block FI  (41)
	instr : IF expr THEN . block elifs FI  (42)
	instr : IF expr THEN . block ELSE block FI  (43)
	block : .  (56)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 129
	STOP  shift 130
	RETURN  shift 131
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	ELSE  reduce 56
	ELIF  reduce 56
	FI  reduce 56

	instr  goto 42
	instrterm  goto 132
	block  goto 133
	instrs  goto 134
	lvalue  goto 44
	expr  goto 45
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 100
	instr : FOR expr UNTIL . expr STEP expr DO $$1 block DONE  (45)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 135
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 101
	expr : '(' expr ')' .  (65)

	.  reduce 65


state 102
	bodyvars : bodyvars var ';' .  (39)

	.  reduce 39


state 103
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : lvalue ATTR expr .  (84)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'|'  shift 71
	'&'  shift 72
	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	START  reduce 84
	END  reduce 84
	DONE  reduce 84
	DO  reduce 84
	THEN  reduce 84
	ELSE  reduce 84
	ELIF  reduce 84
	FI  reduce 84
	UNTIL  reduce 84
	STEP  reduce 84
	';'  reduce 84
	']'  reduce 84
	'!'  reduce 84
	')'  reduce 84
	','  reduce 84


state 104
	lvalue : lvalue '[' expr . ']'  (63)
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'|'  shift 71
	'&'  shift 72
	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	']'  shift 136
	.  error


state 105
	instr : lvalue '#' expr . ';'  (48)
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'|'  shift 71
	'&'  shift 72
	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	';'  shift 137
	.  error


state 106
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)
	expr : expr '|' expr .  (86)

	'&'  shift 72
	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	START  reduce 86
	END  reduce 86
	DONE  reduce 86
	DO  reduce 86
	THEN  reduce 86
	ELSE  reduce 86
	ELIF  reduce 86
	FI  reduce 86
	UNTIL  reduce 86
	STEP  reduce 86
	'|'  reduce 86
	';'  reduce 86
	']'  reduce 86
	'!'  reduce 86
	')'  reduce 86
	','  reduce 86


state 107
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr '&' expr .  (85)
	expr : expr . '|' expr  (86)

	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	START  reduce 85
	END  reduce 85
	DONE  reduce 85
	DO  reduce 85
	THEN  reduce 85
	ELSE  reduce 85
	ELIF  reduce 85
	FI  reduce 85
	UNTIL  reduce 85
	STEP  reduce 85
	'|'  reduce 85
	'&'  reduce 85
	';'  reduce 85
	']'  reduce 85
	'!'  reduce 85
	')'  reduce 85
	','  reduce 85


state 108
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr NE expr .  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	START  reduce 82
	END  reduce 82
	DONE  reduce 82
	DO  reduce 82
	THEN  reduce 82
	ELSE  reduce 82
	ELIF  reduce 82
	FI  reduce 82
	UNTIL  reduce 82
	STEP  reduce 82
	'|'  reduce 82
	'&'  reduce 82
	NE  reduce 82
	'='  reduce 82
	';'  reduce 82
	']'  reduce 82
	'!'  reduce 82
	')'  reduce 82
	','  reduce 82


state 109
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr '=' expr .  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	START  reduce 83
	END  reduce 83
	DONE  reduce 83
	DO  reduce 83
	THEN  reduce 83
	ELSE  reduce 83
	ELIF  reduce 83
	FI  reduce 83
	UNTIL  reduce 83
	STEP  reduce 83
	'|'  reduce 83
	'&'  reduce 83
	NE  reduce 83
	'='  reduce 83
	';'  reduce 83
	']'  reduce 83
	'!'  reduce 83
	')'  reduce 83
	','  reduce 83


state 110
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr '<' expr .  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	START  reduce 78
	END  reduce 78
	DONE  reduce 78
	DO  reduce 78
	THEN  reduce 78
	ELSE  reduce 78
	ELIF  reduce 78
	FI  reduce 78
	UNTIL  reduce 78
	STEP  reduce 78
	'|'  reduce 78
	'&'  reduce 78
	NE  reduce 78
	'='  reduce 78
	'<'  reduce 78
	'>'  reduce 78
	LE  reduce 78
	GE  reduce 78
	';'  reduce 78
	']'  reduce 78
	'!'  reduce 78
	')'  reduce 78
	','  reduce 78


state 111
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr '>' expr .  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	START  reduce 79
	END  reduce 79
	DONE  reduce 79
	DO  reduce 79
	THEN  reduce 79
	ELSE  reduce 79
	ELIF  reduce 79
	FI  reduce 79
	UNTIL  reduce 79
	STEP  reduce 79
	'|'  reduce 79
	'&'  reduce 79
	NE  reduce 79
	'='  reduce 79
	'<'  reduce 79
	'>'  reduce 79
	LE  reduce 79
	GE  reduce 79
	';'  reduce 79
	']'  reduce 79
	'!'  reduce 79
	')'  reduce 79
	','  reduce 79


state 112
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr LE expr .  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	START  reduce 81
	END  reduce 81
	DONE  reduce 81
	DO  reduce 81
	THEN  reduce 81
	ELSE  reduce 81
	ELIF  reduce 81
	FI  reduce 81
	UNTIL  reduce 81
	STEP  reduce 81
	'|'  reduce 81
	'&'  reduce 81
	NE  reduce 81
	'='  reduce 81
	'<'  reduce 81
	'>'  reduce 81
	LE  reduce 81
	GE  reduce 81
	';'  reduce 81
	']'  reduce 81
	'!'  reduce 81
	')'  reduce 81
	','  reduce 81


state 113
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr GE expr .  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	START  reduce 80
	END  reduce 80
	DONE  reduce 80
	DO  reduce 80
	THEN  reduce 80
	ELSE  reduce 80
	ELIF  reduce 80
	FI  reduce 80
	UNTIL  reduce 80
	STEP  reduce 80
	'|'  reduce 80
	'&'  reduce 80
	NE  reduce 80
	'='  reduce 80
	'<'  reduce 80
	'>'  reduce 80
	LE  reduce 80
	GE  reduce 80
	';'  reduce 80
	']'  reduce 80
	'!'  reduce 80
	')'  reduce 80
	','  reduce 80


state 114
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr '+' expr .  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	START  reduce 73
	END  reduce 73
	DONE  reduce 73
	DO  reduce 73
	THEN  reduce 73
	ELSE  reduce 73
	ELIF  reduce 73
	FI  reduce 73
	UNTIL  reduce 73
	STEP  reduce 73
	'|'  reduce 73
	'&'  reduce 73
	NE  reduce 73
	'='  reduce 73
	'<'  reduce 73
	'>'  reduce 73
	LE  reduce 73
	GE  reduce 73
	'+'  reduce 73
	'-'  reduce 73
	';'  reduce 73
	']'  reduce 73
	'!'  reduce 73
	')'  reduce 73
	','  reduce 73


state 115
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr '-' expr .  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	START  reduce 74
	END  reduce 74
	DONE  reduce 74
	DO  reduce 74
	THEN  reduce 74
	ELSE  reduce 74
	ELIF  reduce 74
	FI  reduce 74
	UNTIL  reduce 74
	STEP  reduce 74
	'|'  reduce 74
	'&'  reduce 74
	NE  reduce 74
	'='  reduce 74
	'<'  reduce 74
	'>'  reduce 74
	LE  reduce 74
	GE  reduce 74
	'+'  reduce 74
	'-'  reduce 74
	';'  reduce 74
	']'  reduce 74
	'!'  reduce 74
	')'  reduce 74
	','  reduce 74


state 116
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr '*' expr .  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'^'  shift 84
	'('  shift 85
	START  reduce 75
	END  reduce 75
	DONE  reduce 75
	DO  reduce 75
	THEN  reduce 75
	ELSE  reduce 75
	ELIF  reduce 75
	FI  reduce 75
	UNTIL  reduce 75
	STEP  reduce 75
	'|'  reduce 75
	'&'  reduce 75
	NE  reduce 75
	'='  reduce 75
	'<'  reduce 75
	'>'  reduce 75
	LE  reduce 75
	GE  reduce 75
	'+'  reduce 75
	'-'  reduce 75
	'*'  reduce 75
	'/'  reduce 75
	'%'  reduce 75
	';'  reduce 75
	']'  reduce 75
	'!'  reduce 75
	')'  reduce 75
	','  reduce 75


state 117
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr '/' expr .  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'^'  shift 84
	'('  shift 85
	START  reduce 76
	END  reduce 76
	DONE  reduce 76
	DO  reduce 76
	THEN  reduce 76
	ELSE  reduce 76
	ELIF  reduce 76
	FI  reduce 76
	UNTIL  reduce 76
	STEP  reduce 76
	'|'  reduce 76
	'&'  reduce 76
	NE  reduce 76
	'='  reduce 76
	'<'  reduce 76
	'>'  reduce 76
	LE  reduce 76
	GE  reduce 76
	'+'  reduce 76
	'-'  reduce 76
	'*'  reduce 76
	'/'  reduce 76
	'%'  reduce 76
	';'  reduce 76
	']'  reduce 76
	'!'  reduce 76
	')'  reduce 76
	','  reduce 76


state 118
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr '%' expr .  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'^'  shift 84
	'('  shift 85
	START  reduce 77
	END  reduce 77
	DONE  reduce 77
	DO  reduce 77
	THEN  reduce 77
	ELSE  reduce 77
	ELIF  reduce 77
	FI  reduce 77
	UNTIL  reduce 77
	STEP  reduce 77
	'|'  reduce 77
	'&'  reduce 77
	NE  reduce 77
	'='  reduce 77
	'<'  reduce 77
	'>'  reduce 77
	LE  reduce 77
	GE  reduce 77
	'+'  reduce 77
	'-'  reduce 77
	'*'  reduce 77
	'/'  reduce 77
	'%'  reduce 77
	';'  reduce 77
	']'  reduce 77
	'!'  reduce 77
	')'  reduce 77
	','  reduce 77


state 119
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr '^' expr .  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'^'  shift 84
	'('  shift 85
	START  reduce 72
	END  reduce 72
	DONE  reduce 72
	DO  reduce 72
	THEN  reduce 72
	ELSE  reduce 72
	ELIF  reduce 72
	FI  reduce 72
	UNTIL  reduce 72
	STEP  reduce 72
	'|'  reduce 72
	'&'  reduce 72
	NE  reduce 72
	'='  reduce 72
	'<'  reduce 72
	'>'  reduce 72
	LE  reduce 72
	GE  reduce 72
	'+'  reduce 72
	'-'  reduce 72
	'*'  reduce 72
	'/'  reduce 72
	'%'  reduce 72
	';'  reduce 72
	']'  reduce 72
	'!'  reduce 72
	')'  reduce 72
	','  reduce 72


state 120
	expr : expr '(' ')' .  (67)

	.  reduce 67


state 121
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)
	args : expr .  (98)

	'|'  shift 71
	'&'  shift 72
	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	')'  reduce 98
	','  reduce 98


state 122
	expr : expr '(' args . ')'  (66)
	args : args . ',' expr  (99)

	')'  shift 138
	','  shift 139
	.  error


state 123
	integerlist : integerlist ',' . integer  (97)

	INTEGER  shift 28
	.  error

	integer  goto 140


state 124
	declattr : '[' INTEGER ']' .  (14)
	declattr : '[' INTEGER ']' . ATTR literal  (15)

	ATTR  shift 141
	START  reduce 14
	END  reduce 14
	';'  reduce 14


state 125
	funcend : DONE .  (17)

	.  reduce 17


state 126
	funcend : DO . body  (18)
	block : .  (56)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 129
	STOP  shift 130
	RETURN  shift 131
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	START  reduce 56
	END  reduce 56
	';'  reduce 56

	body  goto 142
	bodyvars  goto 143
	var  goto 41
	type  goto 23
	instr  goto 42
	instrterm  goto 132
	block  goto 144
	instrs  goto 134
	lvalue  goto 44
	expr  goto 45
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 127
	func : FUNCTION qualifier functype ID vars funcend .  (16)

	.  reduce 16


state 128
	varlist : varlist ';' . var  (27)

	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	.  error

	var  goto 145
	type  goto 23


state 129
	instrterm : REPEAT .  (49)

	.  reduce 49


state 130
	instrterm : STOP .  (50)

	.  reduce 50


state 131
	instrterm : RETURN . expr  (51)
	instrterm : RETURN .  (52)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	START  reduce 52
	END  reduce 52
	DONE  reduce 52
	ELSE  reduce 52
	ELIF  reduce 52
	FI  reduce 52
	';'  reduce 52

	lvalue  goto 56
	expr  goto 146
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 132
	block : instrterm .  (57)

	.  reduce 57


state 133
	instr : IF expr THEN block . FI  (40)
	instr : IF expr THEN block . elifs ELSE block FI  (41)
	instr : IF expr THEN block . elifs FI  (42)
	instr : IF expr THEN block . ELSE block FI  (43)

	ELSE  shift 147
	ELIF  shift 148
	FI  shift 149
	.  error

	elif  goto 150
	elifs  goto 151


state 134
	block : instrs .  (58)
	block : instrs . instrterm  (59)
	instrs : instrs . instr  (61)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 129
	STOP  shift 130
	RETURN  shift 131
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	START  reduce 58
	END  reduce 58
	DONE  reduce 58
	ELSE  reduce 58
	ELIF  reduce 58
	FI  reduce 58
	';'  reduce 58

	instr  goto 67
	instrterm  goto 152
	lvalue  goto 44
	expr  goto 45
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 135
	instr : FOR expr UNTIL expr . STEP expr DO $$1 block DONE  (45)
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	STEP  shift 153
	'|'  shift 71
	'&'  shift 72
	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	.  error


state 136
	lvalue : lvalue '[' expr ']' .  (63)

	.  reduce 63


state 137
	instr : lvalue '#' expr ';' .  (48)

	.  reduce 48


state 138
	expr : expr '(' args ')' .  (66)

	.  reduce 66


state 139
	args : args ',' . expr  (99)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 154
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 140
	integerlist : integerlist ',' integer .  (97)

	.  reduce 97


state 141
	declattr : '[' INTEGER ']' ATTR . literal  (15)

	INTEGER  shift 28
	STR  shift 30
	.  error

	literal  goto 155
	integer  goto 92
	integerlist  goto 93
	string  goto 94
	stringintegerlist  goto 48


state 142
	funcend : DO body .  (18)

	.  reduce 18


state 143
	body : bodyvars . block  (34)
	bodyvars : bodyvars . var ';'  (39)
	block : .  (56)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 129
	STOP  shift 130
	RETURN  shift 131
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	START  reduce 56
	END  reduce 56
	';'  reduce 56

	var  goto 65
	type  goto 23
	instr  goto 42
	instrterm  goto 132
	block  goto 156
	instrs  goto 134
	lvalue  goto 44
	expr  goto 45
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 144
	body : block .  (35)

	.  reduce 35


state 145
	varlist : varlist ';' var .  (27)

	.  reduce 27


state 146
	instrterm : RETURN expr .  (51)
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	'|'  shift 71
	'&'  shift 72
	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	START  reduce 51
	END  reduce 51
	DONE  reduce 51
	ELSE  reduce 51
	ELIF  reduce 51
	FI  reduce 51
	';'  reduce 51


state 147
	instr : IF expr THEN block ELSE . block FI  (43)
	block : .  (56)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 129
	STOP  shift 130
	RETURN  shift 131
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	FI  reduce 56

	instr  goto 42
	instrterm  goto 132
	block  goto 157
	instrs  goto 134
	lvalue  goto 44
	expr  goto 45
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 148
	elif : ELIF . expr THEN block  (53)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 158
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 149
	instr : IF expr THEN block FI .  (40)

	.  reduce 40


state 150
	elifs : elif .  (54)

	.  reduce 54


state 151
	instr : IF expr THEN block elifs . ELSE block FI  (41)
	instr : IF expr THEN block elifs . FI  (42)
	elifs : elifs . elif  (55)

	ELSE  shift 159
	ELIF  shift 148
	FI  shift 160
	.  error

	elif  goto 161


state 152
	block : instrs instrterm .  (59)

	.  reduce 59


state 153
	instr : FOR expr UNTIL expr STEP . expr DO $$1 block DONE  (45)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	.  error

	lvalue  goto 56
	expr  goto 162
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 154
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)
	args : args ',' expr .  (99)

	'|'  shift 71
	'&'  shift 72
	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	')'  reduce 99
	','  reduce 99


state 155
	declattr : '[' INTEGER ']' ATTR literal .  (15)

	.  reduce 15


state 156
	body : bodyvars block .  (34)

	.  reduce 34


state 157
	instr : IF expr THEN block ELSE block . FI  (43)

	FI  shift 163
	.  error


state 158
	elif : ELIF expr . THEN block  (53)
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	THEN  shift 164
	'|'  shift 71
	'&'  shift 72
	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	.  error


state 159
	instr : IF expr THEN block elifs ELSE . block FI  (41)
	block : .  (56)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 129
	STOP  shift 130
	RETURN  shift 131
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	FI  reduce 56

	instr  goto 42
	instrterm  goto 132
	block  goto 165
	instrs  goto 134
	lvalue  goto 44
	expr  goto 45
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 160
	instr : IF expr THEN block elifs FI .  (42)

	.  reduce 42


state 161
	elifs : elifs elif .  (55)

	.  reduce 55


state 162
	instr : FOR expr UNTIL expr STEP expr . DO $$1 block DONE  (45)
	expr : expr . '(' args ')'  (66)
	expr : expr . '(' ')'  (67)
	expr : expr . '^' expr  (72)
	expr : expr . '+' expr  (73)
	expr : expr . '-' expr  (74)
	expr : expr . '*' expr  (75)
	expr : expr . '/' expr  (76)
	expr : expr . '%' expr  (77)
	expr : expr . '<' expr  (78)
	expr : expr . '>' expr  (79)
	expr : expr . GE expr  (80)
	expr : expr . LE expr  (81)
	expr : expr . NE expr  (82)
	expr : expr . '=' expr  (83)
	expr : expr . '&' expr  (85)
	expr : expr . '|' expr  (86)

	DO  shift 166
	'|'  shift 71
	'&'  shift 72
	NE  shift 73
	'='  shift 74
	'<'  shift 75
	'>'  shift 76
	LE  shift 77
	GE  shift 78
	'+'  shift 79
	'-'  shift 80
	'*'  shift 81
	'/'  shift 82
	'%'  shift 83
	'^'  shift 84
	'('  shift 85
	.  error


state 163
	instr : IF expr THEN block ELSE block FI .  (43)

	.  reduce 43


state 164
	elif : ELIF expr THEN . block  (53)
	block : .  (56)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 129
	STOP  shift 130
	RETURN  shift 131
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	ELSE  reduce 56
	ELIF  reduce 56
	FI  reduce 56

	instr  goto 42
	instrterm  goto 132
	block  goto 167
	instrs  goto 134
	lvalue  goto 44
	expr  goto 45
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 165
	instr : IF expr THEN block elifs ELSE block . FI  (41)

	FI  shift 168
	.  error


state 166
	instr : FOR expr UNTIL expr STEP expr DO . $$1 block DONE  (45)
	$$1 : .  (44)

	.  reduce 44

	$$1  goto 169


state 167
	elif : ELIF expr THEN block .  (53)

	.  reduce 53


state 168
	instr : IF expr THEN block elifs ELSE block FI .  (41)

	.  reduce 41


state 169
	instr : FOR expr UNTIL expr STEP expr DO $$1 . block DONE  (45)
	block : .  (56)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 129
	STOP  shift 130
	RETURN  shift 131
	'&'  shift 33
	'~'  shift 34
	'-'  shift 35
	'?'  shift 36
	'('  shift 37
	DONE  reduce 56

	instr  goto 42
	instrterm  goto 132
	block  goto 170
	instrs  goto 134
	lvalue  goto 44
	expr  goto 45
	integer  goto 46
	string  goto 47
	stringintegerlist  goto 48


state 170
	instr : FOR expr UNTIL expr STEP expr DO $$1 block . DONE  (45)

	DONE  shift 171
	.  error


state 171
	instr : FOR expr UNTIL expr STEP expr DO $$1 block DONE .  (45)

	.  reduce 45


74 terminals, 35 nonterminals
100 grammar rules, 172 states

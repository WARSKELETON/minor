   0  $accept : file $end

   1  file : program
   2       | module

   3  program : PROGRAM decls START bodyprincipal END
   4          | PROGRAM START bodyprincipal END

   5  module : MODULE decls END
   6         | MODULE END

   7  decls : decl
   8        | decls ';' decl

   9  decl : func
  10       | qualifier CONST var ATTR literal
  11       | qualifier var ATTR literal
  12       | qualifier var
  13       | qualifier CONST var
  14       | CONST var
  15       | CONST var ATTR literal
  16       | var
  17       | var ATTR literal

  18  $$1 :

  19  func : FUNCTION qualifier functype ID $$1 params funcend

  20  $$2 :

  21  func : FUNCTION functype ID $$2 params funcend

  22  $$3 :

  23  func : FUNCTION qualifier functype ID $$3 funcend

  24  $$4 :

  25  func : FUNCTION functype ID $$4 funcend

  26  funcend : DONE
  27          | DO body

  28  functype : type
  29           | VOID

  30  qualifier : PUBLIC
  31            | FORWARD

  32  params : param
  33         | params ';' param

  34  param : STRING ID
  35        | NUMBER ID
  36        | ARRAY ID '[' integer ']'

  37  var : STRING ID
  38      | NUMBER ID
  39      | ARRAY ID '[' integer ']'

  40  type : NUMBER
  41       | ARRAY
  42       | STRING

  43  bodyprincipal : bodyvars bodyinstrs
  44                | bodyinstrs

  45  body : bodyvars block
  46       | block

  47  bodyinstrs :
  48             | instrs

  49  bodyvars : var ';'
  50           | bodyvars var ';'

  51  instr : IF expr THEN block FI
  52        | IF expr THEN block elifs ELSE block FI
  53        | IF expr THEN block elifs FI
  54        | IF expr THEN block ELSE block FI

  55  $$5 :

  56  instr : FOR expr UNTIL expr STEP expr DO $$5 block DONE
  57        | expr ';'
  58        | expr '!'
  59        | lvalue '#' expr ';'

  60  instrterm : REPEAT
  61            | STOP
  62            | RETURN expr
  63            | RETURN

  64  elif : ELIF expr THEN block

  65  elifs : elif
  66        | elifs elif

  67  block :
  68        | instrterm
  69        | instrs
  70        | instrs instrterm

  71  instrs : instr
  72         | instrs instr

  73  lvalue : ID
  74         | lvalue '[' expr ']'

  75  expr : lvalue
  76       | '(' expr ')'
  77       | expr '(' args ')'
  78       | expr '(' ')'
  79       | string
  80       | integer
  81       | '-' expr
  82       | '&' lvalue
  83       | expr '^' expr
  84       | expr '+' expr
  85       | expr '-' expr
  86       | expr '*' expr
  87       | expr '/' expr
  88       | expr '%' expr
  89       | expr '<' expr
  90       | expr '>' expr
  91       | expr GE expr
  92       | expr LE expr
  93       | expr NE expr
  94       | expr '=' expr
  95       | lvalue ATTR expr
  96       | expr '&' expr
  97       | expr '|' expr
  98       | '~' expr
  99       | '?'

 100  literal : string
 101          | integerlist

 102  integer : INTEGER

 103  string : stringintegerlist
 104         | STR

 105  stringintegerlist : integer integer
 106                    | stringintegerlist integer

 107  integerlist : integer
 108              | integerlist ',' integer

 109  args : expr
 110       | args ',' expr

state 0
	$accept : . file $end  (0)

	PROGRAM  shift 1
	MODULE  shift 2
	.  error

	file  goto 3
	program  goto 4
	module  goto 5


state 1
	program : PROGRAM . decls START bodyprincipal END  (3)
	program : PROGRAM . START bodyprincipal END  (4)

	START  shift 6
	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decls  goto 14
	decl  goto 15
	func  goto 16
	qualifier  goto 17
	var  goto 18


state 2
	module : MODULE . decls END  (5)
	module : MODULE . END  (6)

	END  shift 19
	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decls  goto 20
	decl  goto 15
	func  goto 16
	qualifier  goto 17
	var  goto 18


state 3
	$accept : file . $end  (0)

	$end  accept


state 4
	file : program .  (1)

	.  reduce 1


state 5
	file : module .  (2)

	.  reduce 2


state 6
	program : PROGRAM START . bodyprincipal END  (4)
	bodyinstrs : .  (47)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	END  reduce 47

	bodyprincipal  goto 31
	bodyinstrs  goto 32
	bodyvars  goto 33
	var  goto 34
	instr  goto 35
	instrs  goto 36
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 7
	func : FUNCTION . qualifier functype ID $$1 params funcend  (19)
	func : FUNCTION . functype ID $$2 params funcend  (21)
	func : FUNCTION . qualifier functype ID $$3 funcend  (23)
	func : FUNCTION . functype ID $$4 funcend  (25)

	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 42
	ARRAY  shift 43
	VOID  shift 44
	STRING  shift 45
	.  error

	functype  goto 46
	qualifier  goto 47
	type  goto 48


state 8
	qualifier : PUBLIC .  (30)

	.  reduce 30


state 9
	qualifier : FORWARD .  (31)

	.  reduce 31


state 10
	var : NUMBER . ID  (38)

	ID  shift 49
	.  error


state 11
	var : ARRAY . ID '[' integer ']'  (39)

	ID  shift 50
	.  error


state 12
	var : STRING . ID  (37)

	ID  shift 51
	.  error


state 13
	decl : CONST . var  (14)
	decl : CONST . var ATTR literal  (15)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	.  error

	var  goto 52


state 14
	program : PROGRAM decls . START bodyprincipal END  (3)
	decls : decls . ';' decl  (8)

	START  shift 53
	';'  shift 54
	.  error


state 15
	decls : decl .  (7)

	.  reduce 7


state 16
	decl : func .  (9)

	.  reduce 9


state 17
	decl : qualifier . CONST var ATTR literal  (10)
	decl : qualifier . var ATTR literal  (11)
	decl : qualifier . var  (12)
	decl : qualifier . CONST var  (13)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 55
	.  error

	var  goto 56


state 18
	decl : var .  (16)
	decl : var . ATTR literal  (17)

	ATTR  shift 57
	START  reduce 16
	END  reduce 16
	';'  reduce 16


state 19
	module : MODULE END .  (6)

	.  reduce 6


state 20
	module : MODULE decls . END  (5)
	decls : decls . ';' decl  (8)

	END  shift 58
	';'  shift 54
	.  error


state 21
	integer : INTEGER .  (102)

	.  reduce 102


state 22
	lvalue : ID .  (73)

	.  reduce 73


state 23
	string : STR .  (104)

	.  reduce 104


state 24
	instr : IF . expr THEN block FI  (51)
	instr : IF . expr THEN block elifs ELSE block FI  (52)
	instr : IF . expr THEN block elifs FI  (53)
	instr : IF . expr THEN block ELSE block FI  (54)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 60
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 25
	instr : FOR . expr UNTIL expr STEP expr DO $$5 block DONE  (56)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 61
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 26
	expr : '&' . lvalue  (82)

	ID  shift 22
	.  error

	lvalue  goto 62


state 27
	expr : '~' . expr  (98)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 63
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 28
	expr : '-' . expr  (81)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 64
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 29
	expr : '?' .  (99)

	.  reduce 99


state 30
	expr : '(' . expr ')'  (76)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 65
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 31
	program : PROGRAM START bodyprincipal . END  (4)

	END  shift 66
	.  error


state 32
	bodyprincipal : bodyinstrs .  (44)

	.  reduce 44


state 33
	bodyprincipal : bodyvars . bodyinstrs  (43)
	bodyvars : bodyvars . var ';'  (50)
	bodyinstrs : .  (47)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	END  reduce 47

	bodyinstrs  goto 67
	var  goto 68
	instr  goto 35
	instrs  goto 36
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 34
	bodyvars : var . ';'  (49)

	';'  shift 69
	.  error


state 35
	instrs : instr .  (71)

	.  reduce 71


state 36
	bodyinstrs : instrs .  (48)
	instrs : instrs . instr  (72)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	END  reduce 48

	instr  goto 70
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 37
	instr : lvalue . '#' expr ';'  (59)
	lvalue : lvalue . '[' expr ']'  (74)
	expr : lvalue .  (75)
	expr : lvalue . ATTR expr  (95)

	ATTR  shift 71
	'['  shift 72
	'#'  shift 73
	'|'  reduce 75
	'&'  reduce 75
	NE  reduce 75
	'='  reduce 75
	'<'  reduce 75
	'>'  reduce 75
	LE  reduce 75
	GE  reduce 75
	'+'  reduce 75
	'-'  reduce 75
	'*'  reduce 75
	'/'  reduce 75
	'%'  reduce 75
	'^'  reduce 75
	'('  reduce 75
	';'  reduce 75
	'!'  reduce 75


state 38
	instr : expr . ';'  (57)
	instr : expr . '!'  (58)
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	';'  shift 89
	'!'  shift 90
	.  error


state 39
	expr : integer .  (80)
	stringintegerlist : integer . integer  (105)

	INTEGER  shift 21
	START  reduce 80
	END  reduce 80
	DONE  reduce 80
	DO  reduce 80
	THEN  reduce 80
	ELSE  reduce 80
	ELIF  reduce 80
	FI  reduce 80
	UNTIL  reduce 80
	STEP  reduce 80
	'|'  reduce 80
	'&'  reduce 80
	NE  reduce 80
	'='  reduce 80
	'<'  reduce 80
	'>'  reduce 80
	LE  reduce 80
	GE  reduce 80
	'+'  reduce 80
	'-'  reduce 80
	'*'  reduce 80
	'/'  reduce 80
	'%'  reduce 80
	'^'  reduce 80
	'('  reduce 80
	';'  reduce 80
	']'  reduce 80
	'!'  reduce 80
	')'  reduce 80
	','  reduce 80

	integer  goto 91


state 40
	expr : string .  (79)

	.  reduce 79


state 41
	string : stringintegerlist .  (103)
	stringintegerlist : stringintegerlist . integer  (106)

	INTEGER  shift 21
	START  reduce 103
	END  reduce 103
	DONE  reduce 103
	DO  reduce 103
	THEN  reduce 103
	ELSE  reduce 103
	ELIF  reduce 103
	FI  reduce 103
	UNTIL  reduce 103
	STEP  reduce 103
	'|'  reduce 103
	'&'  reduce 103
	NE  reduce 103
	'='  reduce 103
	'<'  reduce 103
	'>'  reduce 103
	LE  reduce 103
	GE  reduce 103
	'+'  reduce 103
	'-'  reduce 103
	'*'  reduce 103
	'/'  reduce 103
	'%'  reduce 103
	'^'  reduce 103
	'('  reduce 103
	';'  reduce 103
	']'  reduce 103
	'!'  reduce 103
	')'  reduce 103
	','  reduce 103

	integer  goto 92


state 42
	type : NUMBER .  (40)

	.  reduce 40


state 43
	type : ARRAY .  (41)

	.  reduce 41


state 44
	functype : VOID .  (29)

	.  reduce 29


state 45
	type : STRING .  (42)

	.  reduce 42


state 46
	func : FUNCTION functype . ID $$2 params funcend  (21)
	func : FUNCTION functype . ID $$4 funcend  (25)

	ID  shift 93
	.  error


state 47
	func : FUNCTION qualifier . functype ID $$1 params funcend  (19)
	func : FUNCTION qualifier . functype ID $$3 funcend  (23)

	NUMBER  shift 42
	ARRAY  shift 43
	VOID  shift 44
	STRING  shift 45
	.  error

	functype  goto 94
	type  goto 48


state 48
	functype : type .  (28)

	.  reduce 28


state 49
	var : NUMBER ID .  (38)

	.  reduce 38


state 50
	var : ARRAY ID . '[' integer ']'  (39)

	'['  shift 95
	.  error


state 51
	var : STRING ID .  (37)

	.  reduce 37


state 52
	decl : CONST var .  (14)
	decl : CONST var . ATTR literal  (15)

	ATTR  shift 96
	START  reduce 14
	END  reduce 14
	';'  reduce 14


state 53
	program : PROGRAM decls START . bodyprincipal END  (3)
	bodyinstrs : .  (47)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	END  reduce 47

	bodyprincipal  goto 97
	bodyinstrs  goto 32
	bodyvars  goto 33
	var  goto 34
	instr  goto 35
	instrs  goto 36
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 54
	decls : decls ';' . decl  (8)

	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decl  goto 98
	func  goto 16
	qualifier  goto 17
	var  goto 18


state 55
	decl : qualifier CONST . var ATTR literal  (10)
	decl : qualifier CONST . var  (13)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	.  error

	var  goto 99


state 56
	decl : qualifier var . ATTR literal  (11)
	decl : qualifier var .  (12)

	ATTR  shift 100
	START  reduce 12
	END  reduce 12
	';'  reduce 12


state 57
	decl : var ATTR . literal  (17)

	INTEGER  shift 21
	STR  shift 23
	.  error

	literal  goto 101
	integer  goto 102
	integerlist  goto 103
	string  goto 104
	stringintegerlist  goto 41


state 58
	module : MODULE decls END .  (5)

	.  reduce 5


state 59
	lvalue : lvalue . '[' expr ']'  (74)
	expr : lvalue .  (75)
	expr : lvalue . ATTR expr  (95)

	ATTR  shift 71
	'['  shift 72
	START  reduce 75
	END  reduce 75
	DONE  reduce 75
	DO  reduce 75
	THEN  reduce 75
	ELSE  reduce 75
	ELIF  reduce 75
	FI  reduce 75
	UNTIL  reduce 75
	STEP  reduce 75
	'|'  reduce 75
	'&'  reduce 75
	NE  reduce 75
	'='  reduce 75
	'<'  reduce 75
	'>'  reduce 75
	LE  reduce 75
	GE  reduce 75
	'+'  reduce 75
	'-'  reduce 75
	'*'  reduce 75
	'/'  reduce 75
	'%'  reduce 75
	'^'  reduce 75
	'('  reduce 75
	';'  reduce 75
	']'  reduce 75
	'!'  reduce 75
	')'  reduce 75
	','  reduce 75


state 60
	instr : IF expr . THEN block FI  (51)
	instr : IF expr . THEN block elifs ELSE block FI  (52)
	instr : IF expr . THEN block elifs FI  (53)
	instr : IF expr . THEN block ELSE block FI  (54)
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	THEN  shift 105
	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	.  error


state 61
	instr : FOR expr . UNTIL expr STEP expr DO $$5 block DONE  (56)
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	UNTIL  shift 106
	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	.  error


state 62
	lvalue : lvalue . '[' expr ']'  (74)
	expr : '&' lvalue .  (82)

	'['  shift 72
	START  reduce 82
	END  reduce 82
	DONE  reduce 82
	DO  reduce 82
	THEN  reduce 82
	ELSE  reduce 82
	ELIF  reduce 82
	FI  reduce 82
	UNTIL  reduce 82
	STEP  reduce 82
	'|'  reduce 82
	'&'  reduce 82
	NE  reduce 82
	'='  reduce 82
	'<'  reduce 82
	'>'  reduce 82
	LE  reduce 82
	GE  reduce 82
	'+'  reduce 82
	'-'  reduce 82
	'*'  reduce 82
	'/'  reduce 82
	'%'  reduce 82
	'^'  reduce 82
	'('  reduce 82
	';'  reduce 82
	']'  reduce 82
	'!'  reduce 82
	')'  reduce 82
	','  reduce 82


state 63
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)
	expr : '~' expr .  (98)

	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 98
	END  reduce 98
	DONE  reduce 98
	DO  reduce 98
	THEN  reduce 98
	ELSE  reduce 98
	ELIF  reduce 98
	FI  reduce 98
	UNTIL  reduce 98
	STEP  reduce 98
	'|'  reduce 98
	'&'  reduce 98
	';'  reduce 98
	']'  reduce 98
	'!'  reduce 98
	')'  reduce 98
	','  reduce 98


state 64
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : '-' expr .  (81)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'('  shift 88
	START  reduce 81
	END  reduce 81
	DONE  reduce 81
	DO  reduce 81
	THEN  reduce 81
	ELSE  reduce 81
	ELIF  reduce 81
	FI  reduce 81
	UNTIL  reduce 81
	STEP  reduce 81
	'|'  reduce 81
	'&'  reduce 81
	NE  reduce 81
	'='  reduce 81
	'<'  reduce 81
	'>'  reduce 81
	LE  reduce 81
	GE  reduce 81
	'+'  reduce 81
	'-'  reduce 81
	'*'  reduce 81
	'/'  reduce 81
	'%'  reduce 81
	'^'  reduce 81
	';'  reduce 81
	']'  reduce 81
	'!'  reduce 81
	')'  reduce 81
	','  reduce 81


state 65
	expr : '(' expr . ')'  (76)
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	')'  shift 107
	.  error


state 66
	program : PROGRAM START bodyprincipal END .  (4)

	.  reduce 4


state 67
	bodyprincipal : bodyvars bodyinstrs .  (43)

	.  reduce 43


state 68
	bodyvars : bodyvars var . ';'  (50)

	';'  shift 108
	.  error


state 69
	bodyvars : var ';' .  (49)

	.  reduce 49


state 70
	instrs : instrs instr .  (72)

	.  reduce 72


state 71
	expr : lvalue ATTR . expr  (95)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 109
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 72
	lvalue : lvalue '[' . expr ']'  (74)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 110
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 73
	instr : lvalue '#' . expr ';'  (59)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 111
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 74
	expr : expr '|' . expr  (97)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 112
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 75
	expr : expr '&' . expr  (96)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 113
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 76
	expr : expr NE . expr  (93)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 114
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 77
	expr : expr '=' . expr  (94)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 115
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 78
	expr : expr '<' . expr  (89)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 116
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 79
	expr : expr '>' . expr  (90)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 117
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 80
	expr : expr LE . expr  (92)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 118
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 81
	expr : expr GE . expr  (91)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 119
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 82
	expr : expr '+' . expr  (84)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 120
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 83
	expr : expr '-' . expr  (85)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 121
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 84
	expr : expr '*' . expr  (86)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 122
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 85
	expr : expr '/' . expr  (87)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 123
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 86
	expr : expr '%' . expr  (88)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 124
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 87
	expr : expr '^' . expr  (83)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 125
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 88
	expr : expr '(' . args ')'  (77)
	expr : expr '(' . ')'  (78)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	')'  shift 126
	.  error

	lvalue  goto 59
	expr  goto 127
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41
	args  goto 128


state 89
	instr : expr ';' .  (57)

	.  reduce 57


state 90
	instr : expr '!' .  (58)

	.  reduce 58


state 91
	stringintegerlist : integer integer .  (105)

	.  reduce 105


state 92
	stringintegerlist : stringintegerlist integer .  (106)

	.  reduce 106


state 93
	func : FUNCTION functype ID . $$2 params funcend  (21)
	func : FUNCTION functype ID . $$4 funcend  (25)
	$$2 : .  (20)
	$$4 : .  (24)

	NUMBER  reduce 20
	ARRAY  reduce 20
	STRING  reduce 20
	DONE  reduce 24
	DO  reduce 24

	$$2  goto 129
	$$4  goto 130


state 94
	func : FUNCTION qualifier functype . ID $$1 params funcend  (19)
	func : FUNCTION qualifier functype . ID $$3 funcend  (23)

	ID  shift 131
	.  error


state 95
	var : ARRAY ID '[' . integer ']'  (39)

	INTEGER  shift 21
	.  error

	integer  goto 132


state 96
	decl : CONST var ATTR . literal  (15)

	INTEGER  shift 21
	STR  shift 23
	.  error

	literal  goto 133
	integer  goto 102
	integerlist  goto 103
	string  goto 104
	stringintegerlist  goto 41


state 97
	program : PROGRAM decls START bodyprincipal . END  (3)

	END  shift 134
	.  error


state 98
	decls : decls ';' decl .  (8)

	.  reduce 8


state 99
	decl : qualifier CONST var . ATTR literal  (10)
	decl : qualifier CONST var .  (13)

	ATTR  shift 135
	START  reduce 13
	END  reduce 13
	';'  reduce 13


state 100
	decl : qualifier var ATTR . literal  (11)

	INTEGER  shift 21
	STR  shift 23
	.  error

	literal  goto 136
	integer  goto 102
	integerlist  goto 103
	string  goto 104
	stringintegerlist  goto 41


state 101
	decl : var ATTR literal .  (17)

	.  reduce 17


state 102
	stringintegerlist : integer . integer  (105)
	integerlist : integer .  (107)

	INTEGER  shift 21
	START  reduce 107
	END  reduce 107
	';'  reduce 107
	','  reduce 107

	integer  goto 91


state 103
	literal : integerlist .  (101)
	integerlist : integerlist . ',' integer  (108)

	','  shift 137
	START  reduce 101
	END  reduce 101
	';'  reduce 101


state 104
	literal : string .  (100)

	.  reduce 100


state 105
	instr : IF expr THEN . block FI  (51)
	instr : IF expr THEN . block elifs ELSE block FI  (52)
	instr : IF expr THEN . block elifs FI  (53)
	instr : IF expr THEN . block ELSE block FI  (54)
	block : .  (67)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 138
	STOP  shift 139
	RETURN  shift 140
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	ELSE  reduce 67
	ELIF  reduce 67
	FI  reduce 67

	instr  goto 35
	instrterm  goto 141
	block  goto 142
	instrs  goto 143
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 106
	instr : FOR expr UNTIL . expr STEP expr DO $$5 block DONE  (56)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 144
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 107
	expr : '(' expr ')' .  (76)

	.  reduce 76


state 108
	bodyvars : bodyvars var ';' .  (50)

	.  reduce 50


state 109
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : lvalue ATTR expr .  (95)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 95
	END  reduce 95
	DONE  reduce 95
	DO  reduce 95
	THEN  reduce 95
	ELSE  reduce 95
	ELIF  reduce 95
	FI  reduce 95
	UNTIL  reduce 95
	STEP  reduce 95
	';'  reduce 95
	']'  reduce 95
	'!'  reduce 95
	')'  reduce 95
	','  reduce 95


state 110
	lvalue : lvalue '[' expr . ']'  (74)
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	']'  shift 145
	.  error


state 111
	instr : lvalue '#' expr . ';'  (59)
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	';'  shift 146
	.  error


state 112
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)
	expr : expr '|' expr .  (97)

	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 97
	END  reduce 97
	DONE  reduce 97
	DO  reduce 97
	THEN  reduce 97
	ELSE  reduce 97
	ELIF  reduce 97
	FI  reduce 97
	UNTIL  reduce 97
	STEP  reduce 97
	'|'  reduce 97
	';'  reduce 97
	']'  reduce 97
	'!'  reduce 97
	')'  reduce 97
	','  reduce 97


state 113
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr '&' expr .  (96)
	expr : expr . '|' expr  (97)

	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 96
	END  reduce 96
	DONE  reduce 96
	DO  reduce 96
	THEN  reduce 96
	ELSE  reduce 96
	ELIF  reduce 96
	FI  reduce 96
	UNTIL  reduce 96
	STEP  reduce 96
	'|'  reduce 96
	'&'  reduce 96
	';'  reduce 96
	']'  reduce 96
	'!'  reduce 96
	')'  reduce 96
	','  reduce 96


state 114
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr NE expr .  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 93
	END  reduce 93
	DONE  reduce 93
	DO  reduce 93
	THEN  reduce 93
	ELSE  reduce 93
	ELIF  reduce 93
	FI  reduce 93
	UNTIL  reduce 93
	STEP  reduce 93
	'|'  reduce 93
	'&'  reduce 93
	NE  reduce 93
	'='  reduce 93
	';'  reduce 93
	']'  reduce 93
	'!'  reduce 93
	')'  reduce 93
	','  reduce 93


state 115
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr '=' expr .  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 94
	END  reduce 94
	DONE  reduce 94
	DO  reduce 94
	THEN  reduce 94
	ELSE  reduce 94
	ELIF  reduce 94
	FI  reduce 94
	UNTIL  reduce 94
	STEP  reduce 94
	'|'  reduce 94
	'&'  reduce 94
	NE  reduce 94
	'='  reduce 94
	';'  reduce 94
	']'  reduce 94
	'!'  reduce 94
	')'  reduce 94
	','  reduce 94


state 116
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr '<' expr .  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 89
	END  reduce 89
	DONE  reduce 89
	DO  reduce 89
	THEN  reduce 89
	ELSE  reduce 89
	ELIF  reduce 89
	FI  reduce 89
	UNTIL  reduce 89
	STEP  reduce 89
	'|'  reduce 89
	'&'  reduce 89
	NE  reduce 89
	'='  reduce 89
	'<'  reduce 89
	'>'  reduce 89
	LE  reduce 89
	GE  reduce 89
	';'  reduce 89
	']'  reduce 89
	'!'  reduce 89
	')'  reduce 89
	','  reduce 89


state 117
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr '>' expr .  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 90
	END  reduce 90
	DONE  reduce 90
	DO  reduce 90
	THEN  reduce 90
	ELSE  reduce 90
	ELIF  reduce 90
	FI  reduce 90
	UNTIL  reduce 90
	STEP  reduce 90
	'|'  reduce 90
	'&'  reduce 90
	NE  reduce 90
	'='  reduce 90
	'<'  reduce 90
	'>'  reduce 90
	LE  reduce 90
	GE  reduce 90
	';'  reduce 90
	']'  reduce 90
	'!'  reduce 90
	')'  reduce 90
	','  reduce 90


state 118
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr LE expr .  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 92
	END  reduce 92
	DONE  reduce 92
	DO  reduce 92
	THEN  reduce 92
	ELSE  reduce 92
	ELIF  reduce 92
	FI  reduce 92
	UNTIL  reduce 92
	STEP  reduce 92
	'|'  reduce 92
	'&'  reduce 92
	NE  reduce 92
	'='  reduce 92
	'<'  reduce 92
	'>'  reduce 92
	LE  reduce 92
	GE  reduce 92
	';'  reduce 92
	']'  reduce 92
	'!'  reduce 92
	')'  reduce 92
	','  reduce 92


state 119
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr GE expr .  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 91
	END  reduce 91
	DONE  reduce 91
	DO  reduce 91
	THEN  reduce 91
	ELSE  reduce 91
	ELIF  reduce 91
	FI  reduce 91
	UNTIL  reduce 91
	STEP  reduce 91
	'|'  reduce 91
	'&'  reduce 91
	NE  reduce 91
	'='  reduce 91
	'<'  reduce 91
	'>'  reduce 91
	LE  reduce 91
	GE  reduce 91
	';'  reduce 91
	']'  reduce 91
	'!'  reduce 91
	')'  reduce 91
	','  reduce 91


state 120
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr '+' expr .  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 84
	END  reduce 84
	DONE  reduce 84
	DO  reduce 84
	THEN  reduce 84
	ELSE  reduce 84
	ELIF  reduce 84
	FI  reduce 84
	UNTIL  reduce 84
	STEP  reduce 84
	'|'  reduce 84
	'&'  reduce 84
	NE  reduce 84
	'='  reduce 84
	'<'  reduce 84
	'>'  reduce 84
	LE  reduce 84
	GE  reduce 84
	'+'  reduce 84
	'-'  reduce 84
	';'  reduce 84
	']'  reduce 84
	'!'  reduce 84
	')'  reduce 84
	','  reduce 84


state 121
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr '-' expr .  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 85
	END  reduce 85
	DONE  reduce 85
	DO  reduce 85
	THEN  reduce 85
	ELSE  reduce 85
	ELIF  reduce 85
	FI  reduce 85
	UNTIL  reduce 85
	STEP  reduce 85
	'|'  reduce 85
	'&'  reduce 85
	NE  reduce 85
	'='  reduce 85
	'<'  reduce 85
	'>'  reduce 85
	LE  reduce 85
	GE  reduce 85
	'+'  reduce 85
	'-'  reduce 85
	';'  reduce 85
	']'  reduce 85
	'!'  reduce 85
	')'  reduce 85
	','  reduce 85


state 122
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr '*' expr .  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'^'  shift 87
	'('  shift 88
	START  reduce 86
	END  reduce 86
	DONE  reduce 86
	DO  reduce 86
	THEN  reduce 86
	ELSE  reduce 86
	ELIF  reduce 86
	FI  reduce 86
	UNTIL  reduce 86
	STEP  reduce 86
	'|'  reduce 86
	'&'  reduce 86
	NE  reduce 86
	'='  reduce 86
	'<'  reduce 86
	'>'  reduce 86
	LE  reduce 86
	GE  reduce 86
	'+'  reduce 86
	'-'  reduce 86
	'*'  reduce 86
	'/'  reduce 86
	'%'  reduce 86
	';'  reduce 86
	']'  reduce 86
	'!'  reduce 86
	')'  reduce 86
	','  reduce 86


state 123
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr '/' expr .  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'^'  shift 87
	'('  shift 88
	START  reduce 87
	END  reduce 87
	DONE  reduce 87
	DO  reduce 87
	THEN  reduce 87
	ELSE  reduce 87
	ELIF  reduce 87
	FI  reduce 87
	UNTIL  reduce 87
	STEP  reduce 87
	'|'  reduce 87
	'&'  reduce 87
	NE  reduce 87
	'='  reduce 87
	'<'  reduce 87
	'>'  reduce 87
	LE  reduce 87
	GE  reduce 87
	'+'  reduce 87
	'-'  reduce 87
	'*'  reduce 87
	'/'  reduce 87
	'%'  reduce 87
	';'  reduce 87
	']'  reduce 87
	'!'  reduce 87
	')'  reduce 87
	','  reduce 87


state 124
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr '%' expr .  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'^'  shift 87
	'('  shift 88
	START  reduce 88
	END  reduce 88
	DONE  reduce 88
	DO  reduce 88
	THEN  reduce 88
	ELSE  reduce 88
	ELIF  reduce 88
	FI  reduce 88
	UNTIL  reduce 88
	STEP  reduce 88
	'|'  reduce 88
	'&'  reduce 88
	NE  reduce 88
	'='  reduce 88
	'<'  reduce 88
	'>'  reduce 88
	LE  reduce 88
	GE  reduce 88
	'+'  reduce 88
	'-'  reduce 88
	'*'  reduce 88
	'/'  reduce 88
	'%'  reduce 88
	';'  reduce 88
	']'  reduce 88
	'!'  reduce 88
	')'  reduce 88
	','  reduce 88


state 125
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr '^' expr .  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'^'  shift 87
	'('  shift 88
	START  reduce 83
	END  reduce 83
	DONE  reduce 83
	DO  reduce 83
	THEN  reduce 83
	ELSE  reduce 83
	ELIF  reduce 83
	FI  reduce 83
	UNTIL  reduce 83
	STEP  reduce 83
	'|'  reduce 83
	'&'  reduce 83
	NE  reduce 83
	'='  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	LE  reduce 83
	GE  reduce 83
	'+'  reduce 83
	'-'  reduce 83
	'*'  reduce 83
	'/'  reduce 83
	'%'  reduce 83
	';'  reduce 83
	']'  reduce 83
	'!'  reduce 83
	')'  reduce 83
	','  reduce 83


state 126
	expr : expr '(' ')' .  (78)

	.  reduce 78


state 127
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)
	args : expr .  (109)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	')'  reduce 109
	','  reduce 109


state 128
	expr : expr '(' args . ')'  (77)
	args : args . ',' expr  (110)

	')'  shift 147
	','  shift 148
	.  error


state 129
	func : FUNCTION functype ID $$2 . params funcend  (21)

	NUMBER  shift 149
	ARRAY  shift 150
	STRING  shift 151
	.  error

	params  goto 152
	param  goto 153


state 130
	func : FUNCTION functype ID $$4 . funcend  (25)

	DONE  shift 154
	DO  shift 155
	.  error

	funcend  goto 156


state 131
	func : FUNCTION qualifier functype ID . $$1 params funcend  (19)
	func : FUNCTION qualifier functype ID . $$3 funcend  (23)
	$$1 : .  (18)
	$$3 : .  (22)

	NUMBER  reduce 18
	ARRAY  reduce 18
	STRING  reduce 18
	DONE  reduce 22
	DO  reduce 22

	$$1  goto 157
	$$3  goto 158


state 132
	var : ARRAY ID '[' integer . ']'  (39)

	']'  shift 159
	.  error


state 133
	decl : CONST var ATTR literal .  (15)

	.  reduce 15


state 134
	program : PROGRAM decls START bodyprincipal END .  (3)

	.  reduce 3


state 135
	decl : qualifier CONST var ATTR . literal  (10)

	INTEGER  shift 21
	STR  shift 23
	.  error

	literal  goto 160
	integer  goto 102
	integerlist  goto 103
	string  goto 104
	stringintegerlist  goto 41


state 136
	decl : qualifier var ATTR literal .  (11)

	.  reduce 11


state 137
	integerlist : integerlist ',' . integer  (108)

	INTEGER  shift 21
	.  error

	integer  goto 161


state 138
	instrterm : REPEAT .  (60)

	.  reduce 60


state 139
	instrterm : STOP .  (61)

	.  reduce 61


state 140
	instrterm : RETURN . expr  (62)
	instrterm : RETURN .  (63)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	START  reduce 63
	END  reduce 63
	DONE  reduce 63
	ELSE  reduce 63
	ELIF  reduce 63
	FI  reduce 63
	';'  reduce 63

	lvalue  goto 59
	expr  goto 162
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 141
	block : instrterm .  (68)

	.  reduce 68


state 142
	instr : IF expr THEN block . FI  (51)
	instr : IF expr THEN block . elifs ELSE block FI  (52)
	instr : IF expr THEN block . elifs FI  (53)
	instr : IF expr THEN block . ELSE block FI  (54)

	ELSE  shift 163
	ELIF  shift 164
	FI  shift 165
	.  error

	elif  goto 166
	elifs  goto 167


state 143
	block : instrs .  (69)
	block : instrs . instrterm  (70)
	instrs : instrs . instr  (72)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 138
	STOP  shift 139
	RETURN  shift 140
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	START  reduce 69
	END  reduce 69
	DONE  reduce 69
	ELSE  reduce 69
	ELIF  reduce 69
	FI  reduce 69
	';'  reduce 69

	instr  goto 70
	instrterm  goto 168
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 144
	instr : FOR expr UNTIL expr . STEP expr DO $$5 block DONE  (56)
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	STEP  shift 169
	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	.  error


state 145
	lvalue : lvalue '[' expr ']' .  (74)

	.  reduce 74


state 146
	instr : lvalue '#' expr ';' .  (59)

	.  reduce 59


state 147
	expr : expr '(' args ')' .  (77)

	.  reduce 77


state 148
	args : args ',' . expr  (110)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 170
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 149
	param : NUMBER . ID  (35)

	ID  shift 171
	.  error


state 150
	param : ARRAY . ID '[' integer ']'  (36)

	ID  shift 172
	.  error


state 151
	param : STRING . ID  (34)

	ID  shift 173
	.  error


state 152
	func : FUNCTION functype ID $$2 params . funcend  (21)
	params : params . ';' param  (33)

	DONE  shift 154
	DO  shift 155
	';'  shift 174
	.  error

	funcend  goto 175


state 153
	params : param .  (32)

	.  reduce 32


state 154
	funcend : DONE .  (26)

	.  reduce 26


state 155
	funcend : DO . body  (27)
	block : .  (67)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 138
	STOP  shift 139
	RETURN  shift 140
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	START  reduce 67
	END  reduce 67
	';'  reduce 67

	body  goto 176
	bodyvars  goto 177
	var  goto 34
	instr  goto 35
	instrterm  goto 141
	block  goto 178
	instrs  goto 143
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 156
	func : FUNCTION functype ID $$4 funcend .  (25)

	.  reduce 25


state 157
	func : FUNCTION qualifier functype ID $$1 . params funcend  (19)

	NUMBER  shift 149
	ARRAY  shift 150
	STRING  shift 151
	.  error

	params  goto 179
	param  goto 153


state 158
	func : FUNCTION qualifier functype ID $$3 . funcend  (23)

	DONE  shift 154
	DO  shift 155
	.  error

	funcend  goto 180


state 159
	var : ARRAY ID '[' integer ']' .  (39)

	.  reduce 39


state 160
	decl : qualifier CONST var ATTR literal .  (10)

	.  reduce 10


state 161
	integerlist : integerlist ',' integer .  (108)

	.  reduce 108


state 162
	instrterm : RETURN expr .  (62)
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	START  reduce 62
	END  reduce 62
	DONE  reduce 62
	ELSE  reduce 62
	ELIF  reduce 62
	FI  reduce 62
	';'  reduce 62


state 163
	instr : IF expr THEN block ELSE . block FI  (54)
	block : .  (67)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 138
	STOP  shift 139
	RETURN  shift 140
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	FI  reduce 67

	instr  goto 35
	instrterm  goto 141
	block  goto 181
	instrs  goto 143
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 164
	elif : ELIF . expr THEN block  (64)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 182
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 165
	instr : IF expr THEN block FI .  (51)

	.  reduce 51


state 166
	elifs : elif .  (65)

	.  reduce 65


state 167
	instr : IF expr THEN block elifs . ELSE block FI  (52)
	instr : IF expr THEN block elifs . FI  (53)
	elifs : elifs . elif  (66)

	ELSE  shift 183
	ELIF  shift 164
	FI  shift 184
	.  error

	elif  goto 185


state 168
	block : instrs instrterm .  (70)

	.  reduce 70


state 169
	instr : FOR expr UNTIL expr STEP . expr DO $$5 block DONE  (56)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 59
	expr  goto 186
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 170
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)
	args : args ',' expr .  (110)

	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	')'  reduce 110
	','  reduce 110


state 171
	param : NUMBER ID .  (35)

	.  reduce 35


state 172
	param : ARRAY ID . '[' integer ']'  (36)

	'['  shift 187
	.  error


state 173
	param : STRING ID .  (34)

	.  reduce 34


state 174
	params : params ';' . param  (33)

	NUMBER  shift 149
	ARRAY  shift 150
	STRING  shift 151
	.  error

	param  goto 188


state 175
	func : FUNCTION functype ID $$2 params funcend .  (21)

	.  reduce 21


state 176
	funcend : DO body .  (27)

	.  reduce 27


state 177
	body : bodyvars . block  (45)
	bodyvars : bodyvars . var ';'  (50)
	block : .  (67)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 138
	STOP  shift 139
	RETURN  shift 140
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	START  reduce 67
	END  reduce 67
	';'  reduce 67

	var  goto 68
	instr  goto 35
	instrterm  goto 141
	block  goto 189
	instrs  goto 143
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 178
	body : block .  (46)

	.  reduce 46


state 179
	func : FUNCTION qualifier functype ID $$1 params . funcend  (19)
	params : params . ';' param  (33)

	DONE  shift 154
	DO  shift 155
	';'  shift 174
	.  error

	funcend  goto 190


state 180
	func : FUNCTION qualifier functype ID $$3 funcend .  (23)

	.  reduce 23


state 181
	instr : IF expr THEN block ELSE block . FI  (54)

	FI  shift 191
	.  error


state 182
	elif : ELIF expr . THEN block  (64)
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	THEN  shift 192
	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	.  error


state 183
	instr : IF expr THEN block elifs ELSE . block FI  (52)
	block : .  (67)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 138
	STOP  shift 139
	RETURN  shift 140
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	FI  reduce 67

	instr  goto 35
	instrterm  goto 141
	block  goto 193
	instrs  goto 143
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 184
	instr : IF expr THEN block elifs FI .  (53)

	.  reduce 53


state 185
	elifs : elifs elif .  (66)

	.  reduce 66


state 186
	instr : FOR expr UNTIL expr STEP expr . DO $$5 block DONE  (56)
	expr : expr . '(' args ')'  (77)
	expr : expr . '(' ')'  (78)
	expr : expr . '^' expr  (83)
	expr : expr . '+' expr  (84)
	expr : expr . '-' expr  (85)
	expr : expr . '*' expr  (86)
	expr : expr . '/' expr  (87)
	expr : expr . '%' expr  (88)
	expr : expr . '<' expr  (89)
	expr : expr . '>' expr  (90)
	expr : expr . GE expr  (91)
	expr : expr . LE expr  (92)
	expr : expr . NE expr  (93)
	expr : expr . '=' expr  (94)
	expr : expr . '&' expr  (96)
	expr : expr . '|' expr  (97)

	DO  shift 194
	'|'  shift 74
	'&'  shift 75
	NE  shift 76
	'='  shift 77
	'<'  shift 78
	'>'  shift 79
	LE  shift 80
	GE  shift 81
	'+'  shift 82
	'-'  shift 83
	'*'  shift 84
	'/'  shift 85
	'%'  shift 86
	'^'  shift 87
	'('  shift 88
	.  error


state 187
	param : ARRAY ID '[' . integer ']'  (36)

	INTEGER  shift 21
	.  error

	integer  goto 195


state 188
	params : params ';' param .  (33)

	.  reduce 33


state 189
	body : bodyvars block .  (45)

	.  reduce 45


state 190
	func : FUNCTION qualifier functype ID $$1 params funcend .  (19)

	.  reduce 19


state 191
	instr : IF expr THEN block ELSE block FI .  (54)

	.  reduce 54


state 192
	elif : ELIF expr THEN . block  (64)
	block : .  (67)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 138
	STOP  shift 139
	RETURN  shift 140
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	ELSE  reduce 67
	ELIF  reduce 67
	FI  reduce 67

	instr  goto 35
	instrterm  goto 141
	block  goto 196
	instrs  goto 143
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 193
	instr : IF expr THEN block elifs ELSE block . FI  (52)

	FI  shift 197
	.  error


state 194
	instr : FOR expr UNTIL expr STEP expr DO . $$5 block DONE  (56)
	$$5 : .  (55)

	.  reduce 55

	$$5  goto 198


state 195
	param : ARRAY ID '[' integer . ']'  (36)

	']'  shift 199
	.  error


state 196
	elif : ELIF expr THEN block .  (64)

	.  reduce 64


state 197
	instr : IF expr THEN block elifs ELSE block FI .  (52)

	.  reduce 52


state 198
	instr : FOR expr UNTIL expr STEP expr DO $$5 . block DONE  (56)
	block : .  (67)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 138
	STOP  shift 139
	RETURN  shift 140
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	DONE  reduce 67

	instr  goto 35
	instrterm  goto 141
	block  goto 200
	instrs  goto 143
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 199
	param : ARRAY ID '[' integer ']' .  (36)

	.  reduce 36


state 200
	instr : FOR expr UNTIL expr STEP expr DO $$5 block . DONE  (56)

	DONE  shift 201
	.  error


state 201
	instr : FOR expr UNTIL expr STEP expr DO $$5 block DONE .  (56)

	.  reduce 56


74 terminals, 37 nonterminals
111 grammar rules, 202 states

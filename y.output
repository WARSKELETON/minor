   0  $accept : file $end

   1  file : program
   2       | module

   3  program : PROGRAM decls START bodyprincipal END
   4          | PROGRAM START bodyprincipal END

   5  module : MODULE decls END
   6         | MODULE END

   7  decls : decl
   8        | decls ';' decl

   9  decl : func
  10       | qualifier CONST var ATTR literal
  11       | qualifier var ATTR literal
  12       | qualifier var
  13       | qualifier CONST var
  14       | CONST var
  15       | CONST var ATTR literal
  16       | var
  17       | var ATTR literal

  18  $$1 :

  19  func : FUNCTION qualifier functype ID $$1 params funcend

  20  $$2 :

  21  func : FUNCTION functype ID $$2 params funcend

  22  $$3 :

  23  func : FUNCTION qualifier functype ID $$3 funcend

  24  $$4 :

  25  func : FUNCTION functype ID $$4 funcend

  26  funcend : DONE
  27          | DO body

  28  functype : type
  29           | VOID

  30  qualifier : PUBLIC
  31            | FORWARD

  32  params : param
  33         | params ';' param

  34  param : STRING ID
  35        | NUMBER ID
  36        | ARRAY ID '[' integer ']'

  37  var : STRING ID
  38      | NUMBER ID
  39      | ARRAY ID '[' integer ']'
  40      | ARRAY ID

  41  type : NUMBER
  42       | ARRAY
  43       | STRING

  44  bodyprincipal : bodyvars bodyinstrs
  45                | bodyinstrs

  46  body : bodyvars blockfunc
  47       | blockfunc

  48  bodyinstrs :
  49             | instrs

  50  bodyvars : var ';'
  51           | bodyvars var ';'

  52  instr : IF expr THEN block FI
  53        | IF expr THEN block elifs ELSE block FI
  54        | IF expr THEN block elifs FI
  55        | IF expr THEN block ELSE block FI

  56  $$5 :

  57  instr : FOR expr UNTIL expr STEP expr DO $$5 block DONE
  58        | expr ';'
  59        | expr '!'
  60        | lvalue '#' expr ';'

  61  instrterm : REPEAT
  62            | STOP
  63            | RETURN expr
  64            | RETURN

  65  elif : ELIF expr THEN block

  66  elifs : elif
  67        | elifs elif

  68  block :
  69        | instrterm
  70        | instrs
  71        | instrs instrterm

  72  blockfunc :
  73            | instrterm
  74            | instrs
  75            | instrs instrterm

  76  instrs : instr
  77         | instrs instr

  78  lvalue : ID
  79         | ID '[' expr ']'
  80         | string '[' expr ']'

  81  expr : lvalue
  82       | '(' expr ')'
  83       | ID '(' args ')'
  84       | ID '(' ')'
  85       | string
  86       | integer
  87       | '-' expr
  88       | '&' lvalue
  89       | expr '^' expr
  90       | expr '+' expr
  91       | expr '-' expr
  92       | expr '*' expr
  93       | expr '/' expr
  94       | expr '%' expr
  95       | expr '<' expr
  96       | expr '>' expr
  97       | expr GE expr
  98       | expr LE expr
  99       | expr NE expr
 100       | expr '=' expr
 101       | lvalue ATTR expr
 102       | expr '&' expr
 103       | expr '|' expr
 104       | '~' expr
 105       | '?'

 106  literal : string
 107          | integerlist

 108  integer : INTEGER

 109  string : stringintegerlist
 110         | STR

 111  stringintegerlist : integer integer
 112                    | stringintegerlist integer

 113  integerlist : integer
 114              | integerlist ',' integer

 115  args : expr
 116       | args ',' expr

state 0
	$accept : . file $end  (0)

	PROGRAM  shift 1
	MODULE  shift 2
	.  error

	file  goto 3
	program  goto 4
	module  goto 5


state 1
	program : PROGRAM . decls START bodyprincipal END  (3)
	program : PROGRAM . START bodyprincipal END  (4)

	START  shift 6
	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decls  goto 14
	decl  goto 15
	func  goto 16
	qualifier  goto 17
	var  goto 18


state 2
	module : MODULE . decls END  (5)
	module : MODULE . END  (6)

	END  shift 19
	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decls  goto 20
	decl  goto 15
	func  goto 16
	qualifier  goto 17
	var  goto 18


state 3
	$accept : file . $end  (0)

	$end  accept


state 4
	file : program .  (1)

	.  reduce 1


state 5
	file : module .  (2)

	.  reduce 2


state 6
	program : PROGRAM START . bodyprincipal END  (4)
	bodyinstrs : .  (48)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	END  reduce 48

	bodyprincipal  goto 31
	bodyinstrs  goto 32
	bodyvars  goto 33
	var  goto 34
	instr  goto 35
	instrs  goto 36
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 7
	func : FUNCTION . qualifier functype ID $$1 params funcend  (19)
	func : FUNCTION . functype ID $$2 params funcend  (21)
	func : FUNCTION . qualifier functype ID $$3 funcend  (23)
	func : FUNCTION . functype ID $$4 funcend  (25)

	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 42
	ARRAY  shift 43
	VOID  shift 44
	STRING  shift 45
	.  error

	functype  goto 46
	qualifier  goto 47
	type  goto 48


state 8
	qualifier : PUBLIC .  (30)

	.  reduce 30


state 9
	qualifier : FORWARD .  (31)

	.  reduce 31


state 10
	var : NUMBER . ID  (38)

	ID  shift 49
	.  error


state 11
	var : ARRAY . ID '[' integer ']'  (39)
	var : ARRAY . ID  (40)

	ID  shift 50
	.  error


state 12
	var : STRING . ID  (37)

	ID  shift 51
	.  error


state 13
	decl : CONST . var  (14)
	decl : CONST . var ATTR literal  (15)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	.  error

	var  goto 52


state 14
	program : PROGRAM decls . START bodyprincipal END  (3)
	decls : decls . ';' decl  (8)

	START  shift 53
	';'  shift 54
	.  error


state 15
	decls : decl .  (7)

	.  reduce 7


state 16
	decl : func .  (9)

	.  reduce 9


state 17
	decl : qualifier . CONST var ATTR literal  (10)
	decl : qualifier . var ATTR literal  (11)
	decl : qualifier . var  (12)
	decl : qualifier . CONST var  (13)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 55
	.  error

	var  goto 56


state 18
	decl : var .  (16)
	decl : var . ATTR literal  (17)

	ATTR  shift 57
	START  reduce 16
	END  reduce 16
	';'  reduce 16


state 19
	module : MODULE END .  (6)

	.  reduce 6


state 20
	module : MODULE decls . END  (5)
	decls : decls . ';' decl  (8)

	END  shift 58
	';'  shift 54
	.  error


state 21
	integer : INTEGER .  (108)

	.  reduce 108


state 22
	lvalue : ID .  (78)
	lvalue : ID . '[' expr ']'  (79)
	expr : ID . '(' args ')'  (83)
	expr : ID . '(' ')'  (84)

	'('  shift 59
	'['  shift 60
	START  reduce 78
	END  reduce 78
	DONE  reduce 78
	DO  reduce 78
	THEN  reduce 78
	ELSE  reduce 78
	ELIF  reduce 78
	FI  reduce 78
	UNTIL  reduce 78
	STEP  reduce 78
	ATTR  reduce 78
	'|'  reduce 78
	'&'  reduce 78
	NE  reduce 78
	'='  reduce 78
	'<'  reduce 78
	'>'  reduce 78
	LE  reduce 78
	GE  reduce 78
	'+'  reduce 78
	'-'  reduce 78
	'*'  reduce 78
	'/'  reduce 78
	'%'  reduce 78
	'^'  reduce 78
	';'  reduce 78
	']'  reduce 78
	'!'  reduce 78
	'#'  reduce 78
	')'  reduce 78
	','  reduce 78


state 23
	string : STR .  (110)

	.  reduce 110


state 24
	instr : IF . expr THEN block FI  (52)
	instr : IF . expr THEN block elifs ELSE block FI  (53)
	instr : IF . expr THEN block elifs FI  (54)
	instr : IF . expr THEN block ELSE block FI  (55)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 62
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 25
	instr : FOR . expr UNTIL expr STEP expr DO $$5 block DONE  (57)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 63
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 26
	expr : '&' . lvalue  (88)

	INTEGER  shift 21
	ID  shift 64
	STR  shift 23
	.  error

	lvalue  goto 65
	integer  goto 66
	string  goto 67
	stringintegerlist  goto 41


state 27
	expr : '~' . expr  (104)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 68
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 28
	expr : '-' . expr  (87)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 69
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 29
	expr : '?' .  (105)

	.  reduce 105


state 30
	expr : '(' . expr ')'  (82)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 70
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 31
	program : PROGRAM START bodyprincipal . END  (4)

	END  shift 71
	.  error


state 32
	bodyprincipal : bodyinstrs .  (45)

	.  reduce 45


state 33
	bodyprincipal : bodyvars . bodyinstrs  (44)
	bodyvars : bodyvars . var ';'  (51)
	bodyinstrs : .  (48)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	END  reduce 48

	bodyinstrs  goto 72
	var  goto 73
	instr  goto 35
	instrs  goto 36
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 34
	bodyvars : var . ';'  (50)

	';'  shift 74
	.  error


state 35
	instrs : instr .  (76)

	.  reduce 76


state 36
	bodyinstrs : instrs .  (49)
	instrs : instrs . instr  (77)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	END  reduce 49

	instr  goto 75
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 37
	instr : lvalue . '#' expr ';'  (60)
	expr : lvalue .  (81)
	expr : lvalue . ATTR expr  (101)

	ATTR  shift 76
	'#'  shift 77
	'|'  reduce 81
	'&'  reduce 81
	NE  reduce 81
	'='  reduce 81
	'<'  reduce 81
	'>'  reduce 81
	LE  reduce 81
	GE  reduce 81
	'+'  reduce 81
	'-'  reduce 81
	'*'  reduce 81
	'/'  reduce 81
	'%'  reduce 81
	'^'  reduce 81
	';'  reduce 81
	'!'  reduce 81


state 38
	instr : expr . ';'  (58)
	instr : expr . '!'  (59)
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	';'  shift 92
	'!'  shift 93
	.  error


state 39
	expr : integer .  (86)
	stringintegerlist : integer . integer  (111)

	INTEGER  shift 21
	START  reduce 86
	END  reduce 86
	DONE  reduce 86
	DO  reduce 86
	THEN  reduce 86
	ELSE  reduce 86
	ELIF  reduce 86
	FI  reduce 86
	UNTIL  reduce 86
	STEP  reduce 86
	'|'  reduce 86
	'&'  reduce 86
	NE  reduce 86
	'='  reduce 86
	'<'  reduce 86
	'>'  reduce 86
	LE  reduce 86
	GE  reduce 86
	'+'  reduce 86
	'-'  reduce 86
	'*'  reduce 86
	'/'  reduce 86
	'%'  reduce 86
	'^'  reduce 86
	';'  reduce 86
	']'  reduce 86
	'!'  reduce 86
	')'  reduce 86
	','  reduce 86

	integer  goto 94


state 40
	lvalue : string . '[' expr ']'  (80)
	expr : string .  (85)

	'['  shift 95
	START  reduce 85
	END  reduce 85
	DONE  reduce 85
	DO  reduce 85
	THEN  reduce 85
	ELSE  reduce 85
	ELIF  reduce 85
	FI  reduce 85
	UNTIL  reduce 85
	STEP  reduce 85
	'|'  reduce 85
	'&'  reduce 85
	NE  reduce 85
	'='  reduce 85
	'<'  reduce 85
	'>'  reduce 85
	LE  reduce 85
	GE  reduce 85
	'+'  reduce 85
	'-'  reduce 85
	'*'  reduce 85
	'/'  reduce 85
	'%'  reduce 85
	'^'  reduce 85
	';'  reduce 85
	']'  reduce 85
	'!'  reduce 85
	')'  reduce 85
	','  reduce 85


state 41
	string : stringintegerlist .  (109)
	stringintegerlist : stringintegerlist . integer  (112)

	INTEGER  shift 21
	START  reduce 109
	END  reduce 109
	DONE  reduce 109
	DO  reduce 109
	THEN  reduce 109
	ELSE  reduce 109
	ELIF  reduce 109
	FI  reduce 109
	UNTIL  reduce 109
	STEP  reduce 109
	'|'  reduce 109
	'&'  reduce 109
	NE  reduce 109
	'='  reduce 109
	'<'  reduce 109
	'>'  reduce 109
	LE  reduce 109
	GE  reduce 109
	'+'  reduce 109
	'-'  reduce 109
	'*'  reduce 109
	'/'  reduce 109
	'%'  reduce 109
	'^'  reduce 109
	'['  reduce 109
	';'  reduce 109
	']'  reduce 109
	'!'  reduce 109
	')'  reduce 109
	','  reduce 109

	integer  goto 96


state 42
	type : NUMBER .  (41)

	.  reduce 41


state 43
	type : ARRAY .  (42)

	.  reduce 42


state 44
	functype : VOID .  (29)

	.  reduce 29


state 45
	type : STRING .  (43)

	.  reduce 43


state 46
	func : FUNCTION functype . ID $$2 params funcend  (21)
	func : FUNCTION functype . ID $$4 funcend  (25)

	ID  shift 97
	.  error


state 47
	func : FUNCTION qualifier . functype ID $$1 params funcend  (19)
	func : FUNCTION qualifier . functype ID $$3 funcend  (23)

	NUMBER  shift 42
	ARRAY  shift 43
	VOID  shift 44
	STRING  shift 45
	.  error

	functype  goto 98
	type  goto 48


state 48
	functype : type .  (28)

	.  reduce 28


state 49
	var : NUMBER ID .  (38)

	.  reduce 38


state 50
	var : ARRAY ID . '[' integer ']'  (39)
	var : ARRAY ID .  (40)

	'['  shift 99
	START  reduce 40
	END  reduce 40
	ATTR  reduce 40
	';'  reduce 40


state 51
	var : STRING ID .  (37)

	.  reduce 37


state 52
	decl : CONST var .  (14)
	decl : CONST var . ATTR literal  (15)

	ATTR  shift 100
	START  reduce 14
	END  reduce 14
	';'  reduce 14


state 53
	program : PROGRAM decls START . bodyprincipal END  (3)
	bodyinstrs : .  (48)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	END  reduce 48

	bodyprincipal  goto 101
	bodyinstrs  goto 32
	bodyvars  goto 33
	var  goto 34
	instr  goto 35
	instrs  goto 36
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 54
	decls : decls ';' . decl  (8)

	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decl  goto 102
	func  goto 16
	qualifier  goto 17
	var  goto 18


state 55
	decl : qualifier CONST . var ATTR literal  (10)
	decl : qualifier CONST . var  (13)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	.  error

	var  goto 103


state 56
	decl : qualifier var . ATTR literal  (11)
	decl : qualifier var .  (12)

	ATTR  shift 104
	START  reduce 12
	END  reduce 12
	';'  reduce 12


state 57
	decl : var ATTR . literal  (17)

	INTEGER  shift 21
	STR  shift 23
	.  error

	literal  goto 105
	integer  goto 106
	integerlist  goto 107
	string  goto 108
	stringintegerlist  goto 41


state 58
	module : MODULE decls END .  (5)

	.  reduce 5


state 59
	expr : ID '(' . args ')'  (83)
	expr : ID '(' . ')'  (84)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	')'  shift 109
	.  error

	lvalue  goto 61
	expr  goto 110
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41
	args  goto 111


state 60
	lvalue : ID '[' . expr ']'  (79)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 112
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 61
	expr : lvalue .  (81)
	expr : lvalue . ATTR expr  (101)

	ATTR  shift 76
	START  reduce 81
	END  reduce 81
	DONE  reduce 81
	DO  reduce 81
	THEN  reduce 81
	ELSE  reduce 81
	ELIF  reduce 81
	FI  reduce 81
	UNTIL  reduce 81
	STEP  reduce 81
	'|'  reduce 81
	'&'  reduce 81
	NE  reduce 81
	'='  reduce 81
	'<'  reduce 81
	'>'  reduce 81
	LE  reduce 81
	GE  reduce 81
	'+'  reduce 81
	'-'  reduce 81
	'*'  reduce 81
	'/'  reduce 81
	'%'  reduce 81
	'^'  reduce 81
	';'  reduce 81
	']'  reduce 81
	'!'  reduce 81
	')'  reduce 81
	','  reduce 81


state 62
	instr : IF expr . THEN block FI  (52)
	instr : IF expr . THEN block elifs ELSE block FI  (53)
	instr : IF expr . THEN block elifs FI  (54)
	instr : IF expr . THEN block ELSE block FI  (55)
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	THEN  shift 113
	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	.  error


state 63
	instr : FOR expr . UNTIL expr STEP expr DO $$5 block DONE  (57)
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	UNTIL  shift 114
	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	.  error


state 64
	lvalue : ID .  (78)
	lvalue : ID . '[' expr ']'  (79)

	'['  shift 60
	START  reduce 78
	END  reduce 78
	DONE  reduce 78
	DO  reduce 78
	THEN  reduce 78
	ELSE  reduce 78
	ELIF  reduce 78
	FI  reduce 78
	UNTIL  reduce 78
	STEP  reduce 78
	'|'  reduce 78
	'&'  reduce 78
	NE  reduce 78
	'='  reduce 78
	'<'  reduce 78
	'>'  reduce 78
	LE  reduce 78
	GE  reduce 78
	'+'  reduce 78
	'-'  reduce 78
	'*'  reduce 78
	'/'  reduce 78
	'%'  reduce 78
	'^'  reduce 78
	';'  reduce 78
	']'  reduce 78
	'!'  reduce 78
	')'  reduce 78
	','  reduce 78


state 65
	expr : '&' lvalue .  (88)

	.  reduce 88


state 66
	stringintegerlist : integer . integer  (111)

	INTEGER  shift 21
	.  error

	integer  goto 94


state 67
	lvalue : string . '[' expr ']'  (80)

	'['  shift 95
	.  error


state 68
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)
	expr : '~' expr .  (104)

	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 104
	END  reduce 104
	DONE  reduce 104
	DO  reduce 104
	THEN  reduce 104
	ELSE  reduce 104
	ELIF  reduce 104
	FI  reduce 104
	UNTIL  reduce 104
	STEP  reduce 104
	'|'  reduce 104
	'&'  reduce 104
	';'  reduce 104
	']'  reduce 104
	'!'  reduce 104
	')'  reduce 104
	','  reduce 104


state 69
	expr : '-' expr .  (87)
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	.  reduce 87


state 70
	expr : '(' expr . ')'  (82)
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	')'  shift 115
	.  error


state 71
	program : PROGRAM START bodyprincipal END .  (4)

	.  reduce 4


state 72
	bodyprincipal : bodyvars bodyinstrs .  (44)

	.  reduce 44


state 73
	bodyvars : bodyvars var . ';'  (51)

	';'  shift 116
	.  error


state 74
	bodyvars : var ';' .  (50)

	.  reduce 50


state 75
	instrs : instrs instr .  (77)

	.  reduce 77


state 76
	expr : lvalue ATTR . expr  (101)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 117
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 77
	instr : lvalue '#' . expr ';'  (60)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 118
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 78
	expr : expr '|' . expr  (103)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 119
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 79
	expr : expr '&' . expr  (102)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 120
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 80
	expr : expr NE . expr  (99)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 121
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 81
	expr : expr '=' . expr  (100)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 122
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 82
	expr : expr '<' . expr  (95)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 123
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 83
	expr : expr '>' . expr  (96)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 124
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 84
	expr : expr LE . expr  (98)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 125
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 85
	expr : expr GE . expr  (97)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 126
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 86
	expr : expr '+' . expr  (90)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 127
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 87
	expr : expr '-' . expr  (91)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 128
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 88
	expr : expr '*' . expr  (92)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 129
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 89
	expr : expr '/' . expr  (93)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 130
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 90
	expr : expr '%' . expr  (94)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 131
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 91
	expr : expr '^' . expr  (89)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 132
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 92
	instr : expr ';' .  (58)

	.  reduce 58


state 93
	instr : expr '!' .  (59)

	.  reduce 59


state 94
	stringintegerlist : integer integer .  (111)

	.  reduce 111


state 95
	lvalue : string '[' . expr ']'  (80)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 133
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 96
	stringintegerlist : stringintegerlist integer .  (112)

	.  reduce 112


state 97
	func : FUNCTION functype ID . $$2 params funcend  (21)
	func : FUNCTION functype ID . $$4 funcend  (25)
	$$2 : .  (20)
	$$4 : .  (24)

	NUMBER  reduce 20
	ARRAY  reduce 20
	STRING  reduce 20
	DONE  reduce 24
	DO  reduce 24

	$$2  goto 134
	$$4  goto 135


state 98
	func : FUNCTION qualifier functype . ID $$1 params funcend  (19)
	func : FUNCTION qualifier functype . ID $$3 funcend  (23)

	ID  shift 136
	.  error


state 99
	var : ARRAY ID '[' . integer ']'  (39)

	INTEGER  shift 21
	.  error

	integer  goto 137


state 100
	decl : CONST var ATTR . literal  (15)

	INTEGER  shift 21
	STR  shift 23
	.  error

	literal  goto 138
	integer  goto 106
	integerlist  goto 107
	string  goto 108
	stringintegerlist  goto 41


state 101
	program : PROGRAM decls START bodyprincipal . END  (3)

	END  shift 139
	.  error


state 102
	decls : decls ';' decl .  (8)

	.  reduce 8


state 103
	decl : qualifier CONST var . ATTR literal  (10)
	decl : qualifier CONST var .  (13)

	ATTR  shift 140
	START  reduce 13
	END  reduce 13
	';'  reduce 13


state 104
	decl : qualifier var ATTR . literal  (11)

	INTEGER  shift 21
	STR  shift 23
	.  error

	literal  goto 141
	integer  goto 106
	integerlist  goto 107
	string  goto 108
	stringintegerlist  goto 41


state 105
	decl : var ATTR literal .  (17)

	.  reduce 17


state 106
	stringintegerlist : integer . integer  (111)
	integerlist : integer .  (113)

	INTEGER  shift 21
	START  reduce 113
	END  reduce 113
	';'  reduce 113
	','  reduce 113

	integer  goto 94


state 107
	literal : integerlist .  (107)
	integerlist : integerlist . ',' integer  (114)

	','  shift 142
	START  reduce 107
	END  reduce 107
	';'  reduce 107


state 108
	literal : string .  (106)

	.  reduce 106


state 109
	expr : ID '(' ')' .  (84)

	.  reduce 84


state 110
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)
	args : expr .  (115)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	')'  reduce 115
	','  reduce 115


state 111
	expr : ID '(' args . ')'  (83)
	args : args . ',' expr  (116)

	')'  shift 143
	','  shift 144
	.  error


state 112
	lvalue : ID '[' expr . ']'  (79)
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	']'  shift 145
	.  error


state 113
	instr : IF expr THEN . block FI  (52)
	instr : IF expr THEN . block elifs ELSE block FI  (53)
	instr : IF expr THEN . block elifs FI  (54)
	instr : IF expr THEN . block ELSE block FI  (55)
	block : .  (68)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 146
	STOP  shift 147
	RETURN  shift 148
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	ELSE  reduce 68
	ELIF  reduce 68
	FI  reduce 68

	instr  goto 35
	instrterm  goto 149
	block  goto 150
	instrs  goto 151
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 114
	instr : FOR expr UNTIL . expr STEP expr DO $$5 block DONE  (57)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 152
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 115
	expr : '(' expr ')' .  (82)

	.  reduce 82


state 116
	bodyvars : bodyvars var ';' .  (51)

	.  reduce 51


state 117
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : lvalue ATTR expr .  (101)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 101
	END  reduce 101
	DONE  reduce 101
	DO  reduce 101
	THEN  reduce 101
	ELSE  reduce 101
	ELIF  reduce 101
	FI  reduce 101
	UNTIL  reduce 101
	STEP  reduce 101
	';'  reduce 101
	']'  reduce 101
	'!'  reduce 101
	')'  reduce 101
	','  reduce 101


state 118
	instr : lvalue '#' expr . ';'  (60)
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	';'  shift 153
	.  error


state 119
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)
	expr : expr '|' expr .  (103)

	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 103
	END  reduce 103
	DONE  reduce 103
	DO  reduce 103
	THEN  reduce 103
	ELSE  reduce 103
	ELIF  reduce 103
	FI  reduce 103
	UNTIL  reduce 103
	STEP  reduce 103
	'|'  reduce 103
	';'  reduce 103
	']'  reduce 103
	'!'  reduce 103
	')'  reduce 103
	','  reduce 103


state 120
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr '&' expr .  (102)
	expr : expr . '|' expr  (103)

	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 102
	END  reduce 102
	DONE  reduce 102
	DO  reduce 102
	THEN  reduce 102
	ELSE  reduce 102
	ELIF  reduce 102
	FI  reduce 102
	UNTIL  reduce 102
	STEP  reduce 102
	'|'  reduce 102
	'&'  reduce 102
	';'  reduce 102
	']'  reduce 102
	'!'  reduce 102
	')'  reduce 102
	','  reduce 102


state 121
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr NE expr .  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 99
	END  reduce 99
	DONE  reduce 99
	DO  reduce 99
	THEN  reduce 99
	ELSE  reduce 99
	ELIF  reduce 99
	FI  reduce 99
	UNTIL  reduce 99
	STEP  reduce 99
	'|'  reduce 99
	'&'  reduce 99
	NE  reduce 99
	'='  reduce 99
	';'  reduce 99
	']'  reduce 99
	'!'  reduce 99
	')'  reduce 99
	','  reduce 99


state 122
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr '=' expr .  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 100
	END  reduce 100
	DONE  reduce 100
	DO  reduce 100
	THEN  reduce 100
	ELSE  reduce 100
	ELIF  reduce 100
	FI  reduce 100
	UNTIL  reduce 100
	STEP  reduce 100
	'|'  reduce 100
	'&'  reduce 100
	NE  reduce 100
	'='  reduce 100
	';'  reduce 100
	']'  reduce 100
	'!'  reduce 100
	')'  reduce 100
	','  reduce 100


state 123
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr '<' expr .  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 95
	END  reduce 95
	DONE  reduce 95
	DO  reduce 95
	THEN  reduce 95
	ELSE  reduce 95
	ELIF  reduce 95
	FI  reduce 95
	UNTIL  reduce 95
	STEP  reduce 95
	'|'  reduce 95
	'&'  reduce 95
	NE  reduce 95
	'='  reduce 95
	'<'  reduce 95
	'>'  reduce 95
	LE  reduce 95
	GE  reduce 95
	';'  reduce 95
	']'  reduce 95
	'!'  reduce 95
	')'  reduce 95
	','  reduce 95


state 124
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr '>' expr .  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 96
	END  reduce 96
	DONE  reduce 96
	DO  reduce 96
	THEN  reduce 96
	ELSE  reduce 96
	ELIF  reduce 96
	FI  reduce 96
	UNTIL  reduce 96
	STEP  reduce 96
	'|'  reduce 96
	'&'  reduce 96
	NE  reduce 96
	'='  reduce 96
	'<'  reduce 96
	'>'  reduce 96
	LE  reduce 96
	GE  reduce 96
	';'  reduce 96
	']'  reduce 96
	'!'  reduce 96
	')'  reduce 96
	','  reduce 96


state 125
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr LE expr .  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 98
	END  reduce 98
	DONE  reduce 98
	DO  reduce 98
	THEN  reduce 98
	ELSE  reduce 98
	ELIF  reduce 98
	FI  reduce 98
	UNTIL  reduce 98
	STEP  reduce 98
	'|'  reduce 98
	'&'  reduce 98
	NE  reduce 98
	'='  reduce 98
	'<'  reduce 98
	'>'  reduce 98
	LE  reduce 98
	GE  reduce 98
	';'  reduce 98
	']'  reduce 98
	'!'  reduce 98
	')'  reduce 98
	','  reduce 98


state 126
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr GE expr .  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 97
	END  reduce 97
	DONE  reduce 97
	DO  reduce 97
	THEN  reduce 97
	ELSE  reduce 97
	ELIF  reduce 97
	FI  reduce 97
	UNTIL  reduce 97
	STEP  reduce 97
	'|'  reduce 97
	'&'  reduce 97
	NE  reduce 97
	'='  reduce 97
	'<'  reduce 97
	'>'  reduce 97
	LE  reduce 97
	GE  reduce 97
	';'  reduce 97
	']'  reduce 97
	'!'  reduce 97
	')'  reduce 97
	','  reduce 97


state 127
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr '+' expr .  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 90
	END  reduce 90
	DONE  reduce 90
	DO  reduce 90
	THEN  reduce 90
	ELSE  reduce 90
	ELIF  reduce 90
	FI  reduce 90
	UNTIL  reduce 90
	STEP  reduce 90
	'|'  reduce 90
	'&'  reduce 90
	NE  reduce 90
	'='  reduce 90
	'<'  reduce 90
	'>'  reduce 90
	LE  reduce 90
	GE  reduce 90
	'+'  reduce 90
	'-'  reduce 90
	';'  reduce 90
	']'  reduce 90
	'!'  reduce 90
	')'  reduce 90
	','  reduce 90


state 128
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr '-' expr .  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 91
	END  reduce 91
	DONE  reduce 91
	DO  reduce 91
	THEN  reduce 91
	ELSE  reduce 91
	ELIF  reduce 91
	FI  reduce 91
	UNTIL  reduce 91
	STEP  reduce 91
	'|'  reduce 91
	'&'  reduce 91
	NE  reduce 91
	'='  reduce 91
	'<'  reduce 91
	'>'  reduce 91
	LE  reduce 91
	GE  reduce 91
	'+'  reduce 91
	'-'  reduce 91
	';'  reduce 91
	']'  reduce 91
	'!'  reduce 91
	')'  reduce 91
	','  reduce 91


state 129
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr '*' expr .  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'^'  shift 91
	START  reduce 92
	END  reduce 92
	DONE  reduce 92
	DO  reduce 92
	THEN  reduce 92
	ELSE  reduce 92
	ELIF  reduce 92
	FI  reduce 92
	UNTIL  reduce 92
	STEP  reduce 92
	'|'  reduce 92
	'&'  reduce 92
	NE  reduce 92
	'='  reduce 92
	'<'  reduce 92
	'>'  reduce 92
	LE  reduce 92
	GE  reduce 92
	'+'  reduce 92
	'-'  reduce 92
	'*'  reduce 92
	'/'  reduce 92
	'%'  reduce 92
	';'  reduce 92
	']'  reduce 92
	'!'  reduce 92
	')'  reduce 92
	','  reduce 92


state 130
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr '/' expr .  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'^'  shift 91
	START  reduce 93
	END  reduce 93
	DONE  reduce 93
	DO  reduce 93
	THEN  reduce 93
	ELSE  reduce 93
	ELIF  reduce 93
	FI  reduce 93
	UNTIL  reduce 93
	STEP  reduce 93
	'|'  reduce 93
	'&'  reduce 93
	NE  reduce 93
	'='  reduce 93
	'<'  reduce 93
	'>'  reduce 93
	LE  reduce 93
	GE  reduce 93
	'+'  reduce 93
	'-'  reduce 93
	'*'  reduce 93
	'/'  reduce 93
	'%'  reduce 93
	';'  reduce 93
	']'  reduce 93
	'!'  reduce 93
	')'  reduce 93
	','  reduce 93


state 131
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr '%' expr .  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'^'  shift 91
	START  reduce 94
	END  reduce 94
	DONE  reduce 94
	DO  reduce 94
	THEN  reduce 94
	ELSE  reduce 94
	ELIF  reduce 94
	FI  reduce 94
	UNTIL  reduce 94
	STEP  reduce 94
	'|'  reduce 94
	'&'  reduce 94
	NE  reduce 94
	'='  reduce 94
	'<'  reduce 94
	'>'  reduce 94
	LE  reduce 94
	GE  reduce 94
	'+'  reduce 94
	'-'  reduce 94
	'*'  reduce 94
	'/'  reduce 94
	'%'  reduce 94
	';'  reduce 94
	']'  reduce 94
	'!'  reduce 94
	')'  reduce 94
	','  reduce 94


state 132
	expr : expr . '^' expr  (89)
	expr : expr '^' expr .  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'^'  shift 91
	START  reduce 89
	END  reduce 89
	DONE  reduce 89
	DO  reduce 89
	THEN  reduce 89
	ELSE  reduce 89
	ELIF  reduce 89
	FI  reduce 89
	UNTIL  reduce 89
	STEP  reduce 89
	'|'  reduce 89
	'&'  reduce 89
	NE  reduce 89
	'='  reduce 89
	'<'  reduce 89
	'>'  reduce 89
	LE  reduce 89
	GE  reduce 89
	'+'  reduce 89
	'-'  reduce 89
	'*'  reduce 89
	'/'  reduce 89
	'%'  reduce 89
	';'  reduce 89
	']'  reduce 89
	'!'  reduce 89
	')'  reduce 89
	','  reduce 89


state 133
	lvalue : string '[' expr . ']'  (80)
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	']'  shift 154
	.  error


state 134
	func : FUNCTION functype ID $$2 . params funcend  (21)

	NUMBER  shift 155
	ARRAY  shift 156
	STRING  shift 157
	.  error

	params  goto 158
	param  goto 159


state 135
	func : FUNCTION functype ID $$4 . funcend  (25)

	DONE  shift 160
	DO  shift 161
	.  error

	funcend  goto 162


state 136
	func : FUNCTION qualifier functype ID . $$1 params funcend  (19)
	func : FUNCTION qualifier functype ID . $$3 funcend  (23)
	$$1 : .  (18)
	$$3 : .  (22)

	NUMBER  reduce 18
	ARRAY  reduce 18
	STRING  reduce 18
	DONE  reduce 22
	DO  reduce 22

	$$1  goto 163
	$$3  goto 164


state 137
	var : ARRAY ID '[' integer . ']'  (39)

	']'  shift 165
	.  error


state 138
	decl : CONST var ATTR literal .  (15)

	.  reduce 15


state 139
	program : PROGRAM decls START bodyprincipal END .  (3)

	.  reduce 3


state 140
	decl : qualifier CONST var ATTR . literal  (10)

	INTEGER  shift 21
	STR  shift 23
	.  error

	literal  goto 166
	integer  goto 106
	integerlist  goto 107
	string  goto 108
	stringintegerlist  goto 41


state 141
	decl : qualifier var ATTR literal .  (11)

	.  reduce 11


state 142
	integerlist : integerlist ',' . integer  (114)

	INTEGER  shift 21
	.  error

	integer  goto 167


state 143
	expr : ID '(' args ')' .  (83)

	.  reduce 83


state 144
	args : args ',' . expr  (116)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 168
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 145
	lvalue : ID '[' expr ']' .  (79)

	.  reduce 79


state 146
	instrterm : REPEAT .  (61)

	.  reduce 61


state 147
	instrterm : STOP .  (62)

	.  reduce 62


state 148
	instrterm : RETURN . expr  (63)
	instrterm : RETURN .  (64)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	START  reduce 64
	END  reduce 64
	DONE  reduce 64
	ELSE  reduce 64
	ELIF  reduce 64
	FI  reduce 64
	';'  reduce 64

	lvalue  goto 61
	expr  goto 169
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 149
	block : instrterm .  (69)

	.  reduce 69


state 150
	instr : IF expr THEN block . FI  (52)
	instr : IF expr THEN block . elifs ELSE block FI  (53)
	instr : IF expr THEN block . elifs FI  (54)
	instr : IF expr THEN block . ELSE block FI  (55)

	ELSE  shift 170
	ELIF  shift 171
	FI  shift 172
	.  error

	elif  goto 173
	elifs  goto 174


state 151
	block : instrs .  (70)
	block : instrs . instrterm  (71)
	instrs : instrs . instr  (77)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 146
	STOP  shift 147
	RETURN  shift 148
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	DONE  reduce 70
	ELSE  reduce 70
	ELIF  reduce 70
	FI  reduce 70

	instr  goto 75
	instrterm  goto 175
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 152
	instr : FOR expr UNTIL expr . STEP expr DO $$5 block DONE  (57)
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	STEP  shift 176
	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	.  error


state 153
	instr : lvalue '#' expr ';' .  (60)

	.  reduce 60


state 154
	lvalue : string '[' expr ']' .  (80)

	.  reduce 80


state 155
	param : NUMBER . ID  (35)

	ID  shift 177
	.  error


state 156
	param : ARRAY . ID '[' integer ']'  (36)

	ID  shift 178
	.  error


state 157
	param : STRING . ID  (34)

	ID  shift 179
	.  error


state 158
	func : FUNCTION functype ID $$2 params . funcend  (21)
	params : params . ';' param  (33)

	DONE  shift 160
	DO  shift 161
	';'  shift 180
	.  error

	funcend  goto 181


state 159
	params : param .  (32)

	.  reduce 32


state 160
	funcend : DONE .  (26)

	.  reduce 26


state 161
	funcend : DO . body  (27)
	blockfunc : .  (72)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 146
	STOP  shift 147
	RETURN  shift 148
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	START  reduce 72
	END  reduce 72
	';'  reduce 72

	body  goto 182
	bodyvars  goto 183
	var  goto 34
	instr  goto 35
	instrterm  goto 184
	blockfunc  goto 185
	instrs  goto 186
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 162
	func : FUNCTION functype ID $$4 funcend .  (25)

	.  reduce 25


state 163
	func : FUNCTION qualifier functype ID $$1 . params funcend  (19)

	NUMBER  shift 155
	ARRAY  shift 156
	STRING  shift 157
	.  error

	params  goto 187
	param  goto 159


state 164
	func : FUNCTION qualifier functype ID $$3 . funcend  (23)

	DONE  shift 160
	DO  shift 161
	.  error

	funcend  goto 188


state 165
	var : ARRAY ID '[' integer ']' .  (39)

	.  reduce 39


state 166
	decl : qualifier CONST var ATTR literal .  (10)

	.  reduce 10


state 167
	integerlist : integerlist ',' integer .  (114)

	.  reduce 114


state 168
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)
	args : args ',' expr .  (116)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	')'  reduce 116
	','  reduce 116


state 169
	instrterm : RETURN expr .  (63)
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 63
	END  reduce 63
	DONE  reduce 63
	ELSE  reduce 63
	ELIF  reduce 63
	FI  reduce 63
	';'  reduce 63


state 170
	instr : IF expr THEN block ELSE . block FI  (55)
	block : .  (68)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 146
	STOP  shift 147
	RETURN  shift 148
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	FI  reduce 68

	instr  goto 35
	instrterm  goto 149
	block  goto 189
	instrs  goto 151
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 171
	elif : ELIF . expr THEN block  (65)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 190
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 172
	instr : IF expr THEN block FI .  (52)

	.  reduce 52


state 173
	elifs : elif .  (66)

	.  reduce 66


state 174
	instr : IF expr THEN block elifs . ELSE block FI  (53)
	instr : IF expr THEN block elifs . FI  (54)
	elifs : elifs . elif  (67)

	ELSE  shift 191
	ELIF  shift 171
	FI  shift 192
	.  error

	elif  goto 193


state 175
	block : instrs instrterm .  (71)

	.  reduce 71


state 176
	instr : FOR expr UNTIL expr STEP . expr DO $$5 block DONE  (57)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	.  error

	lvalue  goto 61
	expr  goto 194
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 177
	param : NUMBER ID .  (35)

	.  reduce 35


state 178
	param : ARRAY ID . '[' integer ']'  (36)

	'['  shift 195
	.  error


state 179
	param : STRING ID .  (34)

	.  reduce 34


state 180
	params : params ';' . param  (33)

	NUMBER  shift 155
	ARRAY  shift 156
	STRING  shift 157
	.  error

	param  goto 196


state 181
	func : FUNCTION functype ID $$2 params funcend .  (21)

	.  reduce 21


state 182
	funcend : DO body .  (27)

	.  reduce 27


state 183
	body : bodyvars . blockfunc  (46)
	bodyvars : bodyvars . var ';'  (51)
	blockfunc : .  (72)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 146
	STOP  shift 147
	RETURN  shift 148
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	START  reduce 72
	END  reduce 72
	';'  reduce 72

	var  goto 73
	instr  goto 35
	instrterm  goto 184
	blockfunc  goto 197
	instrs  goto 186
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 184
	blockfunc : instrterm .  (73)

	.  reduce 73


state 185
	body : blockfunc .  (47)

	.  reduce 47


state 186
	blockfunc : instrs .  (74)
	blockfunc : instrs . instrterm  (75)
	instrs : instrs . instr  (77)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 146
	STOP  shift 147
	RETURN  shift 148
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	START  reduce 74
	END  reduce 74
	';'  reduce 74

	instr  goto 75
	instrterm  goto 198
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 187
	func : FUNCTION qualifier functype ID $$1 params . funcend  (19)
	params : params . ';' param  (33)

	DONE  shift 160
	DO  shift 161
	';'  shift 180
	.  error

	funcend  goto 199


state 188
	func : FUNCTION qualifier functype ID $$3 funcend .  (23)

	.  reduce 23


state 189
	instr : IF expr THEN block ELSE block . FI  (55)

	FI  shift 200
	.  error


state 190
	elif : ELIF expr . THEN block  (65)
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	THEN  shift 201
	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	.  error


state 191
	instr : IF expr THEN block elifs ELSE . block FI  (53)
	block : .  (68)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 146
	STOP  shift 147
	RETURN  shift 148
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	FI  reduce 68

	instr  goto 35
	instrterm  goto 149
	block  goto 202
	instrs  goto 151
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 192
	instr : IF expr THEN block elifs FI .  (54)

	.  reduce 54


state 193
	elifs : elifs elif .  (67)

	.  reduce 67


state 194
	instr : FOR expr UNTIL expr STEP expr . DO $$5 block DONE  (57)
	expr : expr . '^' expr  (89)
	expr : expr . '+' expr  (90)
	expr : expr . '-' expr  (91)
	expr : expr . '*' expr  (92)
	expr : expr . '/' expr  (93)
	expr : expr . '%' expr  (94)
	expr : expr . '<' expr  (95)
	expr : expr . '>' expr  (96)
	expr : expr . GE expr  (97)
	expr : expr . LE expr  (98)
	expr : expr . NE expr  (99)
	expr : expr . '=' expr  (100)
	expr : expr . '&' expr  (102)
	expr : expr . '|' expr  (103)

	DO  shift 203
	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	.  error


state 195
	param : ARRAY ID '[' . integer ']'  (36)

	INTEGER  shift 21
	.  error

	integer  goto 204


state 196
	params : params ';' param .  (33)

	.  reduce 33


state 197
	body : bodyvars blockfunc .  (46)

	.  reduce 46


state 198
	blockfunc : instrs instrterm .  (75)

	.  reduce 75


state 199
	func : FUNCTION qualifier functype ID $$1 params funcend .  (19)

	.  reduce 19


state 200
	instr : IF expr THEN block ELSE block FI .  (55)

	.  reduce 55


state 201
	elif : ELIF expr THEN . block  (65)
	block : .  (68)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 146
	STOP  shift 147
	RETURN  shift 148
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	ELSE  reduce 68
	ELIF  reduce 68
	FI  reduce 68

	instr  goto 35
	instrterm  goto 149
	block  goto 205
	instrs  goto 151
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 202
	instr : IF expr THEN block elifs ELSE block . FI  (53)

	FI  shift 206
	.  error


state 203
	instr : FOR expr UNTIL expr STEP expr DO . $$5 block DONE  (57)
	$$5 : .  (56)

	.  reduce 56

	$$5  goto 207


state 204
	param : ARRAY ID '[' integer . ']'  (36)

	']'  shift 208
	.  error


state 205
	elif : ELIF expr THEN block .  (65)

	.  reduce 65


state 206
	instr : IF expr THEN block elifs ELSE block FI .  (53)

	.  reduce 53


state 207
	instr : FOR expr UNTIL expr STEP expr DO $$5 . block DONE  (57)
	block : .  (68)

	INTEGER  shift 21
	ID  shift 22
	STR  shift 23
	IF  shift 24
	FOR  shift 25
	REPEAT  shift 146
	STOP  shift 147
	RETURN  shift 148
	'&'  shift 26
	'~'  shift 27
	'-'  shift 28
	'?'  shift 29
	'('  shift 30
	DONE  reduce 68

	instr  goto 35
	instrterm  goto 149
	block  goto 209
	instrs  goto 151
	lvalue  goto 37
	expr  goto 38
	integer  goto 39
	string  goto 40
	stringintegerlist  goto 41


state 208
	param : ARRAY ID '[' integer ']' .  (36)

	.  reduce 36


state 209
	instr : FOR expr UNTIL expr STEP expr DO $$5 block . DONE  (57)

	DONE  shift 210
	.  error


state 210
	instr : FOR expr UNTIL expr STEP expr DO $$5 block DONE .  (57)

	.  reduce 57


73 terminals, 38 nonterminals
117 grammar rules, 211 states

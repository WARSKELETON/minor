   0  $accept : file $end

   1  file : program
   2       | module

   3  program : PROGRAM decls START body END

   4  module : MODULE decls END

   5  decls :
   6        | delclist

   7  delclist : decl
   8           | delclist ';' decl

   9  decl : func
  10       | qualifier CONST var declattr
  11       | qualifier var declattr

  12  declattr :
  13           | ATTR literal
  14           | '[' INTEGER ']'
  15           | '[' INTEGER ']' ATTR literal

  16  func : FUNCTION qualifier functype ID vars funcend

  17  funcend : DONE
  18          | DO body

  19  functype : type
  20           | VOID

  21  qualifier :
  22            | PUBLIC
  23            | FORWARD

  24  vars :
  25       | varlist

  26  varlist : var
  27          | varlist ';' var

  28  var : type ID

  29  type : NUMBER
  30       | ARRAY
  31       | STRING

  32  body : bodyvars bodyinstrs
  33       | bodyinstrs

  34  bodyinstrs : block

  35  bodyvars : var ';'
  36           | bodyvars var ';'

  37  instr : IF expr THEN block FI
  38        | IF expr THEN block elifs ELSE block FI
  39        | IF expr THEN block elifs FI
  40        | IF expr THEN block ELSE block FI
  41        | FOR expr UNTIL expr STEP expr DO block DONE
  42        | expr ';'
  43        | expr '!'
  44        | lvalue '#' expr ';'

  45  instrterm : REPEAT
  46            | STOP
  47            | RETURN expr
  48            | RETURN

  49  elif : ELIF expr THEN block

  50  elifs : elif
  51        | elifs elif

  52  block :
  53        | instrterm
  54        | instrs
  55        | instrs instrterm

  56  instrs : instr
  57         | instrs instr

  58  lvalue : ID
  59         | lvalue '[' expr ']'

  60  expr : lvalue
  61       | '(' expr ')'
  62       | expr '(' args ')'
  63       | expr '(' ')'
  64       | STR
  65       | INTEGER
  66       | '-' expr
  67       | '&' expr
  68       | expr '^' expr
  69       | expr '+' expr
  70       | expr '-' expr
  71       | expr '*' expr
  72       | expr '/' expr
  73       | expr '%' expr
  74       | expr '<' expr
  75       | expr '>' expr
  76       | expr GE expr
  77       | expr LE expr
  78       | expr NE expr
  79       | expr '=' expr
  80       | lvalue ATTR expr
  81       | expr '&' expr
  82       | expr '|' expr
  83       | '~' expr
  84       | '?'

  85  literal : string
  86          | integerlist

  87  integer : INTEGER

  88  string : stringintegerlist
  89         | STR

  90  stringintegerlist : integer integer
  91                    | stringintegerlist integer

  92  integerlist : integer
  93              | integerlist ',' integer

  94  args : expr
  95       | args ',' expr

state 0
	$accept : . file $end  (0)

	PROGRAM  shift 1
	MODULE  shift 2
	.  error

	file  goto 3
	program  goto 4
	module  goto 5


state 1
	program : PROGRAM . decls START body END  (3)
	decls : .  (5)
	qualifier : .  (21)

	FUNCTION  shift 6
	PUBLIC  shift 7
	FORWARD  shift 8
	START  reduce 5
	NUMBER  reduce 21
	ARRAY  reduce 21
	STRING  reduce 21
	CONST  reduce 21

	decls  goto 9
	delclist  goto 10
	decl  goto 11
	func  goto 12
	qualifier  goto 13


state 2
	module : MODULE . decls END  (4)
	decls : .  (5)
	qualifier : .  (21)

	FUNCTION  shift 6
	PUBLIC  shift 7
	FORWARD  shift 8
	END  reduce 5
	NUMBER  reduce 21
	ARRAY  reduce 21
	STRING  reduce 21
	CONST  reduce 21

	decls  goto 14
	delclist  goto 10
	decl  goto 11
	func  goto 12
	qualifier  goto 13


state 3
	$accept : file . $end  (0)

	$end  accept


state 4
	file : program .  (1)

	.  reduce 1


state 5
	file : module .  (2)

	.  reduce 2


state 6
	func : FUNCTION . qualifier functype ID vars funcend  (16)
	qualifier : .  (21)

	PUBLIC  shift 7
	FORWARD  shift 8
	NUMBER  reduce 21
	ARRAY  reduce 21
	VOID  reduce 21
	STRING  reduce 21

	qualifier  goto 15


state 7
	qualifier : PUBLIC .  (22)

	.  reduce 22


state 8
	qualifier : FORWARD .  (23)

	.  reduce 23


state 9
	program : PROGRAM decls . START body END  (3)

	START  shift 16
	.  error


state 10
	decls : delclist .  (6)
	delclist : delclist . ';' decl  (8)

	';'  shift 17
	START  reduce 6
	END  reduce 6


state 11
	delclist : decl .  (7)

	.  reduce 7


state 12
	decl : func .  (9)

	.  reduce 9


state 13
	decl : qualifier . CONST var declattr  (10)
	decl : qualifier . var declattr  (11)

	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	CONST  shift 21
	.  error

	var  goto 22
	type  goto 23


state 14
	module : MODULE decls . END  (4)

	END  shift 24
	.  error


state 15
	func : FUNCTION qualifier . functype ID vars funcend  (16)

	NUMBER  shift 18
	ARRAY  shift 19
	VOID  shift 25
	STRING  shift 20
	.  error

	functype  goto 26
	type  goto 27


state 16
	program : PROGRAM decls START . body END  (3)
	block : .  (52)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 33
	STOP  shift 34
	RETURN  shift 35
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	END  reduce 52

	body  goto 41
	bodyinstrs  goto 42
	bodyvars  goto 43
	var  goto 44
	type  goto 23
	instr  goto 45
	instrterm  goto 46
	block  goto 47
	instrs  goto 48
	lvalue  goto 49
	expr  goto 50


state 17
	delclist : delclist ';' . decl  (8)
	qualifier : .  (21)

	FUNCTION  shift 6
	PUBLIC  shift 7
	FORWARD  shift 8
	NUMBER  reduce 21
	ARRAY  reduce 21
	STRING  reduce 21
	CONST  reduce 21

	decl  goto 51
	func  goto 12
	qualifier  goto 13


state 18
	type : NUMBER .  (29)

	.  reduce 29


state 19
	type : ARRAY .  (30)

	.  reduce 30


state 20
	type : STRING .  (31)

	.  reduce 31


state 21
	decl : qualifier CONST . var declattr  (10)

	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	.  error

	var  goto 52
	type  goto 23


state 22
	decl : qualifier var . declattr  (11)
	declattr : .  (12)

	ATTR  shift 53
	'['  shift 54
	START  reduce 12
	END  reduce 12
	';'  reduce 12

	declattr  goto 55


state 23
	var : type . ID  (28)

	ID  shift 56
	.  error


state 24
	module : MODULE decls END .  (4)

	.  reduce 4


state 25
	functype : VOID .  (20)

	.  reduce 20


state 26
	func : FUNCTION qualifier functype . ID vars funcend  (16)

	ID  shift 57
	.  error


state 27
	functype : type .  (19)

	.  reduce 19


state 28
	expr : INTEGER .  (65)

	.  reduce 65


state 29
	lvalue : ID .  (58)

	.  reduce 58


state 30
	expr : STR .  (64)

	.  reduce 64


state 31
	instr : IF . expr THEN block FI  (37)
	instr : IF . expr THEN block elifs ELSE block FI  (38)
	instr : IF . expr THEN block elifs FI  (39)
	instr : IF . expr THEN block ELSE block FI  (40)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 59


state 32
	instr : FOR . expr UNTIL expr STEP expr DO block DONE  (41)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 60


state 33
	instrterm : REPEAT .  (45)

	.  reduce 45


state 34
	instrterm : STOP .  (46)

	.  reduce 46


state 35
	instrterm : RETURN . expr  (47)
	instrterm : RETURN .  (48)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	START  reduce 48
	END  reduce 48
	DONE  reduce 48
	ELSE  reduce 48
	ELIF  reduce 48
	FI  reduce 48
	';'  reduce 48

	lvalue  goto 58
	expr  goto 61


state 36
	expr : '&' . expr  (67)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 62


state 37
	expr : '~' . expr  (83)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 63


state 38
	expr : '-' . expr  (66)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 64


state 39
	expr : '?' .  (84)

	.  reduce 84


state 40
	expr : '(' . expr ')'  (61)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 65


state 41
	program : PROGRAM decls START body . END  (3)

	END  shift 66
	.  error


state 42
	body : bodyinstrs .  (33)

	.  reduce 33


state 43
	body : bodyvars . bodyinstrs  (32)
	bodyvars : bodyvars . var ';'  (36)
	block : .  (52)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 33
	STOP  shift 34
	RETURN  shift 35
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	START  reduce 52
	END  reduce 52
	';'  reduce 52

	bodyinstrs  goto 67
	var  goto 68
	type  goto 23
	instr  goto 45
	instrterm  goto 46
	block  goto 47
	instrs  goto 48
	lvalue  goto 49
	expr  goto 50


state 44
	bodyvars : var . ';'  (35)

	';'  shift 69
	.  error


state 45
	instrs : instr .  (56)

	.  reduce 56


state 46
	block : instrterm .  (53)

	.  reduce 53


state 47
	bodyinstrs : block .  (34)

	.  reduce 34


state 48
	block : instrs .  (54)
	block : instrs . instrterm  (55)
	instrs : instrs . instr  (57)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 33
	STOP  shift 34
	RETURN  shift 35
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	START  reduce 54
	END  reduce 54
	DONE  reduce 54
	ELSE  reduce 54
	ELIF  reduce 54
	FI  reduce 54
	';'  reduce 54

	instr  goto 70
	instrterm  goto 71
	lvalue  goto 49
	expr  goto 50


state 49
	instr : lvalue . '#' expr ';'  (44)
	lvalue : lvalue . '[' expr ']'  (59)
	expr : lvalue .  (60)
	expr : lvalue . ATTR expr  (80)

	ATTR  shift 72
	'['  shift 73
	'#'  shift 74
	'|'  reduce 60
	'&'  reduce 60
	NE  reduce 60
	'='  reduce 60
	'<'  reduce 60
	'>'  reduce 60
	LE  reduce 60
	GE  reduce 60
	'+'  reduce 60
	'-'  reduce 60
	'*'  reduce 60
	'/'  reduce 60
	'%'  reduce 60
	'^'  reduce 60
	'('  reduce 60
	';'  reduce 60
	'!'  reduce 60


state 50
	instr : expr . ';'  (42)
	instr : expr . '!'  (43)
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'|'  shift 75
	'&'  shift 76
	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	';'  shift 90
	'!'  shift 91
	.  error


state 51
	delclist : delclist ';' decl .  (8)

	.  reduce 8


state 52
	decl : qualifier CONST var . declattr  (10)
	declattr : .  (12)

	ATTR  shift 53
	'['  shift 54
	START  reduce 12
	END  reduce 12
	';'  reduce 12

	declattr  goto 92


state 53
	declattr : ATTR . literal  (13)

	INTEGER  shift 93
	STR  shift 94
	.  error

	literal  goto 95
	integer  goto 96
	integerlist  goto 97
	string  goto 98
	stringintegerlist  goto 99


state 54
	declattr : '[' . INTEGER ']'  (14)
	declattr : '[' . INTEGER ']' ATTR literal  (15)

	INTEGER  shift 100
	.  error


state 55
	decl : qualifier var declattr .  (11)

	.  reduce 11


state 56
	var : type ID .  (28)

	.  reduce 28


state 57
	func : FUNCTION qualifier functype ID . vars funcend  (16)
	vars : .  (24)

	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	DONE  reduce 24
	DO  reduce 24

	vars  goto 101
	varlist  goto 102
	var  goto 103
	type  goto 23


state 58
	lvalue : lvalue . '[' expr ']'  (59)
	expr : lvalue .  (60)
	expr : lvalue . ATTR expr  (80)

	ATTR  shift 72
	'['  shift 73
	START  reduce 60
	END  reduce 60
	DONE  reduce 60
	DO  reduce 60
	THEN  reduce 60
	ELSE  reduce 60
	ELIF  reduce 60
	FI  reduce 60
	UNTIL  reduce 60
	STEP  reduce 60
	'|'  reduce 60
	'&'  reduce 60
	NE  reduce 60
	'='  reduce 60
	'<'  reduce 60
	'>'  reduce 60
	LE  reduce 60
	GE  reduce 60
	'+'  reduce 60
	'-'  reduce 60
	'*'  reduce 60
	'/'  reduce 60
	'%'  reduce 60
	'^'  reduce 60
	'('  reduce 60
	';'  reduce 60
	']'  reduce 60
	'!'  reduce 60
	')'  reduce 60
	','  reduce 60


state 59
	instr : IF expr . THEN block FI  (37)
	instr : IF expr . THEN block elifs ELSE block FI  (38)
	instr : IF expr . THEN block elifs FI  (39)
	instr : IF expr . THEN block ELSE block FI  (40)
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	THEN  shift 104
	'|'  shift 75
	'&'  shift 76
	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	.  error


state 60
	instr : FOR expr . UNTIL expr STEP expr DO block DONE  (41)
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	UNTIL  shift 105
	'|'  shift 75
	'&'  shift 76
	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	.  error


state 61
	instrterm : RETURN expr .  (47)
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'|'  shift 75
	'&'  shift 76
	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	START  reduce 47
	END  reduce 47
	DONE  reduce 47
	ELSE  reduce 47
	ELIF  reduce 47
	FI  reduce 47
	';'  reduce 47


state 62
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : '&' expr .  (67)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'('  shift 89
	START  reduce 67
	END  reduce 67
	DONE  reduce 67
	DO  reduce 67
	THEN  reduce 67
	ELSE  reduce 67
	ELIF  reduce 67
	FI  reduce 67
	UNTIL  reduce 67
	STEP  reduce 67
	'|'  reduce 67
	'&'  reduce 67
	NE  reduce 67
	'='  reduce 67
	'<'  reduce 67
	'>'  reduce 67
	LE  reduce 67
	GE  reduce 67
	'+'  reduce 67
	'-'  reduce 67
	'*'  reduce 67
	'/'  reduce 67
	'%'  reduce 67
	'^'  reduce 67
	';'  reduce 67
	']'  reduce 67
	'!'  reduce 67
	')'  reduce 67
	','  reduce 67


state 63
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)
	expr : '~' expr .  (83)

	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	START  reduce 83
	END  reduce 83
	DONE  reduce 83
	DO  reduce 83
	THEN  reduce 83
	ELSE  reduce 83
	ELIF  reduce 83
	FI  reduce 83
	UNTIL  reduce 83
	STEP  reduce 83
	'|'  reduce 83
	'&'  reduce 83
	';'  reduce 83
	']'  reduce 83
	'!'  reduce 83
	')'  reduce 83
	','  reduce 83


state 64
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : '-' expr .  (66)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'('  shift 89
	START  reduce 66
	END  reduce 66
	DONE  reduce 66
	DO  reduce 66
	THEN  reduce 66
	ELSE  reduce 66
	ELIF  reduce 66
	FI  reduce 66
	UNTIL  reduce 66
	STEP  reduce 66
	'|'  reduce 66
	'&'  reduce 66
	NE  reduce 66
	'='  reduce 66
	'<'  reduce 66
	'>'  reduce 66
	LE  reduce 66
	GE  reduce 66
	'+'  reduce 66
	'-'  reduce 66
	'*'  reduce 66
	'/'  reduce 66
	'%'  reduce 66
	'^'  reduce 66
	';'  reduce 66
	']'  reduce 66
	'!'  reduce 66
	')'  reduce 66
	','  reduce 66


state 65
	expr : '(' expr . ')'  (61)
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'|'  shift 75
	'&'  shift 76
	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	')'  shift 106
	.  error


state 66
	program : PROGRAM decls START body END .  (3)

	.  reduce 3


state 67
	body : bodyvars bodyinstrs .  (32)

	.  reduce 32


state 68
	bodyvars : bodyvars var . ';'  (36)

	';'  shift 107
	.  error


state 69
	bodyvars : var ';' .  (35)

	.  reduce 35


state 70
	instrs : instrs instr .  (57)

	.  reduce 57


state 71
	block : instrs instrterm .  (55)

	.  reduce 55


state 72
	expr : lvalue ATTR . expr  (80)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 108


state 73
	lvalue : lvalue '[' . expr ']'  (59)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 109


state 74
	instr : lvalue '#' . expr ';'  (44)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 110


state 75
	expr : expr '|' . expr  (82)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 111


state 76
	expr : expr '&' . expr  (81)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 112


state 77
	expr : expr NE . expr  (78)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 113


state 78
	expr : expr '=' . expr  (79)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 114


state 79
	expr : expr '<' . expr  (74)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 115


state 80
	expr : expr '>' . expr  (75)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 116


state 81
	expr : expr LE . expr  (77)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 117


state 82
	expr : expr GE . expr  (76)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 118


state 83
	expr : expr '+' . expr  (69)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 119


state 84
	expr : expr '-' . expr  (70)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 120


state 85
	expr : expr '*' . expr  (71)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 121


state 86
	expr : expr '/' . expr  (72)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 122


state 87
	expr : expr '%' . expr  (73)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 123


state 88
	expr : expr '^' . expr  (68)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 124


state 89
	expr : expr '(' . args ')'  (62)
	expr : expr '(' . ')'  (63)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	')'  shift 125
	.  error

	lvalue  goto 58
	expr  goto 126
	args  goto 127


state 90
	instr : expr ';' .  (42)

	.  reduce 42


state 91
	instr : expr '!' .  (43)

	.  reduce 43


state 92
	decl : qualifier CONST var declattr .  (10)

	.  reduce 10


state 93
	integer : INTEGER .  (87)

	.  reduce 87


state 94
	string : STR .  (89)

	.  reduce 89


state 95
	declattr : ATTR literal .  (13)

	.  reduce 13


state 96
	stringintegerlist : integer . integer  (90)
	integerlist : integer .  (92)

	INTEGER  shift 93
	START  reduce 92
	END  reduce 92
	';'  reduce 92
	','  reduce 92

	integer  goto 128


state 97
	literal : integerlist .  (86)
	integerlist : integerlist . ',' integer  (93)

	','  shift 129
	START  reduce 86
	END  reduce 86
	';'  reduce 86


state 98
	literal : string .  (85)

	.  reduce 85


state 99
	string : stringintegerlist .  (88)
	stringintegerlist : stringintegerlist . integer  (91)

	INTEGER  shift 93
	START  reduce 88
	END  reduce 88
	';'  reduce 88

	integer  goto 130


state 100
	declattr : '[' INTEGER . ']'  (14)
	declattr : '[' INTEGER . ']' ATTR literal  (15)

	']'  shift 131
	.  error


state 101
	func : FUNCTION qualifier functype ID vars . funcend  (16)

	DONE  shift 132
	DO  shift 133
	.  error

	funcend  goto 134


state 102
	vars : varlist .  (25)
	varlist : varlist . ';' var  (27)

	';'  shift 135
	DONE  reduce 25
	DO  reduce 25


state 103
	varlist : var .  (26)

	.  reduce 26


state 104
	instr : IF expr THEN . block FI  (37)
	instr : IF expr THEN . block elifs ELSE block FI  (38)
	instr : IF expr THEN . block elifs FI  (39)
	instr : IF expr THEN . block ELSE block FI  (40)
	block : .  (52)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 33
	STOP  shift 34
	RETURN  shift 35
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	ELSE  reduce 52
	ELIF  reduce 52
	FI  reduce 52

	instr  goto 45
	instrterm  goto 46
	block  goto 136
	instrs  goto 48
	lvalue  goto 49
	expr  goto 50


state 105
	instr : FOR expr UNTIL . expr STEP expr DO block DONE  (41)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 137


state 106
	expr : '(' expr ')' .  (61)

	.  reduce 61


state 107
	bodyvars : bodyvars var ';' .  (36)

	.  reduce 36


state 108
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : lvalue ATTR expr .  (80)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'|'  shift 75
	'&'  shift 76
	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	START  reduce 80
	END  reduce 80
	DONE  reduce 80
	DO  reduce 80
	THEN  reduce 80
	ELSE  reduce 80
	ELIF  reduce 80
	FI  reduce 80
	UNTIL  reduce 80
	STEP  reduce 80
	';'  reduce 80
	']'  reduce 80
	'!'  reduce 80
	')'  reduce 80
	','  reduce 80


state 109
	lvalue : lvalue '[' expr . ']'  (59)
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'|'  shift 75
	'&'  shift 76
	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	']'  shift 138
	.  error


state 110
	instr : lvalue '#' expr . ';'  (44)
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'|'  shift 75
	'&'  shift 76
	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	';'  shift 139
	.  error


state 111
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)
	expr : expr '|' expr .  (82)

	'&'  shift 76
	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	START  reduce 82
	END  reduce 82
	DONE  reduce 82
	DO  reduce 82
	THEN  reduce 82
	ELSE  reduce 82
	ELIF  reduce 82
	FI  reduce 82
	UNTIL  reduce 82
	STEP  reduce 82
	'|'  reduce 82
	';'  reduce 82
	']'  reduce 82
	'!'  reduce 82
	')'  reduce 82
	','  reduce 82


state 112
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr '&' expr .  (81)
	expr : expr . '|' expr  (82)

	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	START  reduce 81
	END  reduce 81
	DONE  reduce 81
	DO  reduce 81
	THEN  reduce 81
	ELSE  reduce 81
	ELIF  reduce 81
	FI  reduce 81
	UNTIL  reduce 81
	STEP  reduce 81
	'|'  reduce 81
	'&'  reduce 81
	';'  reduce 81
	']'  reduce 81
	'!'  reduce 81
	')'  reduce 81
	','  reduce 81


state 113
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr NE expr .  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	START  reduce 78
	END  reduce 78
	DONE  reduce 78
	DO  reduce 78
	THEN  reduce 78
	ELSE  reduce 78
	ELIF  reduce 78
	FI  reduce 78
	UNTIL  reduce 78
	STEP  reduce 78
	'|'  reduce 78
	'&'  reduce 78
	NE  reduce 78
	'='  reduce 78
	';'  reduce 78
	']'  reduce 78
	'!'  reduce 78
	')'  reduce 78
	','  reduce 78


state 114
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr '=' expr .  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	START  reduce 79
	END  reduce 79
	DONE  reduce 79
	DO  reduce 79
	THEN  reduce 79
	ELSE  reduce 79
	ELIF  reduce 79
	FI  reduce 79
	UNTIL  reduce 79
	STEP  reduce 79
	'|'  reduce 79
	'&'  reduce 79
	NE  reduce 79
	'='  reduce 79
	';'  reduce 79
	']'  reduce 79
	'!'  reduce 79
	')'  reduce 79
	','  reduce 79


state 115
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr '<' expr .  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	START  reduce 74
	END  reduce 74
	DONE  reduce 74
	DO  reduce 74
	THEN  reduce 74
	ELSE  reduce 74
	ELIF  reduce 74
	FI  reduce 74
	UNTIL  reduce 74
	STEP  reduce 74
	'|'  reduce 74
	'&'  reduce 74
	NE  reduce 74
	'='  reduce 74
	'<'  reduce 74
	'>'  reduce 74
	LE  reduce 74
	GE  reduce 74
	';'  reduce 74
	']'  reduce 74
	'!'  reduce 74
	')'  reduce 74
	','  reduce 74


state 116
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr '>' expr .  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	START  reduce 75
	END  reduce 75
	DONE  reduce 75
	DO  reduce 75
	THEN  reduce 75
	ELSE  reduce 75
	ELIF  reduce 75
	FI  reduce 75
	UNTIL  reduce 75
	STEP  reduce 75
	'|'  reduce 75
	'&'  reduce 75
	NE  reduce 75
	'='  reduce 75
	'<'  reduce 75
	'>'  reduce 75
	LE  reduce 75
	GE  reduce 75
	';'  reduce 75
	']'  reduce 75
	'!'  reduce 75
	')'  reduce 75
	','  reduce 75


state 117
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr LE expr .  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	START  reduce 77
	END  reduce 77
	DONE  reduce 77
	DO  reduce 77
	THEN  reduce 77
	ELSE  reduce 77
	ELIF  reduce 77
	FI  reduce 77
	UNTIL  reduce 77
	STEP  reduce 77
	'|'  reduce 77
	'&'  reduce 77
	NE  reduce 77
	'='  reduce 77
	'<'  reduce 77
	'>'  reduce 77
	LE  reduce 77
	GE  reduce 77
	';'  reduce 77
	']'  reduce 77
	'!'  reduce 77
	')'  reduce 77
	','  reduce 77


state 118
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr GE expr .  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	START  reduce 76
	END  reduce 76
	DONE  reduce 76
	DO  reduce 76
	THEN  reduce 76
	ELSE  reduce 76
	ELIF  reduce 76
	FI  reduce 76
	UNTIL  reduce 76
	STEP  reduce 76
	'|'  reduce 76
	'&'  reduce 76
	NE  reduce 76
	'='  reduce 76
	'<'  reduce 76
	'>'  reduce 76
	LE  reduce 76
	GE  reduce 76
	';'  reduce 76
	']'  reduce 76
	'!'  reduce 76
	')'  reduce 76
	','  reduce 76


state 119
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr '+' expr .  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	START  reduce 69
	END  reduce 69
	DONE  reduce 69
	DO  reduce 69
	THEN  reduce 69
	ELSE  reduce 69
	ELIF  reduce 69
	FI  reduce 69
	UNTIL  reduce 69
	STEP  reduce 69
	'|'  reduce 69
	'&'  reduce 69
	NE  reduce 69
	'='  reduce 69
	'<'  reduce 69
	'>'  reduce 69
	LE  reduce 69
	GE  reduce 69
	'+'  reduce 69
	'-'  reduce 69
	';'  reduce 69
	']'  reduce 69
	'!'  reduce 69
	')'  reduce 69
	','  reduce 69


state 120
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr '-' expr .  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	START  reduce 70
	END  reduce 70
	DONE  reduce 70
	DO  reduce 70
	THEN  reduce 70
	ELSE  reduce 70
	ELIF  reduce 70
	FI  reduce 70
	UNTIL  reduce 70
	STEP  reduce 70
	'|'  reduce 70
	'&'  reduce 70
	NE  reduce 70
	'='  reduce 70
	'<'  reduce 70
	'>'  reduce 70
	LE  reduce 70
	GE  reduce 70
	'+'  reduce 70
	'-'  reduce 70
	';'  reduce 70
	']'  reduce 70
	'!'  reduce 70
	')'  reduce 70
	','  reduce 70


state 121
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr '*' expr .  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'^'  shift 88
	'('  shift 89
	START  reduce 71
	END  reduce 71
	DONE  reduce 71
	DO  reduce 71
	THEN  reduce 71
	ELSE  reduce 71
	ELIF  reduce 71
	FI  reduce 71
	UNTIL  reduce 71
	STEP  reduce 71
	'|'  reduce 71
	'&'  reduce 71
	NE  reduce 71
	'='  reduce 71
	'<'  reduce 71
	'>'  reduce 71
	LE  reduce 71
	GE  reduce 71
	'+'  reduce 71
	'-'  reduce 71
	'*'  reduce 71
	'/'  reduce 71
	'%'  reduce 71
	';'  reduce 71
	']'  reduce 71
	'!'  reduce 71
	')'  reduce 71
	','  reduce 71


state 122
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr '/' expr .  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'^'  shift 88
	'('  shift 89
	START  reduce 72
	END  reduce 72
	DONE  reduce 72
	DO  reduce 72
	THEN  reduce 72
	ELSE  reduce 72
	ELIF  reduce 72
	FI  reduce 72
	UNTIL  reduce 72
	STEP  reduce 72
	'|'  reduce 72
	'&'  reduce 72
	NE  reduce 72
	'='  reduce 72
	'<'  reduce 72
	'>'  reduce 72
	LE  reduce 72
	GE  reduce 72
	'+'  reduce 72
	'-'  reduce 72
	'*'  reduce 72
	'/'  reduce 72
	'%'  reduce 72
	';'  reduce 72
	']'  reduce 72
	'!'  reduce 72
	')'  reduce 72
	','  reduce 72


state 123
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr '%' expr .  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'^'  shift 88
	'('  shift 89
	START  reduce 73
	END  reduce 73
	DONE  reduce 73
	DO  reduce 73
	THEN  reduce 73
	ELSE  reduce 73
	ELIF  reduce 73
	FI  reduce 73
	UNTIL  reduce 73
	STEP  reduce 73
	'|'  reduce 73
	'&'  reduce 73
	NE  reduce 73
	'='  reduce 73
	'<'  reduce 73
	'>'  reduce 73
	LE  reduce 73
	GE  reduce 73
	'+'  reduce 73
	'-'  reduce 73
	'*'  reduce 73
	'/'  reduce 73
	'%'  reduce 73
	';'  reduce 73
	']'  reduce 73
	'!'  reduce 73
	')'  reduce 73
	','  reduce 73


state 124
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr '^' expr .  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	'^'  shift 88
	'('  shift 89
	START  reduce 68
	END  reduce 68
	DONE  reduce 68
	DO  reduce 68
	THEN  reduce 68
	ELSE  reduce 68
	ELIF  reduce 68
	FI  reduce 68
	UNTIL  reduce 68
	STEP  reduce 68
	'|'  reduce 68
	'&'  reduce 68
	NE  reduce 68
	'='  reduce 68
	'<'  reduce 68
	'>'  reduce 68
	LE  reduce 68
	GE  reduce 68
	'+'  reduce 68
	'-'  reduce 68
	'*'  reduce 68
	'/'  reduce 68
	'%'  reduce 68
	';'  reduce 68
	']'  reduce 68
	'!'  reduce 68
	')'  reduce 68
	','  reduce 68


state 125
	expr : expr '(' ')' .  (63)

	.  reduce 63


state 126
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)
	args : expr .  (94)

	'|'  shift 75
	'&'  shift 76
	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	')'  reduce 94
	','  reduce 94


state 127
	expr : expr '(' args . ')'  (62)
	args : args . ',' expr  (95)

	')'  shift 140
	','  shift 141
	.  error


state 128
	stringintegerlist : integer integer .  (90)

	.  reduce 90


state 129
	integerlist : integerlist ',' . integer  (93)

	INTEGER  shift 93
	.  error

	integer  goto 142


state 130
	stringintegerlist : stringintegerlist integer .  (91)

	.  reduce 91


state 131
	declattr : '[' INTEGER ']' .  (14)
	declattr : '[' INTEGER ']' . ATTR literal  (15)

	ATTR  shift 143
	START  reduce 14
	END  reduce 14
	';'  reduce 14


state 132
	funcend : DONE .  (17)

	.  reduce 17


state 133
	funcend : DO . body  (18)
	block : .  (52)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 33
	STOP  shift 34
	RETURN  shift 35
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	START  reduce 52
	END  reduce 52
	';'  reduce 52

	body  goto 144
	bodyinstrs  goto 42
	bodyvars  goto 43
	var  goto 44
	type  goto 23
	instr  goto 45
	instrterm  goto 46
	block  goto 47
	instrs  goto 48
	lvalue  goto 49
	expr  goto 50


state 134
	func : FUNCTION qualifier functype ID vars funcend .  (16)

	.  reduce 16


state 135
	varlist : varlist ';' . var  (27)

	NUMBER  shift 18
	ARRAY  shift 19
	STRING  shift 20
	.  error

	var  goto 145
	type  goto 23


state 136
	instr : IF expr THEN block . FI  (37)
	instr : IF expr THEN block . elifs ELSE block FI  (38)
	instr : IF expr THEN block . elifs FI  (39)
	instr : IF expr THEN block . ELSE block FI  (40)

	ELSE  shift 146
	ELIF  shift 147
	FI  shift 148
	.  error

	elif  goto 149
	elifs  goto 150


state 137
	instr : FOR expr UNTIL expr . STEP expr DO block DONE  (41)
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	STEP  shift 151
	'|'  shift 75
	'&'  shift 76
	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	.  error


state 138
	lvalue : lvalue '[' expr ']' .  (59)

	.  reduce 59


state 139
	instr : lvalue '#' expr ';' .  (44)

	.  reduce 44


state 140
	expr : expr '(' args ')' .  (62)

	.  reduce 62


state 141
	args : args ',' . expr  (95)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 152


state 142
	integerlist : integerlist ',' integer .  (93)

	.  reduce 93


state 143
	declattr : '[' INTEGER ']' ATTR . literal  (15)

	INTEGER  shift 93
	STR  shift 94
	.  error

	literal  goto 153
	integer  goto 96
	integerlist  goto 97
	string  goto 98
	stringintegerlist  goto 99


state 144
	funcend : DO body .  (18)

	.  reduce 18


state 145
	varlist : varlist ';' var .  (27)

	.  reduce 27


state 146
	instr : IF expr THEN block ELSE . block FI  (40)
	block : .  (52)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 33
	STOP  shift 34
	RETURN  shift 35
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	FI  reduce 52

	instr  goto 45
	instrterm  goto 46
	block  goto 154
	instrs  goto 48
	lvalue  goto 49
	expr  goto 50


state 147
	elif : ELIF . expr THEN block  (49)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 155


state 148
	instr : IF expr THEN block FI .  (37)

	.  reduce 37


state 149
	elifs : elif .  (50)

	.  reduce 50


state 150
	instr : IF expr THEN block elifs . ELSE block FI  (38)
	instr : IF expr THEN block elifs . FI  (39)
	elifs : elifs . elif  (51)

	ELSE  shift 156
	ELIF  shift 147
	FI  shift 157
	.  error

	elif  goto 158


state 151
	instr : FOR expr UNTIL expr STEP . expr DO block DONE  (41)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	.  error

	lvalue  goto 58
	expr  goto 159


state 152
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)
	args : args ',' expr .  (95)

	'|'  shift 75
	'&'  shift 76
	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	')'  reduce 95
	','  reduce 95


state 153
	declattr : '[' INTEGER ']' ATTR literal .  (15)

	.  reduce 15


state 154
	instr : IF expr THEN block ELSE block . FI  (40)

	FI  shift 160
	.  error


state 155
	elif : ELIF expr . THEN block  (49)
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	THEN  shift 161
	'|'  shift 75
	'&'  shift 76
	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	.  error


state 156
	instr : IF expr THEN block elifs ELSE . block FI  (38)
	block : .  (52)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 33
	STOP  shift 34
	RETURN  shift 35
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	FI  reduce 52

	instr  goto 45
	instrterm  goto 46
	block  goto 162
	instrs  goto 48
	lvalue  goto 49
	expr  goto 50


state 157
	instr : IF expr THEN block elifs FI .  (39)

	.  reduce 39


state 158
	elifs : elifs elif .  (51)

	.  reduce 51


state 159
	instr : FOR expr UNTIL expr STEP expr . DO block DONE  (41)
	expr : expr . '(' args ')'  (62)
	expr : expr . '(' ')'  (63)
	expr : expr . '^' expr  (68)
	expr : expr . '+' expr  (69)
	expr : expr . '-' expr  (70)
	expr : expr . '*' expr  (71)
	expr : expr . '/' expr  (72)
	expr : expr . '%' expr  (73)
	expr : expr . '<' expr  (74)
	expr : expr . '>' expr  (75)
	expr : expr . GE expr  (76)
	expr : expr . LE expr  (77)
	expr : expr . NE expr  (78)
	expr : expr . '=' expr  (79)
	expr : expr . '&' expr  (81)
	expr : expr . '|' expr  (82)

	DO  shift 163
	'|'  shift 75
	'&'  shift 76
	NE  shift 77
	'='  shift 78
	'<'  shift 79
	'>'  shift 80
	LE  shift 81
	GE  shift 82
	'+'  shift 83
	'-'  shift 84
	'*'  shift 85
	'/'  shift 86
	'%'  shift 87
	'^'  shift 88
	'('  shift 89
	.  error


state 160
	instr : IF expr THEN block ELSE block FI .  (40)

	.  reduce 40


state 161
	elif : ELIF expr THEN . block  (49)
	block : .  (52)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 33
	STOP  shift 34
	RETURN  shift 35
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	ELSE  reduce 52
	ELIF  reduce 52
	FI  reduce 52

	instr  goto 45
	instrterm  goto 46
	block  goto 164
	instrs  goto 48
	lvalue  goto 49
	expr  goto 50


state 162
	instr : IF expr THEN block elifs ELSE block . FI  (38)

	FI  shift 165
	.  error


state 163
	instr : FOR expr UNTIL expr STEP expr DO . block DONE  (41)
	block : .  (52)

	INTEGER  shift 28
	ID  shift 29
	STR  shift 30
	IF  shift 31
	FOR  shift 32
	REPEAT  shift 33
	STOP  shift 34
	RETURN  shift 35
	'&'  shift 36
	'~'  shift 37
	'-'  shift 38
	'?'  shift 39
	'('  shift 40
	DONE  reduce 52

	instr  goto 45
	instrterm  goto 46
	block  goto 166
	instrs  goto 48
	lvalue  goto 49
	expr  goto 50


state 164
	elif : ELIF expr THEN block .  (49)

	.  reduce 49


state 165
	instr : IF expr THEN block elifs ELSE block FI .  (38)

	.  reduce 38


state 166
	instr : FOR expr UNTIL expr STEP expr DO block . DONE  (41)

	DONE  shift 167
	.  error


state 167
	instr : FOR expr UNTIL expr STEP expr DO block DONE .  (41)

	.  reduce 41


74 terminals, 33 nonterminals
96 grammar rules, 168 states

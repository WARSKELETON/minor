   0  $accept : file $end

   1  file : program
   2       | module

   3  program : PROGRAM decls START body END

   4  module : MODULE decls END

   5  decls :
   6        | decl
   7        | decls ';' decl

   8  decl : func
   9       | qualifier CONST var ATTR literal
  10       | qualifier CONST var
  11       | qualifier var ATTR literal
  12       | qualifier var

  13  func : FUNCTION qualifier functype ID vars funcend

  14  funcend : DONE
  15          | DO body

  16  functype : type
  17           | VOID

  18  qualifier :
  19            | PUBLIC
  20            | FORWARD

  21  vars :
  22       | var
  23       | vars ';' var

  24  var : type ID

  25  type : NUMBER
  26       | ARRAY
  27       | STRING

  28  body : instrs

  29  instr : IF expr THEN instrs FI
  30        | IF expr THEN instrs elifs ELSE instrs FI
  31        | IF expr THEN instrs elifs FI
  32        | IF expr THEN instrs ELSE instrs FI
  33        | FOR expr UNTIL expr STEP expr DO instrs DONE
  34        | expr ';'
  35        | expr '!'
  36        | REPEAT
  37        | STOP
  38        | RETURN

  39  elif : ELIF expr THEN instrs

  40  elifs : elif
  41        | elifs elif

  42  instrs :
  43         | instrs instr

  44  expr : '(' expr ')'
  45       | ID
  46       | literal
  47       | '-' expr
  48       | '&' expr
  49       | expr '+' expr
  50       | expr '-' expr
  51       | expr '*' expr
  52       | expr '/' expr
  53       | expr '%' expr
  54       | expr '<' expr
  55       | expr '>' expr
  56       | expr GE expr
  57       | expr LE expr
  58       | expr NE expr
  59       | expr '=' expr

  60  literal : INTEGER
  61          | STR

state 0
	$accept : . file $end  (0)

	PROGRAM  shift 1
	MODULE  shift 2
	.  error

	file  goto 3
	program  goto 4
	module  goto 5


state 1
	program : PROGRAM . decls START body END  (3)
	decls : .  (5)
	qualifier : .  (18)

	FUNCTION  shift 6
	PUBLIC  shift 7
	FORWARD  shift 8
	START  reduce 5
	NUMBER  reduce 18
	ARRAY  reduce 18
	STRING  reduce 18
	CONST  reduce 18
	';'  reduce 5

	decls  goto 9
	decl  goto 10
	func  goto 11
	qualifier  goto 12


state 2
	module : MODULE . decls END  (4)
	decls : .  (5)
	qualifier : .  (18)

	FUNCTION  shift 6
	PUBLIC  shift 7
	FORWARD  shift 8
	END  reduce 5
	NUMBER  reduce 18
	ARRAY  reduce 18
	STRING  reduce 18
	CONST  reduce 18
	';'  reduce 5

	decls  goto 13
	decl  goto 10
	func  goto 11
	qualifier  goto 12


state 3
	$accept : file . $end  (0)

	$end  accept


state 4
	file : program .  (1)

	.  reduce 1


state 5
	file : module .  (2)

	.  reduce 2


state 6
	func : FUNCTION . qualifier functype ID vars funcend  (13)
	qualifier : .  (18)

	PUBLIC  shift 7
	FORWARD  shift 8
	NUMBER  reduce 18
	ARRAY  reduce 18
	VOID  reduce 18
	STRING  reduce 18

	qualifier  goto 14


state 7
	qualifier : PUBLIC .  (19)

	.  reduce 19


state 8
	qualifier : FORWARD .  (20)

	.  reduce 20


state 9
	program : PROGRAM decls . START body END  (3)
	decls : decls . ';' decl  (7)

	START  shift 15
	';'  shift 16
	.  error


state 10
	decls : decl .  (6)

	.  reduce 6


state 11
	decl : func .  (8)

	.  reduce 8


state 12
	decl : qualifier . CONST var ATTR literal  (9)
	decl : qualifier . CONST var  (10)
	decl : qualifier . var ATTR literal  (11)
	decl : qualifier . var  (12)

	NUMBER  shift 17
	ARRAY  shift 18
	STRING  shift 19
	CONST  shift 20
	.  error

	var  goto 21
	type  goto 22


state 13
	module : MODULE decls . END  (4)
	decls : decls . ';' decl  (7)

	END  shift 23
	';'  shift 16
	.  error


state 14
	func : FUNCTION qualifier . functype ID vars funcend  (13)

	NUMBER  shift 17
	ARRAY  shift 18
	VOID  shift 24
	STRING  shift 19
	.  error

	functype  goto 25
	type  goto 26


state 15
	program : PROGRAM decls START . body END  (3)
	instrs : .  (42)

	.  reduce 42

	body  goto 27
	instrs  goto 28


state 16
	decls : decls ';' . decl  (7)
	qualifier : .  (18)

	FUNCTION  shift 6
	PUBLIC  shift 7
	FORWARD  shift 8
	NUMBER  reduce 18
	ARRAY  reduce 18
	STRING  reduce 18
	CONST  reduce 18

	decl  goto 29
	func  goto 11
	qualifier  goto 12


state 17
	type : NUMBER .  (25)

	.  reduce 25


state 18
	type : ARRAY .  (26)

	.  reduce 26


state 19
	type : STRING .  (27)

	.  reduce 27


state 20
	decl : qualifier CONST . var ATTR literal  (9)
	decl : qualifier CONST . var  (10)

	NUMBER  shift 17
	ARRAY  shift 18
	STRING  shift 19
	.  error

	var  goto 30
	type  goto 22


state 21
	decl : qualifier var . ATTR literal  (11)
	decl : qualifier var .  (12)

	ATTR  shift 31
	START  reduce 12
	END  reduce 12
	';'  reduce 12


state 22
	var : type . ID  (24)

	ID  shift 32
	.  error


state 23
	module : MODULE decls END .  (4)

	.  reduce 4


state 24
	functype : VOID .  (17)

	.  reduce 17


state 25
	func : FUNCTION qualifier functype . ID vars funcend  (13)

	ID  shift 33
	.  error


state 26
	functype : type .  (16)

	.  reduce 16


state 27
	program : PROGRAM decls START body . END  (3)

	END  shift 34
	.  error


state 28
	body : instrs .  (28)
	instrs : instrs . instr  (43)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	IF  shift 38
	FOR  shift 39
	REPEAT  shift 40
	STOP  shift 41
	RETURN  shift 42
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	START  reduce 28
	END  reduce 28
	';'  reduce 28

	literal  goto 46
	instr  goto 47
	expr  goto 48


state 29
	decls : decls ';' decl .  (7)

	.  reduce 7


state 30
	decl : qualifier CONST var . ATTR literal  (9)
	decl : qualifier CONST var .  (10)

	ATTR  shift 49
	START  reduce 10
	END  reduce 10
	';'  reduce 10


state 31
	decl : qualifier var ATTR . literal  (11)

	INTEGER  shift 35
	STR  shift 37
	.  error

	literal  goto 50


state 32
	var : type ID .  (24)

	.  reduce 24


state 33
	func : FUNCTION qualifier functype ID . vars funcend  (13)
	vars : .  (21)

	NUMBER  shift 17
	ARRAY  shift 18
	STRING  shift 19
	DONE  reduce 21
	DO  reduce 21
	';'  reduce 21

	var  goto 51
	vars  goto 52
	type  goto 22


state 34
	program : PROGRAM decls START body END .  (3)

	.  reduce 3


state 35
	literal : INTEGER .  (60)

	.  reduce 60


state 36
	expr : ID .  (45)

	.  reduce 45


state 37
	literal : STR .  (61)

	.  reduce 61


state 38
	instr : IF . expr THEN instrs FI  (29)
	instr : IF . expr THEN instrs elifs ELSE instrs FI  (30)
	instr : IF . expr THEN instrs elifs FI  (31)
	instr : IF . expr THEN instrs ELSE instrs FI  (32)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 53


state 39
	instr : FOR . expr UNTIL expr STEP expr DO instrs DONE  (33)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 54


state 40
	instr : REPEAT .  (36)

	.  reduce 36


state 41
	instr : STOP .  (37)

	.  reduce 37


state 42
	instr : RETURN .  (38)

	.  reduce 38


state 43
	expr : '(' . expr ')'  (44)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 55


state 44
	expr : '-' . expr  (47)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 56


state 45
	expr : '&' . expr  (48)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 57


state 46
	expr : literal .  (46)

	.  reduce 46


state 47
	instrs : instrs instr .  (43)

	.  reduce 43


state 48
	instr : expr . ';'  (34)
	instr : expr . '!'  (35)
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	'*'  shift 58
	'/'  shift 59
	'%'  shift 60
	'+'  shift 61
	'-'  shift 62
	'<'  shift 63
	'>'  shift 64
	LE  shift 65
	GE  shift 66
	NE  shift 67
	'='  shift 68
	';'  shift 69
	'!'  shift 70
	.  error


state 49
	decl : qualifier CONST var ATTR . literal  (9)

	INTEGER  shift 35
	STR  shift 37
	.  error

	literal  goto 71


state 50
	decl : qualifier var ATTR literal .  (11)

	.  reduce 11


state 51
	vars : var .  (22)

	.  reduce 22


state 52
	func : FUNCTION qualifier functype ID vars . funcend  (13)
	vars : vars . ';' var  (23)

	DONE  shift 72
	DO  shift 73
	';'  shift 74
	.  error

	funcend  goto 75


state 53
	instr : IF expr . THEN instrs FI  (29)
	instr : IF expr . THEN instrs elifs ELSE instrs FI  (30)
	instr : IF expr . THEN instrs elifs FI  (31)
	instr : IF expr . THEN instrs ELSE instrs FI  (32)
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	THEN  shift 76
	'*'  shift 58
	'/'  shift 59
	'%'  shift 60
	'+'  shift 61
	'-'  shift 62
	'<'  shift 63
	'>'  shift 64
	LE  shift 65
	GE  shift 66
	NE  shift 67
	'='  shift 68
	.  error


state 54
	instr : FOR expr . UNTIL expr STEP expr DO instrs DONE  (33)
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	UNTIL  shift 77
	'*'  shift 58
	'/'  shift 59
	'%'  shift 60
	'+'  shift 61
	'-'  shift 62
	'<'  shift 63
	'>'  shift 64
	LE  shift 65
	GE  shift 66
	NE  shift 67
	'='  shift 68
	.  error


state 55
	expr : '(' expr . ')'  (44)
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	'*'  shift 58
	'/'  shift 59
	'%'  shift 60
	'+'  shift 61
	'-'  shift 62
	'<'  shift 63
	'>'  shift 64
	LE  shift 65
	GE  shift 66
	NE  shift 67
	'='  shift 68
	')'  shift 78
	.  error


state 56
	expr : '-' expr .  (47)
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	'*'  shift 58
	'/'  shift 59
	'%'  shift 60
	'+'  shift 61
	'-'  shift 62
	'<'  shift 63
	'>'  shift 64
	LE  shift 65
	GE  shift 66
	NE  shift 67
	'='  shift 68
	DO  reduce 47
	THEN  reduce 47
	UNTIL  reduce 47
	STEP  reduce 47
	';'  reduce 47
	'!'  reduce 47
	')'  reduce 47


state 57
	expr : '&' expr .  (48)
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	'*'  shift 58
	'/'  shift 59
	'%'  shift 60
	'+'  shift 61
	'-'  shift 62
	'<'  shift 63
	'>'  shift 64
	LE  shift 65
	GE  shift 66
	NE  shift 67
	'='  shift 68
	DO  reduce 48
	THEN  reduce 48
	UNTIL  reduce 48
	STEP  reduce 48
	';'  reduce 48
	'!'  reduce 48
	')'  reduce 48


state 58
	expr : expr '*' . expr  (51)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 79


state 59
	expr : expr '/' . expr  (52)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 80


state 60
	expr : expr '%' . expr  (53)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 81


state 61
	expr : expr '+' . expr  (49)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 82


state 62
	expr : expr '-' . expr  (50)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 83


state 63
	expr : expr '<' . expr  (54)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 84


state 64
	expr : expr '>' . expr  (55)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 85


state 65
	expr : expr LE . expr  (57)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 86


state 66
	expr : expr GE . expr  (56)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 87


state 67
	expr : expr NE . expr  (58)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 88


state 68
	expr : expr '=' . expr  (59)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 89


state 69
	instr : expr ';' .  (34)

	.  reduce 34


state 70
	instr : expr '!' .  (35)

	.  reduce 35


state 71
	decl : qualifier CONST var ATTR literal .  (9)

	.  reduce 9


state 72
	funcend : DONE .  (14)

	.  reduce 14


state 73
	funcend : DO . body  (15)
	instrs : .  (42)

	.  reduce 42

	body  goto 90
	instrs  goto 28


state 74
	vars : vars ';' . var  (23)

	NUMBER  shift 17
	ARRAY  shift 18
	STRING  shift 19
	.  error

	var  goto 91
	type  goto 22


state 75
	func : FUNCTION qualifier functype ID vars funcend .  (13)

	.  reduce 13


state 76
	instr : IF expr THEN . instrs FI  (29)
	instr : IF expr THEN . instrs elifs ELSE instrs FI  (30)
	instr : IF expr THEN . instrs elifs FI  (31)
	instr : IF expr THEN . instrs ELSE instrs FI  (32)
	instrs : .  (42)

	.  reduce 42

	instrs  goto 92


state 77
	instr : FOR expr UNTIL . expr STEP expr DO instrs DONE  (33)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 93


state 78
	expr : '(' expr ')' .  (44)

	.  reduce 44


state 79
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr '*' expr .  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	'+'  shift 61
	'-'  shift 62
	'<'  shift 63
	'>'  shift 64
	LE  shift 65
	GE  shift 66
	NE  shift 67
	'='  shift 68
	DO  reduce 51
	THEN  reduce 51
	UNTIL  reduce 51
	STEP  reduce 51
	'*'  reduce 51
	'/'  reduce 51
	'%'  reduce 51
	';'  reduce 51
	'!'  reduce 51
	')'  reduce 51


state 80
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr '/' expr .  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	'+'  shift 61
	'-'  shift 62
	'<'  shift 63
	'>'  shift 64
	LE  shift 65
	GE  shift 66
	NE  shift 67
	'='  shift 68
	DO  reduce 52
	THEN  reduce 52
	UNTIL  reduce 52
	STEP  reduce 52
	'*'  reduce 52
	'/'  reduce 52
	'%'  reduce 52
	';'  reduce 52
	'!'  reduce 52
	')'  reduce 52


state 81
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr '%' expr .  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	'+'  shift 61
	'-'  shift 62
	'<'  shift 63
	'>'  shift 64
	LE  shift 65
	GE  shift 66
	NE  shift 67
	'='  shift 68
	DO  reduce 53
	THEN  reduce 53
	UNTIL  reduce 53
	STEP  reduce 53
	'*'  reduce 53
	'/'  reduce 53
	'%'  reduce 53
	';'  reduce 53
	'!'  reduce 53
	')'  reduce 53


state 82
	expr : expr . '+' expr  (49)
	expr : expr '+' expr .  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	'<'  shift 63
	'>'  shift 64
	LE  shift 65
	GE  shift 66
	NE  shift 67
	'='  shift 68
	DO  reduce 49
	THEN  reduce 49
	UNTIL  reduce 49
	STEP  reduce 49
	'*'  reduce 49
	'/'  reduce 49
	'%'  reduce 49
	'+'  reduce 49
	'-'  reduce 49
	';'  reduce 49
	'!'  reduce 49
	')'  reduce 49


state 83
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr '-' expr .  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	'<'  shift 63
	'>'  shift 64
	LE  shift 65
	GE  shift 66
	NE  shift 67
	'='  shift 68
	DO  reduce 50
	THEN  reduce 50
	UNTIL  reduce 50
	STEP  reduce 50
	'*'  reduce 50
	'/'  reduce 50
	'%'  reduce 50
	'+'  reduce 50
	'-'  reduce 50
	';'  reduce 50
	'!'  reduce 50
	')'  reduce 50


state 84
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr '<' expr .  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	NE  shift 67
	'='  shift 68
	DO  reduce 54
	THEN  reduce 54
	UNTIL  reduce 54
	STEP  reduce 54
	'*'  reduce 54
	'/'  reduce 54
	'%'  reduce 54
	'+'  reduce 54
	'-'  reduce 54
	'<'  reduce 54
	'>'  reduce 54
	LE  reduce 54
	GE  reduce 54
	';'  reduce 54
	'!'  reduce 54
	')'  reduce 54


state 85
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr '>' expr .  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	NE  shift 67
	'='  shift 68
	DO  reduce 55
	THEN  reduce 55
	UNTIL  reduce 55
	STEP  reduce 55
	'*'  reduce 55
	'/'  reduce 55
	'%'  reduce 55
	'+'  reduce 55
	'-'  reduce 55
	'<'  reduce 55
	'>'  reduce 55
	LE  reduce 55
	GE  reduce 55
	';'  reduce 55
	'!'  reduce 55
	')'  reduce 55


state 86
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr LE expr .  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	NE  shift 67
	'='  shift 68
	DO  reduce 57
	THEN  reduce 57
	UNTIL  reduce 57
	STEP  reduce 57
	'*'  reduce 57
	'/'  reduce 57
	'%'  reduce 57
	'+'  reduce 57
	'-'  reduce 57
	'<'  reduce 57
	'>'  reduce 57
	LE  reduce 57
	GE  reduce 57
	';'  reduce 57
	'!'  reduce 57
	')'  reduce 57


state 87
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr GE expr .  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	NE  shift 67
	'='  shift 68
	DO  reduce 56
	THEN  reduce 56
	UNTIL  reduce 56
	STEP  reduce 56
	'*'  reduce 56
	'/'  reduce 56
	'%'  reduce 56
	'+'  reduce 56
	'-'  reduce 56
	'<'  reduce 56
	'>'  reduce 56
	LE  reduce 56
	GE  reduce 56
	';'  reduce 56
	'!'  reduce 56
	')'  reduce 56


state 88
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr NE expr .  (58)
	expr : expr . '=' expr  (59)

	.  reduce 58


state 89
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)
	expr : expr '=' expr .  (59)

	.  reduce 59


state 90
	funcend : DO body .  (15)

	.  reduce 15


state 91
	vars : vars ';' var .  (23)

	.  reduce 23


state 92
	instr : IF expr THEN instrs . FI  (29)
	instr : IF expr THEN instrs . elifs ELSE instrs FI  (30)
	instr : IF expr THEN instrs . elifs FI  (31)
	instr : IF expr THEN instrs . ELSE instrs FI  (32)
	instrs : instrs . instr  (43)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	IF  shift 38
	ELSE  shift 94
	ELIF  shift 95
	FI  shift 96
	FOR  shift 39
	REPEAT  shift 40
	STOP  shift 41
	RETURN  shift 42
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	instr  goto 47
	expr  goto 48
	elifs  goto 97
	elif  goto 98


state 93
	instr : FOR expr UNTIL expr . STEP expr DO instrs DONE  (33)
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	STEP  shift 99
	'*'  shift 58
	'/'  shift 59
	'%'  shift 60
	'+'  shift 61
	'-'  shift 62
	'<'  shift 63
	'>'  shift 64
	LE  shift 65
	GE  shift 66
	NE  shift 67
	'='  shift 68
	.  error


state 94
	instr : IF expr THEN instrs ELSE . instrs FI  (32)
	instrs : .  (42)

	.  reduce 42

	instrs  goto 100


state 95
	elif : ELIF . expr THEN instrs  (39)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 101


state 96
	instr : IF expr THEN instrs FI .  (29)

	.  reduce 29


state 97
	instr : IF expr THEN instrs elifs . ELSE instrs FI  (30)
	instr : IF expr THEN instrs elifs . FI  (31)
	elifs : elifs . elif  (41)

	ELSE  shift 102
	ELIF  shift 95
	FI  shift 103
	.  error

	elif  goto 104


state 98
	elifs : elif .  (40)

	.  reduce 40


state 99
	instr : FOR expr UNTIL expr STEP . expr DO instrs DONE  (33)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	expr  goto 105


state 100
	instr : IF expr THEN instrs ELSE instrs . FI  (32)
	instrs : instrs . instr  (43)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	IF  shift 38
	FI  shift 106
	FOR  shift 39
	REPEAT  shift 40
	STOP  shift 41
	RETURN  shift 42
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	instr  goto 47
	expr  goto 48


state 101
	elif : ELIF expr . THEN instrs  (39)
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	THEN  shift 107
	'*'  shift 58
	'/'  shift 59
	'%'  shift 60
	'+'  shift 61
	'-'  shift 62
	'<'  shift 63
	'>'  shift 64
	LE  shift 65
	GE  shift 66
	NE  shift 67
	'='  shift 68
	.  error


state 102
	instr : IF expr THEN instrs elifs ELSE . instrs FI  (30)
	instrs : .  (42)

	.  reduce 42

	instrs  goto 108


state 103
	instr : IF expr THEN instrs elifs FI .  (31)

	.  reduce 31


state 104
	elifs : elifs elif .  (41)

	.  reduce 41


state 105
	instr : FOR expr UNTIL expr STEP expr . DO instrs DONE  (33)
	expr : expr . '+' expr  (49)
	expr : expr . '-' expr  (50)
	expr : expr . '*' expr  (51)
	expr : expr . '/' expr  (52)
	expr : expr . '%' expr  (53)
	expr : expr . '<' expr  (54)
	expr : expr . '>' expr  (55)
	expr : expr . GE expr  (56)
	expr : expr . LE expr  (57)
	expr : expr . NE expr  (58)
	expr : expr . '=' expr  (59)

	DO  shift 109
	'*'  shift 58
	'/'  shift 59
	'%'  shift 60
	'+'  shift 61
	'-'  shift 62
	'<'  shift 63
	'>'  shift 64
	LE  shift 65
	GE  shift 66
	NE  shift 67
	'='  shift 68
	.  error


state 106
	instr : IF expr THEN instrs ELSE instrs FI .  (32)

	.  reduce 32


state 107
	elif : ELIF expr THEN . instrs  (39)
	instrs : .  (42)

	.  reduce 42

	instrs  goto 110


state 108
	instr : IF expr THEN instrs elifs ELSE instrs . FI  (30)
	instrs : instrs . instr  (43)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	IF  shift 38
	FI  shift 111
	FOR  shift 39
	REPEAT  shift 40
	STOP  shift 41
	RETURN  shift 42
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	instr  goto 47
	expr  goto 48


state 109
	instr : FOR expr UNTIL expr STEP expr DO . instrs DONE  (33)
	instrs : .  (42)

	.  reduce 42

	instrs  goto 112


state 110
	elif : ELIF expr THEN instrs .  (39)
	instrs : instrs . instr  (43)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	IF  shift 38
	FOR  shift 39
	REPEAT  shift 40
	STOP  shift 41
	RETURN  shift 42
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	ELSE  reduce 39
	ELIF  reduce 39
	FI  reduce 39

	literal  goto 46
	instr  goto 47
	expr  goto 48


state 111
	instr : IF expr THEN instrs elifs ELSE instrs FI .  (30)

	.  reduce 30


state 112
	instr : FOR expr UNTIL expr STEP expr DO instrs . DONE  (33)
	instrs : instrs . instr  (43)

	INTEGER  shift 35
	ID  shift 36
	STR  shift 37
	DONE  shift 113
	IF  shift 38
	FOR  shift 39
	REPEAT  shift 40
	STOP  shift 41
	RETURN  shift 42
	'('  shift 43
	'-'  shift 44
	'&'  shift 45
	.  error

	literal  goto 46
	instr  goto 47
	expr  goto 48


state 113
	instr : FOR expr UNTIL expr STEP expr DO instrs DONE .  (33)

	.  reduce 33


54 terminals, 20 nonterminals
62 grammar rules, 114 states

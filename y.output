   0  $accept : file $end

   1  file : program
   2       | module

   3  program : PROGRAM decls START bodyprincipal END
   4          | PROGRAM START bodyprincipal END

   5  module : MODULE decls END
   6         | MODULE END

   7  decls : decl
   8        | decls ';' decl

   9  decl : func
  10       | qualifier CONST var ATTR literal
  11       | qualifier var ATTR literal
  12       | qualifier var
  13       | qualifier CONST var
  14       | CONST var
  15       | CONST var ATTR literal
  16       | var
  17       | var ATTR literal

  18  $$1 :

  19  func : FUNCTION qualifier functype ID $$1 params funcend

  20  $$2 :

  21  func : FUNCTION functype ID $$2 params funcend

  22  $$3 :

  23  func : FUNCTION qualifier functype ID $$3 funcend

  24  $$4 :

  25  func : FUNCTION functype ID $$4 funcend

  26  funcend : DONE
  27          | DO body

  28  functype : type
  29           | VOID

  30  qualifier : PUBLIC
  31            | FORWARD

  32  params : param
  33         | params ';' param

  34  param : STRING ID
  35        | NUMBER ID
  36        | ARRAY ID '[' INTEGER ']'

  37  var : STRING ID
  38      | NUMBER ID
  39      | ARRAY ID '[' INTEGER ']'
  40      | ARRAY ID

  41  type : NUMBER
  42       | ARRAY
  43       | STRING

  44  bodyprincipal : bodyvars bodyinstrs
  45                | bodyinstrs

  46  body : bodyvars blockfunc
  47       | blockfunc

  48  bodyinstrs :
  49             | instrs

  50  bodyvars : var ';'
  51           | bodyvars var ';'

  52  instr : IF expr THEN block FI
  53        | IF expr THEN block elifs ELSE block FI
  54        | IF expr THEN block elifs FI
  55        | IF expr THEN block ELSE block FI

  56  $$5 :

  57  instr : FOR expr UNTIL expr STEP expr DO $$5 block DONE
  58        | expr ';'
  59        | expr '!'
  60        | lvalue '#' expr ';'

  61  instrterm : REPEAT
  62            | STOP
  63            | RETURN expr
  64            | RETURN

  65  elif : ELIF expr THEN block

  66  elifs : elif
  67        | elifs elif

  68  block :
  69        | instrterm
  70        | instrs
  71        | instrs instrterm

  72  blockfunc :
  73            | instrterm
  74            | instrs
  75            | instrs instrterm

  76  instrs : instr
  77         | instrs instr

  78  lvalue : ID
  79         | ID '[' expr ']'
  80         | string '[' expr ']'
  81         | ID '(' args ')' '[' expr ']'
  82         | ID '(' ')' '[' expr ']'

  83  expr : lvalue
  84       | '(' expr ')'
  85       | ID '(' args ')'
  86       | ID '(' ')'
  87       | string
  88       | integer
  89       | '-' expr
  90       | '&' lvalue
  91       | expr '^' expr
  92       | expr '+' expr
  93       | expr '-' expr
  94       | expr '*' expr
  95       | expr '/' expr
  96       | expr '%' expr
  97       | expr '<' expr
  98       | expr '>' expr
  99       | expr GE expr
 100       | expr LE expr
 101       | expr NE expr
 102       | expr '=' expr
 103       | lvalue ATTR expr
 104       | expr '&' expr
 105       | expr '|' expr
 106       | '~' expr
 107       | '?'

 108  literal : string
 109          | integerlist

 110  integer : INTEGER
 111          | CHAR

 112  string : integer integer
 113         | STR
 114         | string STR
 115         | string integer

 116  integerlist : INTEGER
 117              | integerlist ',' INTEGER

 118  args : expr
 119       | args ',' expr

state 0
	$accept : . file $end  (0)

	PROGRAM  shift 1
	MODULE  shift 2
	.  error

	file  goto 3
	program  goto 4
	module  goto 5


state 1
	program : PROGRAM . decls START bodyprincipal END  (3)
	program : PROGRAM . START bodyprincipal END  (4)

	START  shift 6
	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decls  goto 14
	decl  goto 15
	func  goto 16
	qualifier  goto 17
	var  goto 18


state 2
	module : MODULE . decls END  (5)
	module : MODULE . END  (6)

	END  shift 19
	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decls  goto 20
	decl  goto 15
	func  goto 16
	qualifier  goto 17
	var  goto 18


state 3
	$accept : file . $end  (0)

	$end  accept


state 4
	file : program .  (1)

	.  reduce 1


state 5
	file : module .  (2)

	.  reduce 2


state 6
	program : PROGRAM START . bodyprincipal END  (4)
	bodyinstrs : .  (48)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 25
	FOR  shift 26
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	END  reduce 48

	bodyprincipal  goto 32
	bodyinstrs  goto 33
	bodyvars  goto 34
	var  goto 35
	instr  goto 36
	instrs  goto 37
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41


state 7
	func : FUNCTION . qualifier functype ID $$1 params funcend  (19)
	func : FUNCTION . functype ID $$2 params funcend  (21)
	func : FUNCTION . qualifier functype ID $$3 funcend  (23)
	func : FUNCTION . functype ID $$4 funcend  (25)

	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 42
	ARRAY  shift 43
	VOID  shift 44
	STRING  shift 45
	.  error

	functype  goto 46
	qualifier  goto 47
	type  goto 48


state 8
	qualifier : PUBLIC .  (30)

	.  reduce 30


state 9
	qualifier : FORWARD .  (31)

	.  reduce 31


state 10
	var : NUMBER . ID  (38)

	ID  shift 49
	.  error


state 11
	var : ARRAY . ID '[' INTEGER ']'  (39)
	var : ARRAY . ID  (40)

	ID  shift 50
	.  error


state 12
	var : STRING . ID  (37)

	ID  shift 51
	.  error


state 13
	decl : CONST . var  (14)
	decl : CONST . var ATTR literal  (15)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	.  error

	var  goto 52


state 14
	program : PROGRAM decls . START bodyprincipal END  (3)
	decls : decls . ';' decl  (8)

	START  shift 53
	';'  shift 54
	.  error


state 15
	decls : decl .  (7)

	.  reduce 7


state 16
	decl : func .  (9)

	.  reduce 9


state 17
	decl : qualifier . CONST var ATTR literal  (10)
	decl : qualifier . var ATTR literal  (11)
	decl : qualifier . var  (12)
	decl : qualifier . CONST var  (13)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 55
	.  error

	var  goto 56


state 18
	decl : var .  (16)
	decl : var . ATTR literal  (17)

	ATTR  shift 57
	START  reduce 16
	END  reduce 16
	';'  reduce 16


state 19
	module : MODULE END .  (6)

	.  reduce 6


state 20
	module : MODULE decls . END  (5)
	decls : decls . ';' decl  (8)

	END  shift 58
	';'  shift 54
	.  error


state 21
	integer : INTEGER .  (110)

	.  reduce 110


state 22
	integer : CHAR .  (111)

	.  reduce 111


state 23
	lvalue : ID .  (78)
	lvalue : ID . '[' expr ']'  (79)
	lvalue : ID . '(' args ')' '[' expr ']'  (81)
	lvalue : ID . '(' ')' '[' expr ']'  (82)
	expr : ID . '(' args ')'  (85)
	expr : ID . '(' ')'  (86)

	'('  shift 59
	'['  shift 60
	START  reduce 78
	END  reduce 78
	DONE  reduce 78
	DO  reduce 78
	THEN  reduce 78
	ELSE  reduce 78
	ELIF  reduce 78
	FI  reduce 78
	UNTIL  reduce 78
	STEP  reduce 78
	ATTR  reduce 78
	'|'  reduce 78
	'&'  reduce 78
	NE  reduce 78
	'='  reduce 78
	'<'  reduce 78
	'>'  reduce 78
	LE  reduce 78
	GE  reduce 78
	'+'  reduce 78
	'-'  reduce 78
	'*'  reduce 78
	'/'  reduce 78
	'%'  reduce 78
	'^'  reduce 78
	';'  reduce 78
	']'  reduce 78
	'!'  reduce 78
	'#'  reduce 78
	')'  reduce 78
	','  reduce 78


state 24
	string : STR .  (113)

	.  reduce 113


state 25
	instr : IF . expr THEN block FI  (52)
	instr : IF . expr THEN block elifs ELSE block FI  (53)
	instr : IF . expr THEN block elifs FI  (54)
	instr : IF . expr THEN block ELSE block FI  (55)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 62
	integer  goto 40
	string  goto 41


state 26
	instr : FOR . expr UNTIL expr STEP expr DO $$5 block DONE  (57)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 63
	integer  goto 40
	string  goto 41


state 27
	expr : '&' . lvalue  (90)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 64
	STR  shift 24
	.  error

	lvalue  goto 65
	integer  goto 66
	string  goto 67


state 28
	expr : '~' . expr  (106)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 68
	integer  goto 40
	string  goto 41


state 29
	expr : '-' . expr  (89)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 69
	integer  goto 40
	string  goto 41


state 30
	expr : '?' .  (107)

	.  reduce 107


state 31
	expr : '(' . expr ')'  (84)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 70
	integer  goto 40
	string  goto 41


state 32
	program : PROGRAM START bodyprincipal . END  (4)

	END  shift 71
	.  error


state 33
	bodyprincipal : bodyinstrs .  (45)

	.  reduce 45


state 34
	bodyprincipal : bodyvars . bodyinstrs  (44)
	bodyvars : bodyvars . var ';'  (51)
	bodyinstrs : .  (48)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 25
	FOR  shift 26
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	END  reduce 48

	bodyinstrs  goto 72
	var  goto 73
	instr  goto 36
	instrs  goto 37
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41


state 35
	bodyvars : var . ';'  (50)

	';'  shift 74
	.  error


state 36
	instrs : instr .  (76)

	.  reduce 76


state 37
	bodyinstrs : instrs .  (49)
	instrs : instrs . instr  (77)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	END  reduce 49

	instr  goto 75
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41


state 38
	instr : lvalue . '#' expr ';'  (60)
	expr : lvalue .  (83)
	expr : lvalue . ATTR expr  (103)

	ATTR  shift 76
	'#'  shift 77
	'|'  reduce 83
	'&'  reduce 83
	NE  reduce 83
	'='  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	LE  reduce 83
	GE  reduce 83
	'+'  reduce 83
	'-'  reduce 83
	'*'  reduce 83
	'/'  reduce 83
	'%'  reduce 83
	'^'  reduce 83
	';'  reduce 83
	'!'  reduce 83


state 39
	instr : expr . ';'  (58)
	instr : expr . '!'  (59)
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	';'  shift 92
	'!'  shift 93
	.  error


state 40
	expr : integer .  (88)
	string : integer . integer  (112)

	INTEGER  shift 21
	CHAR  shift 22
	START  reduce 88
	END  reduce 88
	DONE  reduce 88
	DO  reduce 88
	THEN  reduce 88
	ELSE  reduce 88
	ELIF  reduce 88
	FI  reduce 88
	UNTIL  reduce 88
	STEP  reduce 88
	'|'  reduce 88
	'&'  reduce 88
	NE  reduce 88
	'='  reduce 88
	'<'  reduce 88
	'>'  reduce 88
	LE  reduce 88
	GE  reduce 88
	'+'  reduce 88
	'-'  reduce 88
	'*'  reduce 88
	'/'  reduce 88
	'%'  reduce 88
	'^'  reduce 88
	';'  reduce 88
	']'  reduce 88
	'!'  reduce 88
	')'  reduce 88
	','  reduce 88

	integer  goto 94


state 41
	lvalue : string . '[' expr ']'  (80)
	expr : string .  (87)
	string : string . STR  (114)
	string : string . integer  (115)

	INTEGER  shift 21
	CHAR  shift 22
	STR  shift 95
	'['  shift 96
	START  reduce 87
	END  reduce 87
	DONE  reduce 87
	DO  reduce 87
	THEN  reduce 87
	ELSE  reduce 87
	ELIF  reduce 87
	FI  reduce 87
	UNTIL  reduce 87
	STEP  reduce 87
	'|'  reduce 87
	'&'  reduce 87
	NE  reduce 87
	'='  reduce 87
	'<'  reduce 87
	'>'  reduce 87
	LE  reduce 87
	GE  reduce 87
	'+'  reduce 87
	'-'  reduce 87
	'*'  reduce 87
	'/'  reduce 87
	'%'  reduce 87
	'^'  reduce 87
	';'  reduce 87
	']'  reduce 87
	'!'  reduce 87
	')'  reduce 87
	','  reduce 87

	integer  goto 97


state 42
	type : NUMBER .  (41)

	.  reduce 41


state 43
	type : ARRAY .  (42)

	.  reduce 42


state 44
	functype : VOID .  (29)

	.  reduce 29


state 45
	type : STRING .  (43)

	.  reduce 43


state 46
	func : FUNCTION functype . ID $$2 params funcend  (21)
	func : FUNCTION functype . ID $$4 funcend  (25)

	ID  shift 98
	.  error


state 47
	func : FUNCTION qualifier . functype ID $$1 params funcend  (19)
	func : FUNCTION qualifier . functype ID $$3 funcend  (23)

	NUMBER  shift 42
	ARRAY  shift 43
	VOID  shift 44
	STRING  shift 45
	.  error

	functype  goto 99
	type  goto 48


state 48
	functype : type .  (28)

	.  reduce 28


state 49
	var : NUMBER ID .  (38)

	.  reduce 38


state 50
	var : ARRAY ID . '[' INTEGER ']'  (39)
	var : ARRAY ID .  (40)

	'['  shift 100
	START  reduce 40
	END  reduce 40
	ATTR  reduce 40
	';'  reduce 40


state 51
	var : STRING ID .  (37)

	.  reduce 37


state 52
	decl : CONST var .  (14)
	decl : CONST var . ATTR literal  (15)

	ATTR  shift 101
	START  reduce 14
	END  reduce 14
	';'  reduce 14


state 53
	program : PROGRAM decls START . bodyprincipal END  (3)
	bodyinstrs : .  (48)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 25
	FOR  shift 26
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	END  reduce 48

	bodyprincipal  goto 102
	bodyinstrs  goto 33
	bodyvars  goto 34
	var  goto 35
	instr  goto 36
	instrs  goto 37
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41


state 54
	decls : decls ';' . decl  (8)

	FUNCTION  shift 7
	PUBLIC  shift 8
	FORWARD  shift 9
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	CONST  shift 13
	.  error

	decl  goto 103
	func  goto 16
	qualifier  goto 17
	var  goto 18


state 55
	decl : qualifier CONST . var ATTR literal  (10)
	decl : qualifier CONST . var  (13)

	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	.  error

	var  goto 104


state 56
	decl : qualifier var . ATTR literal  (11)
	decl : qualifier var .  (12)

	ATTR  shift 105
	START  reduce 12
	END  reduce 12
	';'  reduce 12


state 57
	decl : var ATTR . literal  (17)

	INTEGER  shift 106
	CHAR  shift 22
	STR  shift 24
	.  error

	literal  goto 107
	integer  goto 66
	integerlist  goto 108
	string  goto 109


state 58
	module : MODULE decls END .  (5)

	.  reduce 5


state 59
	lvalue : ID '(' . args ')' '[' expr ']'  (81)
	lvalue : ID '(' . ')' '[' expr ']'  (82)
	expr : ID '(' . args ')'  (85)
	expr : ID '(' . ')'  (86)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	')'  shift 110
	.  error

	lvalue  goto 61
	expr  goto 111
	integer  goto 40
	string  goto 41
	args  goto 112


state 60
	lvalue : ID '[' . expr ']'  (79)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 113
	integer  goto 40
	string  goto 41


state 61
	expr : lvalue .  (83)
	expr : lvalue . ATTR expr  (103)

	ATTR  shift 76
	START  reduce 83
	END  reduce 83
	DONE  reduce 83
	DO  reduce 83
	THEN  reduce 83
	ELSE  reduce 83
	ELIF  reduce 83
	FI  reduce 83
	UNTIL  reduce 83
	STEP  reduce 83
	'|'  reduce 83
	'&'  reduce 83
	NE  reduce 83
	'='  reduce 83
	'<'  reduce 83
	'>'  reduce 83
	LE  reduce 83
	GE  reduce 83
	'+'  reduce 83
	'-'  reduce 83
	'*'  reduce 83
	'/'  reduce 83
	'%'  reduce 83
	'^'  reduce 83
	';'  reduce 83
	']'  reduce 83
	'!'  reduce 83
	')'  reduce 83
	','  reduce 83


state 62
	instr : IF expr . THEN block FI  (52)
	instr : IF expr . THEN block elifs ELSE block FI  (53)
	instr : IF expr . THEN block elifs FI  (54)
	instr : IF expr . THEN block ELSE block FI  (55)
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	THEN  shift 114
	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	.  error


state 63
	instr : FOR expr . UNTIL expr STEP expr DO $$5 block DONE  (57)
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	UNTIL  shift 115
	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	.  error


state 64
	lvalue : ID .  (78)
	lvalue : ID . '[' expr ']'  (79)
	lvalue : ID . '(' args ')' '[' expr ']'  (81)
	lvalue : ID . '(' ')' '[' expr ']'  (82)

	'('  shift 116
	'['  shift 60
	START  reduce 78
	END  reduce 78
	DONE  reduce 78
	DO  reduce 78
	THEN  reduce 78
	ELSE  reduce 78
	ELIF  reduce 78
	FI  reduce 78
	UNTIL  reduce 78
	STEP  reduce 78
	'|'  reduce 78
	'&'  reduce 78
	NE  reduce 78
	'='  reduce 78
	'<'  reduce 78
	'>'  reduce 78
	LE  reduce 78
	GE  reduce 78
	'+'  reduce 78
	'-'  reduce 78
	'*'  reduce 78
	'/'  reduce 78
	'%'  reduce 78
	'^'  reduce 78
	';'  reduce 78
	']'  reduce 78
	'!'  reduce 78
	')'  reduce 78
	','  reduce 78


state 65
	expr : '&' lvalue .  (90)

	.  reduce 90


state 66
	string : integer . integer  (112)

	INTEGER  shift 21
	CHAR  shift 22
	.  error

	integer  goto 94


state 67
	lvalue : string . '[' expr ']'  (80)
	string : string . STR  (114)
	string : string . integer  (115)

	INTEGER  shift 21
	CHAR  shift 22
	STR  shift 95
	'['  shift 96
	.  error

	integer  goto 97


state 68
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)
	expr : '~' expr .  (106)

	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 106
	END  reduce 106
	DONE  reduce 106
	DO  reduce 106
	THEN  reduce 106
	ELSE  reduce 106
	ELIF  reduce 106
	FI  reduce 106
	UNTIL  reduce 106
	STEP  reduce 106
	'|'  reduce 106
	'&'  reduce 106
	';'  reduce 106
	']'  reduce 106
	'!'  reduce 106
	')'  reduce 106
	','  reduce 106


state 69
	expr : '-' expr .  (89)
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	.  reduce 89


state 70
	expr : '(' expr . ')'  (84)
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	')'  shift 117
	.  error


state 71
	program : PROGRAM START bodyprincipal END .  (4)

	.  reduce 4


state 72
	bodyprincipal : bodyvars bodyinstrs .  (44)

	.  reduce 44


state 73
	bodyvars : bodyvars var . ';'  (51)

	';'  shift 118
	.  error


state 74
	bodyvars : var ';' .  (50)

	.  reduce 50


state 75
	instrs : instrs instr .  (77)

	.  reduce 77


state 76
	expr : lvalue ATTR . expr  (103)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 119
	integer  goto 40
	string  goto 41


state 77
	instr : lvalue '#' . expr ';'  (60)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 120
	integer  goto 40
	string  goto 41


state 78
	expr : expr '|' . expr  (105)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 121
	integer  goto 40
	string  goto 41


state 79
	expr : expr '&' . expr  (104)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 122
	integer  goto 40
	string  goto 41


state 80
	expr : expr NE . expr  (101)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 123
	integer  goto 40
	string  goto 41


state 81
	expr : expr '=' . expr  (102)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 124
	integer  goto 40
	string  goto 41


state 82
	expr : expr '<' . expr  (97)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 125
	integer  goto 40
	string  goto 41


state 83
	expr : expr '>' . expr  (98)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 126
	integer  goto 40
	string  goto 41


state 84
	expr : expr LE . expr  (100)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 127
	integer  goto 40
	string  goto 41


state 85
	expr : expr GE . expr  (99)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 128
	integer  goto 40
	string  goto 41


state 86
	expr : expr '+' . expr  (92)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 129
	integer  goto 40
	string  goto 41


state 87
	expr : expr '-' . expr  (93)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 130
	integer  goto 40
	string  goto 41


state 88
	expr : expr '*' . expr  (94)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 131
	integer  goto 40
	string  goto 41


state 89
	expr : expr '/' . expr  (95)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 132
	integer  goto 40
	string  goto 41


state 90
	expr : expr '%' . expr  (96)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 133
	integer  goto 40
	string  goto 41


state 91
	expr : expr '^' . expr  (91)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 134
	integer  goto 40
	string  goto 41


state 92
	instr : expr ';' .  (58)

	.  reduce 58


state 93
	instr : expr '!' .  (59)

	.  reduce 59


state 94
	string : integer integer .  (112)

	.  reduce 112


state 95
	string : string STR .  (114)

	.  reduce 114


state 96
	lvalue : string '[' . expr ']'  (80)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 135
	integer  goto 40
	string  goto 41


state 97
	string : string integer .  (115)

	.  reduce 115


state 98
	func : FUNCTION functype ID . $$2 params funcend  (21)
	func : FUNCTION functype ID . $$4 funcend  (25)
	$$2 : .  (20)
	$$4 : .  (24)

	NUMBER  reduce 20
	ARRAY  reduce 20
	STRING  reduce 20
	DONE  reduce 24
	DO  reduce 24

	$$2  goto 136
	$$4  goto 137


state 99
	func : FUNCTION qualifier functype . ID $$1 params funcend  (19)
	func : FUNCTION qualifier functype . ID $$3 funcend  (23)

	ID  shift 138
	.  error


state 100
	var : ARRAY ID '[' . INTEGER ']'  (39)

	INTEGER  shift 139
	.  error


state 101
	decl : CONST var ATTR . literal  (15)

	INTEGER  shift 106
	CHAR  shift 22
	STR  shift 24
	.  error

	literal  goto 140
	integer  goto 66
	integerlist  goto 108
	string  goto 109


state 102
	program : PROGRAM decls START bodyprincipal . END  (3)

	END  shift 141
	.  error


state 103
	decls : decls ';' decl .  (8)

	.  reduce 8


state 104
	decl : qualifier CONST var . ATTR literal  (10)
	decl : qualifier CONST var .  (13)

	ATTR  shift 142
	START  reduce 13
	END  reduce 13
	';'  reduce 13


state 105
	decl : qualifier var ATTR . literal  (11)

	INTEGER  shift 106
	CHAR  shift 22
	STR  shift 24
	.  error

	literal  goto 143
	integer  goto 66
	integerlist  goto 108
	string  goto 109


state 106
	integer : INTEGER .  (110)
	integerlist : INTEGER .  (116)

	INTEGER  reduce 110
	CHAR  reduce 110
	START  reduce 116
	END  reduce 116
	';'  reduce 116
	','  reduce 116


state 107
	decl : var ATTR literal .  (17)

	.  reduce 17


state 108
	literal : integerlist .  (109)
	integerlist : integerlist . ',' INTEGER  (117)

	','  shift 144
	START  reduce 109
	END  reduce 109
	';'  reduce 109


state 109
	literal : string .  (108)
	string : string . STR  (114)
	string : string . integer  (115)

	INTEGER  shift 21
	CHAR  shift 22
	STR  shift 95
	START  reduce 108
	END  reduce 108
	';'  reduce 108

	integer  goto 97


state 110
	lvalue : ID '(' ')' . '[' expr ']'  (82)
	expr : ID '(' ')' .  (86)

	'['  shift 145
	START  reduce 86
	END  reduce 86
	DONE  reduce 86
	DO  reduce 86
	THEN  reduce 86
	ELSE  reduce 86
	ELIF  reduce 86
	FI  reduce 86
	UNTIL  reduce 86
	STEP  reduce 86
	'|'  reduce 86
	'&'  reduce 86
	NE  reduce 86
	'='  reduce 86
	'<'  reduce 86
	'>'  reduce 86
	LE  reduce 86
	GE  reduce 86
	'+'  reduce 86
	'-'  reduce 86
	'*'  reduce 86
	'/'  reduce 86
	'%'  reduce 86
	'^'  reduce 86
	';'  reduce 86
	']'  reduce 86
	'!'  reduce 86
	')'  reduce 86
	','  reduce 86


state 111
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)
	args : expr .  (118)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	')'  reduce 118
	','  reduce 118


state 112
	lvalue : ID '(' args . ')' '[' expr ']'  (81)
	expr : ID '(' args . ')'  (85)
	args : args . ',' expr  (119)

	')'  shift 146
	','  shift 147
	.  error


state 113
	lvalue : ID '[' expr . ']'  (79)
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	']'  shift 148
	.  error


state 114
	instr : IF expr THEN . block FI  (52)
	instr : IF expr THEN . block elifs ELSE block FI  (53)
	instr : IF expr THEN . block elifs FI  (54)
	instr : IF expr THEN . block ELSE block FI  (55)
	block : .  (68)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 149
	STOP  shift 150
	RETURN  shift 151
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	ELSE  reduce 68
	ELIF  reduce 68
	FI  reduce 68

	instr  goto 36
	instrterm  goto 152
	block  goto 153
	instrs  goto 154
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41


state 115
	instr : FOR expr UNTIL . expr STEP expr DO $$5 block DONE  (57)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 155
	integer  goto 40
	string  goto 41


state 116
	lvalue : ID '(' . args ')' '[' expr ']'  (81)
	lvalue : ID '(' . ')' '[' expr ']'  (82)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	')'  shift 156
	.  error

	lvalue  goto 61
	expr  goto 111
	integer  goto 40
	string  goto 41
	args  goto 157


state 117
	expr : '(' expr ')' .  (84)

	.  reduce 84


state 118
	bodyvars : bodyvars var ';' .  (51)

	.  reduce 51


state 119
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : lvalue ATTR expr .  (103)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 103
	END  reduce 103
	DONE  reduce 103
	DO  reduce 103
	THEN  reduce 103
	ELSE  reduce 103
	ELIF  reduce 103
	FI  reduce 103
	UNTIL  reduce 103
	STEP  reduce 103
	';'  reduce 103
	']'  reduce 103
	'!'  reduce 103
	')'  reduce 103
	','  reduce 103


state 120
	instr : lvalue '#' expr . ';'  (60)
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	';'  shift 158
	.  error


state 121
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)
	expr : expr '|' expr .  (105)

	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 105
	END  reduce 105
	DONE  reduce 105
	DO  reduce 105
	THEN  reduce 105
	ELSE  reduce 105
	ELIF  reduce 105
	FI  reduce 105
	UNTIL  reduce 105
	STEP  reduce 105
	'|'  reduce 105
	';'  reduce 105
	']'  reduce 105
	'!'  reduce 105
	')'  reduce 105
	','  reduce 105


state 122
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr '&' expr .  (104)
	expr : expr . '|' expr  (105)

	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 104
	END  reduce 104
	DONE  reduce 104
	DO  reduce 104
	THEN  reduce 104
	ELSE  reduce 104
	ELIF  reduce 104
	FI  reduce 104
	UNTIL  reduce 104
	STEP  reduce 104
	'|'  reduce 104
	'&'  reduce 104
	';'  reduce 104
	']'  reduce 104
	'!'  reduce 104
	')'  reduce 104
	','  reduce 104


state 123
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr NE expr .  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 101
	END  reduce 101
	DONE  reduce 101
	DO  reduce 101
	THEN  reduce 101
	ELSE  reduce 101
	ELIF  reduce 101
	FI  reduce 101
	UNTIL  reduce 101
	STEP  reduce 101
	'|'  reduce 101
	'&'  reduce 101
	NE  reduce 101
	'='  reduce 101
	';'  reduce 101
	']'  reduce 101
	'!'  reduce 101
	')'  reduce 101
	','  reduce 101


state 124
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr '=' expr .  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 102
	END  reduce 102
	DONE  reduce 102
	DO  reduce 102
	THEN  reduce 102
	ELSE  reduce 102
	ELIF  reduce 102
	FI  reduce 102
	UNTIL  reduce 102
	STEP  reduce 102
	'|'  reduce 102
	'&'  reduce 102
	NE  reduce 102
	'='  reduce 102
	';'  reduce 102
	']'  reduce 102
	'!'  reduce 102
	')'  reduce 102
	','  reduce 102


state 125
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr '<' expr .  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 97
	END  reduce 97
	DONE  reduce 97
	DO  reduce 97
	THEN  reduce 97
	ELSE  reduce 97
	ELIF  reduce 97
	FI  reduce 97
	UNTIL  reduce 97
	STEP  reduce 97
	'|'  reduce 97
	'&'  reduce 97
	NE  reduce 97
	'='  reduce 97
	'<'  reduce 97
	'>'  reduce 97
	LE  reduce 97
	GE  reduce 97
	';'  reduce 97
	']'  reduce 97
	'!'  reduce 97
	')'  reduce 97
	','  reduce 97


state 126
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr '>' expr .  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 98
	END  reduce 98
	DONE  reduce 98
	DO  reduce 98
	THEN  reduce 98
	ELSE  reduce 98
	ELIF  reduce 98
	FI  reduce 98
	UNTIL  reduce 98
	STEP  reduce 98
	'|'  reduce 98
	'&'  reduce 98
	NE  reduce 98
	'='  reduce 98
	'<'  reduce 98
	'>'  reduce 98
	LE  reduce 98
	GE  reduce 98
	';'  reduce 98
	']'  reduce 98
	'!'  reduce 98
	')'  reduce 98
	','  reduce 98


state 127
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr LE expr .  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 100
	END  reduce 100
	DONE  reduce 100
	DO  reduce 100
	THEN  reduce 100
	ELSE  reduce 100
	ELIF  reduce 100
	FI  reduce 100
	UNTIL  reduce 100
	STEP  reduce 100
	'|'  reduce 100
	'&'  reduce 100
	NE  reduce 100
	'='  reduce 100
	'<'  reduce 100
	'>'  reduce 100
	LE  reduce 100
	GE  reduce 100
	';'  reduce 100
	']'  reduce 100
	'!'  reduce 100
	')'  reduce 100
	','  reduce 100


state 128
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr GE expr .  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 99
	END  reduce 99
	DONE  reduce 99
	DO  reduce 99
	THEN  reduce 99
	ELSE  reduce 99
	ELIF  reduce 99
	FI  reduce 99
	UNTIL  reduce 99
	STEP  reduce 99
	'|'  reduce 99
	'&'  reduce 99
	NE  reduce 99
	'='  reduce 99
	'<'  reduce 99
	'>'  reduce 99
	LE  reduce 99
	GE  reduce 99
	';'  reduce 99
	']'  reduce 99
	'!'  reduce 99
	')'  reduce 99
	','  reduce 99


state 129
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr '+' expr .  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 92
	END  reduce 92
	DONE  reduce 92
	DO  reduce 92
	THEN  reduce 92
	ELSE  reduce 92
	ELIF  reduce 92
	FI  reduce 92
	UNTIL  reduce 92
	STEP  reduce 92
	'|'  reduce 92
	'&'  reduce 92
	NE  reduce 92
	'='  reduce 92
	'<'  reduce 92
	'>'  reduce 92
	LE  reduce 92
	GE  reduce 92
	'+'  reduce 92
	'-'  reduce 92
	';'  reduce 92
	']'  reduce 92
	'!'  reduce 92
	')'  reduce 92
	','  reduce 92


state 130
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr '-' expr .  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 93
	END  reduce 93
	DONE  reduce 93
	DO  reduce 93
	THEN  reduce 93
	ELSE  reduce 93
	ELIF  reduce 93
	FI  reduce 93
	UNTIL  reduce 93
	STEP  reduce 93
	'|'  reduce 93
	'&'  reduce 93
	NE  reduce 93
	'='  reduce 93
	'<'  reduce 93
	'>'  reduce 93
	LE  reduce 93
	GE  reduce 93
	'+'  reduce 93
	'-'  reduce 93
	';'  reduce 93
	']'  reduce 93
	'!'  reduce 93
	')'  reduce 93
	','  reduce 93


state 131
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr '*' expr .  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'^'  shift 91
	START  reduce 94
	END  reduce 94
	DONE  reduce 94
	DO  reduce 94
	THEN  reduce 94
	ELSE  reduce 94
	ELIF  reduce 94
	FI  reduce 94
	UNTIL  reduce 94
	STEP  reduce 94
	'|'  reduce 94
	'&'  reduce 94
	NE  reduce 94
	'='  reduce 94
	'<'  reduce 94
	'>'  reduce 94
	LE  reduce 94
	GE  reduce 94
	'+'  reduce 94
	'-'  reduce 94
	'*'  reduce 94
	'/'  reduce 94
	'%'  reduce 94
	';'  reduce 94
	']'  reduce 94
	'!'  reduce 94
	')'  reduce 94
	','  reduce 94


state 132
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr '/' expr .  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'^'  shift 91
	START  reduce 95
	END  reduce 95
	DONE  reduce 95
	DO  reduce 95
	THEN  reduce 95
	ELSE  reduce 95
	ELIF  reduce 95
	FI  reduce 95
	UNTIL  reduce 95
	STEP  reduce 95
	'|'  reduce 95
	'&'  reduce 95
	NE  reduce 95
	'='  reduce 95
	'<'  reduce 95
	'>'  reduce 95
	LE  reduce 95
	GE  reduce 95
	'+'  reduce 95
	'-'  reduce 95
	'*'  reduce 95
	'/'  reduce 95
	'%'  reduce 95
	';'  reduce 95
	']'  reduce 95
	'!'  reduce 95
	')'  reduce 95
	','  reduce 95


state 133
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr '%' expr .  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'^'  shift 91
	START  reduce 96
	END  reduce 96
	DONE  reduce 96
	DO  reduce 96
	THEN  reduce 96
	ELSE  reduce 96
	ELIF  reduce 96
	FI  reduce 96
	UNTIL  reduce 96
	STEP  reduce 96
	'|'  reduce 96
	'&'  reduce 96
	NE  reduce 96
	'='  reduce 96
	'<'  reduce 96
	'>'  reduce 96
	LE  reduce 96
	GE  reduce 96
	'+'  reduce 96
	'-'  reduce 96
	'*'  reduce 96
	'/'  reduce 96
	'%'  reduce 96
	';'  reduce 96
	']'  reduce 96
	'!'  reduce 96
	')'  reduce 96
	','  reduce 96


state 134
	expr : expr . '^' expr  (91)
	expr : expr '^' expr .  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'^'  shift 91
	START  reduce 91
	END  reduce 91
	DONE  reduce 91
	DO  reduce 91
	THEN  reduce 91
	ELSE  reduce 91
	ELIF  reduce 91
	FI  reduce 91
	UNTIL  reduce 91
	STEP  reduce 91
	'|'  reduce 91
	'&'  reduce 91
	NE  reduce 91
	'='  reduce 91
	'<'  reduce 91
	'>'  reduce 91
	LE  reduce 91
	GE  reduce 91
	'+'  reduce 91
	'-'  reduce 91
	'*'  reduce 91
	'/'  reduce 91
	'%'  reduce 91
	';'  reduce 91
	']'  reduce 91
	'!'  reduce 91
	')'  reduce 91
	','  reduce 91


state 135
	lvalue : string '[' expr . ']'  (80)
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	']'  shift 159
	.  error


state 136
	func : FUNCTION functype ID $$2 . params funcend  (21)

	NUMBER  shift 160
	ARRAY  shift 161
	STRING  shift 162
	.  error

	params  goto 163
	param  goto 164


state 137
	func : FUNCTION functype ID $$4 . funcend  (25)

	DONE  shift 165
	DO  shift 166
	.  error

	funcend  goto 167


state 138
	func : FUNCTION qualifier functype ID . $$1 params funcend  (19)
	func : FUNCTION qualifier functype ID . $$3 funcend  (23)
	$$1 : .  (18)
	$$3 : .  (22)

	NUMBER  reduce 18
	ARRAY  reduce 18
	STRING  reduce 18
	DONE  reduce 22
	DO  reduce 22

	$$1  goto 168
	$$3  goto 169


state 139
	var : ARRAY ID '[' INTEGER . ']'  (39)

	']'  shift 170
	.  error


state 140
	decl : CONST var ATTR literal .  (15)

	.  reduce 15


state 141
	program : PROGRAM decls START bodyprincipal END .  (3)

	.  reduce 3


state 142
	decl : qualifier CONST var ATTR . literal  (10)

	INTEGER  shift 106
	CHAR  shift 22
	STR  shift 24
	.  error

	literal  goto 171
	integer  goto 66
	integerlist  goto 108
	string  goto 109


state 143
	decl : qualifier var ATTR literal .  (11)

	.  reduce 11


state 144
	integerlist : integerlist ',' . INTEGER  (117)

	INTEGER  shift 172
	.  error


state 145
	lvalue : ID '(' ')' '[' . expr ']'  (82)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 173
	integer  goto 40
	string  goto 41


state 146
	lvalue : ID '(' args ')' . '[' expr ']'  (81)
	expr : ID '(' args ')' .  (85)

	'['  shift 174
	START  reduce 85
	END  reduce 85
	DONE  reduce 85
	DO  reduce 85
	THEN  reduce 85
	ELSE  reduce 85
	ELIF  reduce 85
	FI  reduce 85
	UNTIL  reduce 85
	STEP  reduce 85
	'|'  reduce 85
	'&'  reduce 85
	NE  reduce 85
	'='  reduce 85
	'<'  reduce 85
	'>'  reduce 85
	LE  reduce 85
	GE  reduce 85
	'+'  reduce 85
	'-'  reduce 85
	'*'  reduce 85
	'/'  reduce 85
	'%'  reduce 85
	'^'  reduce 85
	';'  reduce 85
	']'  reduce 85
	'!'  reduce 85
	')'  reduce 85
	','  reduce 85


state 147
	args : args ',' . expr  (119)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 175
	integer  goto 40
	string  goto 41


state 148
	lvalue : ID '[' expr ']' .  (79)

	.  reduce 79


state 149
	instrterm : REPEAT .  (61)

	.  reduce 61


state 150
	instrterm : STOP .  (62)

	.  reduce 62


state 151
	instrterm : RETURN . expr  (63)
	instrterm : RETURN .  (64)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	START  reduce 64
	END  reduce 64
	DONE  reduce 64
	ELSE  reduce 64
	ELIF  reduce 64
	FI  reduce 64
	';'  reduce 64

	lvalue  goto 61
	expr  goto 176
	integer  goto 40
	string  goto 41


state 152
	block : instrterm .  (69)

	.  reduce 69


state 153
	instr : IF expr THEN block . FI  (52)
	instr : IF expr THEN block . elifs ELSE block FI  (53)
	instr : IF expr THEN block . elifs FI  (54)
	instr : IF expr THEN block . ELSE block FI  (55)

	ELSE  shift 177
	ELIF  shift 178
	FI  shift 179
	.  error

	elif  goto 180
	elifs  goto 181


state 154
	block : instrs .  (70)
	block : instrs . instrterm  (71)
	instrs : instrs . instr  (77)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 149
	STOP  shift 150
	RETURN  shift 151
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	DONE  reduce 70
	ELSE  reduce 70
	ELIF  reduce 70
	FI  reduce 70

	instr  goto 75
	instrterm  goto 182
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41


state 155
	instr : FOR expr UNTIL expr . STEP expr DO $$5 block DONE  (57)
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	STEP  shift 183
	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	.  error


state 156
	lvalue : ID '(' ')' . '[' expr ']'  (82)

	'['  shift 145
	.  error


state 157
	lvalue : ID '(' args . ')' '[' expr ']'  (81)
	args : args . ',' expr  (119)

	')'  shift 184
	','  shift 147
	.  error


state 158
	instr : lvalue '#' expr ';' .  (60)

	.  reduce 60


state 159
	lvalue : string '[' expr ']' .  (80)

	.  reduce 80


state 160
	param : NUMBER . ID  (35)

	ID  shift 185
	.  error


state 161
	param : ARRAY . ID '[' INTEGER ']'  (36)

	ID  shift 186
	.  error


state 162
	param : STRING . ID  (34)

	ID  shift 187
	.  error


state 163
	func : FUNCTION functype ID $$2 params . funcend  (21)
	params : params . ';' param  (33)

	DONE  shift 165
	DO  shift 166
	';'  shift 188
	.  error

	funcend  goto 189


state 164
	params : param .  (32)

	.  reduce 32


state 165
	funcend : DONE .  (26)

	.  reduce 26


state 166
	funcend : DO . body  (27)
	blockfunc : .  (72)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 149
	STOP  shift 150
	RETURN  shift 151
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	START  reduce 72
	END  reduce 72
	';'  reduce 72

	body  goto 190
	bodyvars  goto 191
	var  goto 35
	instr  goto 36
	instrterm  goto 192
	blockfunc  goto 193
	instrs  goto 194
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41


state 167
	func : FUNCTION functype ID $$4 funcend .  (25)

	.  reduce 25


state 168
	func : FUNCTION qualifier functype ID $$1 . params funcend  (19)

	NUMBER  shift 160
	ARRAY  shift 161
	STRING  shift 162
	.  error

	params  goto 195
	param  goto 164


state 169
	func : FUNCTION qualifier functype ID $$3 . funcend  (23)

	DONE  shift 165
	DO  shift 166
	.  error

	funcend  goto 196


state 170
	var : ARRAY ID '[' INTEGER ']' .  (39)

	.  reduce 39


state 171
	decl : qualifier CONST var ATTR literal .  (10)

	.  reduce 10


state 172
	integerlist : integerlist ',' INTEGER .  (117)

	.  reduce 117


state 173
	lvalue : ID '(' ')' '[' expr . ']'  (82)
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	']'  shift 197
	.  error


state 174
	lvalue : ID '(' args ')' '[' . expr ']'  (81)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 198
	integer  goto 40
	string  goto 41


state 175
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)
	args : args ',' expr .  (119)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	')'  reduce 119
	','  reduce 119


state 176
	instrterm : RETURN expr .  (63)
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	START  reduce 63
	END  reduce 63
	DONE  reduce 63
	ELSE  reduce 63
	ELIF  reduce 63
	FI  reduce 63
	';'  reduce 63


state 177
	instr : IF expr THEN block ELSE . block FI  (55)
	block : .  (68)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 149
	STOP  shift 150
	RETURN  shift 151
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	FI  reduce 68

	instr  goto 36
	instrterm  goto 152
	block  goto 199
	instrs  goto 154
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41


state 178
	elif : ELIF . expr THEN block  (65)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 200
	integer  goto 40
	string  goto 41


state 179
	instr : IF expr THEN block FI .  (52)

	.  reduce 52


state 180
	elifs : elif .  (66)

	.  reduce 66


state 181
	instr : IF expr THEN block elifs . ELSE block FI  (53)
	instr : IF expr THEN block elifs . FI  (54)
	elifs : elifs . elif  (67)

	ELSE  shift 201
	ELIF  shift 178
	FI  shift 202
	.  error

	elif  goto 203


state 182
	block : instrs instrterm .  (71)

	.  reduce 71


state 183
	instr : FOR expr UNTIL expr STEP . expr DO $$5 block DONE  (57)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	.  error

	lvalue  goto 61
	expr  goto 204
	integer  goto 40
	string  goto 41


state 184
	lvalue : ID '(' args ')' . '[' expr ']'  (81)

	'['  shift 174
	.  error


state 185
	param : NUMBER ID .  (35)

	.  reduce 35


state 186
	param : ARRAY ID . '[' INTEGER ']'  (36)

	'['  shift 205
	.  error


state 187
	param : STRING ID .  (34)

	.  reduce 34


state 188
	params : params ';' . param  (33)

	NUMBER  shift 160
	ARRAY  shift 161
	STRING  shift 162
	.  error

	param  goto 206


state 189
	func : FUNCTION functype ID $$2 params funcend .  (21)

	.  reduce 21


state 190
	funcend : DO body .  (27)

	.  reduce 27


state 191
	body : bodyvars . blockfunc  (46)
	bodyvars : bodyvars . var ';'  (51)
	blockfunc : .  (72)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	NUMBER  shift 10
	ARRAY  shift 11
	STRING  shift 12
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 149
	STOP  shift 150
	RETURN  shift 151
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	START  reduce 72
	END  reduce 72
	';'  reduce 72

	var  goto 73
	instr  goto 36
	instrterm  goto 192
	blockfunc  goto 207
	instrs  goto 194
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41


state 192
	blockfunc : instrterm .  (73)

	.  reduce 73


state 193
	body : blockfunc .  (47)

	.  reduce 47


state 194
	blockfunc : instrs .  (74)
	blockfunc : instrs . instrterm  (75)
	instrs : instrs . instr  (77)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 149
	STOP  shift 150
	RETURN  shift 151
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	START  reduce 74
	END  reduce 74
	';'  reduce 74

	instr  goto 75
	instrterm  goto 208
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41


state 195
	func : FUNCTION qualifier functype ID $$1 params . funcend  (19)
	params : params . ';' param  (33)

	DONE  shift 165
	DO  shift 166
	';'  shift 188
	.  error

	funcend  goto 209


state 196
	func : FUNCTION qualifier functype ID $$3 funcend .  (23)

	.  reduce 23


state 197
	lvalue : ID '(' ')' '[' expr ']' .  (82)

	.  reduce 82


state 198
	lvalue : ID '(' args ')' '[' expr . ']'  (81)
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	']'  shift 210
	.  error


state 199
	instr : IF expr THEN block ELSE block . FI  (55)

	FI  shift 211
	.  error


state 200
	elif : ELIF expr . THEN block  (65)
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	THEN  shift 212
	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	.  error


state 201
	instr : IF expr THEN block elifs ELSE . block FI  (53)
	block : .  (68)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 149
	STOP  shift 150
	RETURN  shift 151
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	FI  reduce 68

	instr  goto 36
	instrterm  goto 152
	block  goto 213
	instrs  goto 154
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41


state 202
	instr : IF expr THEN block elifs FI .  (54)

	.  reduce 54


state 203
	elifs : elifs elif .  (67)

	.  reduce 67


state 204
	instr : FOR expr UNTIL expr STEP expr . DO $$5 block DONE  (57)
	expr : expr . '^' expr  (91)
	expr : expr . '+' expr  (92)
	expr : expr . '-' expr  (93)
	expr : expr . '*' expr  (94)
	expr : expr . '/' expr  (95)
	expr : expr . '%' expr  (96)
	expr : expr . '<' expr  (97)
	expr : expr . '>' expr  (98)
	expr : expr . GE expr  (99)
	expr : expr . LE expr  (100)
	expr : expr . NE expr  (101)
	expr : expr . '=' expr  (102)
	expr : expr . '&' expr  (104)
	expr : expr . '|' expr  (105)

	DO  shift 214
	'|'  shift 78
	'&'  shift 79
	NE  shift 80
	'='  shift 81
	'<'  shift 82
	'>'  shift 83
	LE  shift 84
	GE  shift 85
	'+'  shift 86
	'-'  shift 87
	'*'  shift 88
	'/'  shift 89
	'%'  shift 90
	'^'  shift 91
	.  error


state 205
	param : ARRAY ID '[' . INTEGER ']'  (36)

	INTEGER  shift 215
	.  error


state 206
	params : params ';' param .  (33)

	.  reduce 33


state 207
	body : bodyvars blockfunc .  (46)

	.  reduce 46


state 208
	blockfunc : instrs instrterm .  (75)

	.  reduce 75


state 209
	func : FUNCTION qualifier functype ID $$1 params funcend .  (19)

	.  reduce 19


state 210
	lvalue : ID '(' args ')' '[' expr ']' .  (81)

	.  reduce 81


state 211
	instr : IF expr THEN block ELSE block FI .  (55)

	.  reduce 55


state 212
	elif : ELIF expr THEN . block  (65)
	block : .  (68)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 149
	STOP  shift 150
	RETURN  shift 151
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	ELSE  reduce 68
	ELIF  reduce 68
	FI  reduce 68

	instr  goto 36
	instrterm  goto 152
	block  goto 216
	instrs  goto 154
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41


state 213
	instr : IF expr THEN block elifs ELSE block . FI  (53)

	FI  shift 217
	.  error


state 214
	instr : FOR expr UNTIL expr STEP expr DO . $$5 block DONE  (57)
	$$5 : .  (56)

	.  reduce 56

	$$5  goto 218


state 215
	param : ARRAY ID '[' INTEGER . ']'  (36)

	']'  shift 219
	.  error


state 216
	elif : ELIF expr THEN block .  (65)

	.  reduce 65


state 217
	instr : IF expr THEN block elifs ELSE block FI .  (53)

	.  reduce 53


state 218
	instr : FOR expr UNTIL expr STEP expr DO $$5 . block DONE  (57)
	block : .  (68)

	INTEGER  shift 21
	CHAR  shift 22
	ID  shift 23
	STR  shift 24
	IF  shift 25
	FOR  shift 26
	REPEAT  shift 149
	STOP  shift 150
	RETURN  shift 151
	'&'  shift 27
	'~'  shift 28
	'-'  shift 29
	'?'  shift 30
	'('  shift 31
	DONE  reduce 68

	instr  goto 36
	instrterm  goto 152
	block  goto 220
	instrs  goto 154
	lvalue  goto 38
	expr  goto 39
	integer  goto 40
	string  goto 41


state 219
	param : ARRAY ID '[' INTEGER ']' .  (36)

	.  reduce 36


state 220
	instr : FOR expr UNTIL expr STEP expr DO $$5 block . DONE  (57)

	DONE  shift 221
	.  error


state 221
	instr : FOR expr UNTIL expr STEP expr DO $$5 block DONE .  (57)

	.  reduce 57


73 terminals, 37 nonterminals
120 grammar rules, 222 states
